{"ast":null,"code":"import axios from 'axios';\nimport { ValidateCode } from \"./OauthAPI\";\nimport { Base64 } from \"js-base64\";\nexport const getAllBonuses = tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/bonusAPI/v1/bonuses/' + tokenData.email + '/?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const getAllVaccines = tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/vaccinationAPI/v1/vaccinations/' + tokenData.email + '/?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};","map":{"version":3,"names":["axios","ValidateCode","Base64","getAllBonuses","tokenData","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","data","catch","authError","code","GET_FAIL","method","requestedPath","split","getAllVaccines"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/ExternalResourcesAPI.ts"],"sourcesContent":["import axios from 'axios';\nimport {AuthError, TokenData, ValidateCode} from \"./OauthAPI\";\nimport {Base64} from \"js-base64\";\n\nexport type BonusType={\n    id: string,\n    name:string,\n    description:string,\n    email_owner:string,\n    type:string,\n    end_date:number,\n}\n\nexport type VaccineType={\n     email_owner:string;\n     date:number;\n     location:string;\n     description:string;\n     vaccineName:string;\n     dose:string;\n     manufacturer:string;\n     doctor:string;\n     nurse:string;\n}\n\nexport const getAllBonuses=(tokenData: TokenData): Promise<BonusType[]|AuthError>=>{\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://api-gateway:8080/bonusAPI/v1/bonuses/'+ tokenData.email+'/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}\n\nexport const getAllVaccines=(tokenData: TokenData): Promise<VaccineType[]|AuthError>=>{\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://api-gateway:8080/vaccinationAPI/v1/vaccinations/'+ tokenData.email+'/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAA8BC,YAAY,QAAO,YAAY;AAC7D,SAAQC,MAAM,QAAO,WAAW;AAuBhC,OAAO,MAAMC,aAAa,GAAEC,SAAoB,IAAmC;EAC/E,MAAMC,WAAW,GAAEH,MAAM,CAACI,MAAM,CAACF,SAAS,CAACG,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAEN,MAAM,CAACI,MAAM,CAACF,SAAS,CAACK,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAER,MAAM,CAACI,MAAM,CAACF,SAAS,CAACO,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAG,8CAA8C,GAAER,SAAS,CAACG,KAAK,GAAC,UAAU,GAAEF,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EAC7J,OAAOV,KAAK,CAACa,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IACrC;IACA,OAAOA,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;IACX,MAAMC,SAAoB,GAAG;MACzBC,IAAI,EAAElB,YAAY,CAACmB,QAAQ;MAC3BC,MAAM,EAAE,KAAK;MACbC,aAAa,EAAEV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,OAAOL,SAAS;EACpB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMM,cAAc,GAAEpB,SAAoB,IAAqC;EAClF,MAAMC,WAAW,GAAEH,MAAM,CAACI,MAAM,CAACF,SAAS,CAACG,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAEN,MAAM,CAACI,MAAM,CAACF,SAAS,CAACK,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAER,MAAM,CAACI,MAAM,CAACF,SAAS,CAACO,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAG,yDAAyD,GAAER,SAAS,CAACG,KAAK,GAAC,UAAU,GAAEF,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EACxK,OAAOV,KAAK,CAACa,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IACrC;IACA,OAAOA,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;IACX,MAAMC,SAAoB,GAAG;MACzBC,IAAI,EAAElB,YAAY,CAACmB,QAAQ;MAC3BC,MAAM,EAAE,KAAK;MACbC,aAAa,EAAEV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,OAAOL,SAAS;EACpB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}