{"ast":null,"code":"import axios from'axios';import{ValidateCode}from\"./OauthAPI\";import{Base64}from\"js-base64\";export var getAllBonuses=function getAllBonuses(tokenData){console.log('recupero bonus');var emailBase64=Base64.encode(tokenData.email);var providerBase64=Base64.encode(tokenData.provider);var tokenBase64=Base64.encode(tokenData.token);var url='http://localhost:8080/bonusAPI/v1/bonuses/'+tokenData.email+'/?email='+emailBase64+'&provider='+providerBase64+'&token='+tokenBase64;return axios.get(url).then(function(response){// console.log('response', response.data)\nreturn response.data;}).catch(function(){var authError={code:ValidateCode.GET_FAIL,method:'GET',requestedPath:url.split('?')[0]};return authError;});};export var getAllVaccines=function getAllVaccines(tokenData){console.log('recupero vaccini');var emailBase64=Base64.encode(tokenData.email);var providerBase64=Base64.encode(tokenData.provider);var tokenBase64=Base64.encode(tokenData.token);var url='http://localhost:8080/vaccinationAPI/v1/vaccinations/'+tokenData.email+'/?email='+emailBase64+'&provider='+providerBase64+'&token='+tokenBase64;return axios.get(url).then(function(response){// console.log('response', response.data)\nreturn response.data;}).catch(function(){var authError={code:ValidateCode.GET_FAIL,method:'GET',requestedPath:url.split('?')[0]};return authError;});};","map":{"version":3,"names":["axios","ValidateCode","Base64","getAllBonuses","tokenData","console","log","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","data","catch","authError","code","GET_FAIL","method","requestedPath","split","getAllVaccines"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/ExternalResourcesAPI.ts"],"sourcesContent":["import axios from 'axios';\nimport {AuthError, TokenData, ValidateCode} from \"./OauthAPI\";\nimport {Base64} from \"js-base64\";\n\nexport type BonusType={\n    id: string,\n    name:string,\n    description:string,\n    email_owner:string,\n    type:string,\n    end_date:number,\n}\n\nexport type VaccineType={\n     email_owner:string;\n     date:number;\n     location:string;\n     description:string;\n     vaccineName:string;\n     dose:string;\n     manufacturer:string;\n     doctor:string;\n     nurse:string;\n}\n\nexport const getAllBonuses=(tokenData: TokenData): Promise<BonusType[]|AuthError>=>{\n    console.log('recupero bonus')\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/bonusAPI/v1/bonuses/'+ tokenData.email+'/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}\n\nexport const getAllVaccines=(tokenData: TokenData): Promise<VaccineType[]|AuthError>=>{\n    console.log('recupero vaccini')\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/vaccinationAPI/v1/vaccinations/'+ tokenData.email+'/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAA8BC,YAAY,KAAO,YAAY,CAC7D,OAAQC,MAAM,KAAO,WAAW,CAuBhC,MAAO,IAAMC,cAAa,CAAC,QAAdA,cAAa,CAAEC,SAAoB,CAAmC,CAC/EC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7B,GAAMC,YAAW,CAAEL,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACK,KAAK,CAAC,CACjD,GAAMC,eAAc,CAAER,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACO,QAAQ,CAAC,CACvD,GAAMC,YAAW,CAAEV,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACS,KAAK,CAAC,CACjD,GAAMC,IAAG,CAAG,4CAA4C,CAAEV,SAAS,CAACK,KAAK,CAAC,UAAU,CAAEF,WAAW,CAAG,YAAY,CAAGG,cAAc,CAAG,SAAS,CAAGE,WAAW,CAC3J,MAAOZ,MAAK,CAACe,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAC,SAACC,QAAQ,CAAK,CACrC;AACA,MAAOA,SAAQ,CAACC,IAAI,CACxB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAM,CACX,GAAMC,UAAoB,CAAG,CACzBC,IAAI,CAAEpB,YAAY,CAACqB,QAAQ,CAC3BC,MAAM,CAAE,KAAK,CACbC,aAAa,CAAEV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CACnC,CAAC,CACD,MAAOL,UAAS,CACpB,CAAC,CAAC,CACN,CAAC,CAED,MAAO,IAAMM,eAAc,CAAC,QAAfA,eAAc,CAAEtB,SAAoB,CAAqC,CAClFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAC/B,GAAMC,YAAW,CAAEL,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACK,KAAK,CAAC,CACjD,GAAMC,eAAc,CAAER,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACO,QAAQ,CAAC,CACvD,GAAMC,YAAW,CAAEV,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACS,KAAK,CAAC,CACjD,GAAMC,IAAG,CAAG,uDAAuD,CAAEV,SAAS,CAACK,KAAK,CAAC,UAAU,CAAEF,WAAW,CAAG,YAAY,CAAGG,cAAc,CAAG,SAAS,CAAGE,WAAW,CACtK,MAAOZ,MAAK,CAACe,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAC,SAACC,QAAQ,CAAK,CACrC;AACA,MAAOA,SAAQ,CAACC,IAAI,CACxB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAM,CACX,GAAMC,UAAoB,CAAG,CACzBC,IAAI,CAAEpB,YAAY,CAACqB,QAAQ,CAC3BC,MAAM,CAAE,KAAK,CACbC,aAAa,CAAEV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CACnC,CAAC,CACD,MAAOL,UAAS,CACpB,CAAC,CAAC,CACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}