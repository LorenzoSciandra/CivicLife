{"ast":null,"code":"import { ValidateCode } from \"./OauthAPI\";\nimport axios from \"axios\";\nimport { Base64 } from \"js-base64\";\nexport let UserStatus;\n(function (UserStatus) {\n  UserStatus[\"ACTIVE\"] = \"ACTIVE\";\n  UserStatus[\"SUSPENDED\"] = \"SUSPENDED\";\n  UserStatus[\"BANNED\"] = \"BANNED\";\n})(UserStatus || (UserStatus = {}));\nexport let UserStatusColor;\n(function (UserStatusColor) {\n  UserStatusColor[\"ACTIVE\"] = \"#4CAF50\";\n  UserStatusColor[\"SUSPENDED\"] = \"#FFC107\";\n  UserStatusColor[\"BANNED\"] = \"#F44336\";\n})(UserStatusColor || (UserStatusColor = {}));\nexport const getLoggedUser = tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/userAPI/v1/user/get/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.LOGIN_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport function isInstanceOfUser(object) {\n  return 'email' in object;\n}\nexport const updateUser = async (tokenData, newUser) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/userAPI/v1/user/update/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url, JSON.stringify(newUser), {\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const authorizeBonusAccess = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/userAPI/v1/user/authorizeBonus/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const authorizeVaccineAccess = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/userAPI/v1/user/authorizeVaccine/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const getAllUsersEmail = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/userAPI/v1/users/emails/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\n\n//ADMIN METHODS\n\nexport const updateUserStatus = async (tokenData, newStatus, emailToUpdate) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/userAPI/v1/user/update/status/' + emailToUpdate + '/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url, Base64.encode(newStatus), {\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const getAllUsers = tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://api-gateway:8080/userAPI/v1/users/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    // console.log('response', response.data)\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};","map":{"version":3,"names":["ValidateCode","axios","Base64","UserStatus","UserStatusColor","getLoggedUser","tokenData","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","data","catch","authError","code","LOGIN_FAIL","method","requestedPath","split","isInstanceOfUser","object","updateUser","newUser","post","JSON","stringify","headers","value","error","UPDATE_FAIL","authorizeBonusAccess","authorizeVaccineAccess","getAllUsersEmail","updateUserStatus","newStatus","emailToUpdate","getAllUsers","GET_FAIL"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts"],"sourcesContent":["import {AuthError, TokenData, ValidateCode} from \"./OauthAPI\";\nimport axios from \"axios\";\nimport {Base64} from \"js-base64\";\n\nexport enum UserStatus{\n    ACTIVE='ACTIVE', // puo fare tutto\n    SUSPENDED='SUSPENDED', // puo fare tutto tranne creare iniziative\n    BANNED='BANNED' // puo solo votare le iniziative sono bloccate\n}\n\nexport enum UserStatusColor{\n    ACTIVE='#4CAF50',\n    SUSPENDED='#FFC107',\n    BANNED='#F44336'\n}\n\nexport interface User{\n    email: string,\n    name: string,\n    surname: string,\n    admin: boolean,\n    fiscalCode:string,\n    residence:string,\n    birthDate:number,\n    domicile:string,\n    status:UserStatus,\n    telephonNumber: number,\n    authorizeBonus: boolean,\n    authorizeVaccine: boolean,\n}\n\nexport const getLoggedUser = (tokenData: TokenData) : Promise<User | AuthError>=> {\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://api-gateway:8080/userAPI/v1/user/get/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get<User | AuthError>(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n            const authError: AuthError = {\n                code: ValidateCode.LOGIN_FAIL,\n                method: 'GET',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        }\n    )\n}\n\nexport function isInstanceOfUser(object:any): object is User {\n    return 'email' in object\n}\n\n\nexport const updateUser=async (tokenData: TokenData, newUser: User): Promise<boolean | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://api-gateway:8080/userAPI/v1/user/update/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean| AuthError>(url,\n        JSON.stringify(newUser),\n        {\n            headers: {\"Content-Type\": \"text/plain\"}\n        })\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            const authError: AuthError = {\n                code: ValidateCode.UPDATE_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        });\n}\n\nexport const authorizeBonusAccess=async (tokenData: TokenData): Promise<boolean | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://api-gateway:8080/userAPI/v1/user/authorizeBonus/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.get(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n            const authError: AuthError = {\n                code: ValidateCode.UPDATE_FAIL,\n                method: 'GET',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        })\n}\n\nexport const authorizeVaccineAccess=async (tokenData: TokenData): Promise<boolean | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://api-gateway:8080/userAPI/v1/user/authorizeVaccine/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.get(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.UPDATE_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}\n\nexport const getAllUsersEmail=async (tokenData: TokenData): Promise<string[] | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://api-gateway:8080/userAPI/v1/users/emails/' +tokenData.email +'?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.get(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.UPDATE_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}\n\n\n//ADMIN METHODS\n\nexport const updateUserStatus = async (tokenData:TokenData, newStatus:UserStatus, emailToUpdate:string): Promise<boolean | AuthError>=>{\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://api-gateway:8080/userAPI/v1/user/update/status/' + emailToUpdate +'/'+ tokenData.email+ '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.post<boolean | AuthError>(url,\n        Base64.encode(newStatus),\n        {\n            headers: {\"Content-Type\": \"text/plain\"}\n        })\n        .then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n            const authError: AuthError = {\n                code: ValidateCode.UPDATE_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        })\n}\n\nexport const getAllUsers = (tokenData: TokenData): Promise<User[] | AuthError> => {\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://api-gateway:8080/userAPI/v1/users/'+tokenData.email+'?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get<User[] | AuthError>(url).then((response) => {\n        // console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}