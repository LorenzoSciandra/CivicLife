{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _request = require('request');\nvar _request2 = _interopRequireDefault(_request);\nvar _async = require('async');\nvar _async2 = _interopRequireDefault(_async);\nvar _Logger = require('./Logger');\nvar _Logger2 = _interopRequireDefault(_Logger);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/*\n  Utility class for pulling AWS metadata that Eureka requires when\n  registering as an Amazon instance (datacenter).\n*/\nvar AwsMetadata = function () {\n  function AwsMetadata() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, AwsMetadata);\n    this.logger = config.logger || new _Logger2.default();\n    this.host = config.host || '169.254.169.254';\n  }\n  AwsMetadata.prototype.fetchMetadata = function fetchMetadata(resultsCallback) {\n    var _this = this;\n    _async2.default.parallel({\n      'ami-id': function amiId(callback) {\n        _this.lookupMetadataKey('ami-id', callback);\n      },\n      'instance-id': function instanceId(callback) {\n        _this.lookupMetadataKey('instance-id', callback);\n      },\n      'instance-type': function instanceType(callback) {\n        _this.lookupMetadataKey('instance-type', callback);\n      },\n      'local-ipv4': function localIpv4(callback) {\n        _this.lookupMetadataKey('local-ipv4', callback);\n      },\n      'local-hostname': function localHostname(callback) {\n        _this.lookupMetadataKey('local-hostname', callback);\n      },\n      'availability-zone': function availabilityZone(callback) {\n        _this.lookupMetadataKey('placement/availability-zone', callback);\n      },\n      'public-hostname': function publicHostname(callback) {\n        _this.lookupMetadataKey('public-hostname', callback);\n      },\n      'public-ipv4': function publicIpv4(callback) {\n        _this.lookupMetadataKey('public-ipv4', callback);\n      },\n      mac: function mac(callback) {\n        _this.lookupMetadataKey('mac', callback);\n      },\n      accountId: function accountId(callback) {\n        // the accountId is in the identity document.\n        _this.lookupInstanceIdentity(function (error, identity) {\n          callback(null, identity ? identity.accountId : null);\n        });\n      }\n    }, function (error, results) {\n      // we need the mac before we can lookup the vpcId...\n      _this.lookupMetadataKey('network/interfaces/macs/' + results.mac + '/vpc-id', function (err, vpcId) {\n        results['vpc-id'] = vpcId;\n        _this.logger.debug('Found Instance AWS Metadata', results);\n        var filteredResults = Object.keys(results).reduce(function (filtered, prop) {\n          if (results[prop]) filtered[prop] = results[prop];\n          return filtered;\n        }, {});\n        resultsCallback(filteredResults);\n      });\n    });\n  };\n  AwsMetadata.prototype.lookupMetadataKey = function lookupMetadataKey(key, callback) {\n    var _this2 = this;\n    _request2.default.get({\n      url: 'http://' + this.host + '/latest/meta-data/' + key\n    }, function (error, response, body) {\n      if (error) {\n        _this2.logger.error('Error requesting metadata key', error);\n      }\n      callback(null, error || response.statusCode !== 200 ? null : body);\n    });\n  };\n  AwsMetadata.prototype.lookupInstanceIdentity = function lookupInstanceIdentity(callback) {\n    var _this3 = this;\n    _request2.default.get({\n      url: 'http://' + this.host + '/latest/dynamic/instance-identity/document'\n    }, function (error, response, body) {\n      if (error) {\n        _this3.logger.error('Error requesting instance identity document', error);\n      }\n      callback(null, error || response.statusCode !== 200 ? null : JSON.parse(body));\n    });\n  };\n  return AwsMetadata;\n}();\nexports.default = AwsMetadata;","map":{"version":3,"names":["exports","__esModule","_request","require","_request2","_interopRequireDefault","_async","_async2","_Logger","_Logger2","obj","default","_classCallCheck","instance","Constructor","TypeError","AwsMetadata","config","arguments","length","undefined","logger","host","prototype","fetchMetadata","resultsCallback","_this","parallel","amiId","callback","lookupMetadataKey","instanceId","instanceType","localIpv4","localHostname","availabilityZone","publicHostname","publicIpv4","mac","accountId","lookupInstanceIdentity","error","identity","results","err","vpcId","debug","filteredResults","Object","keys","reduce","filtered","prop","key","_this2","get","url","response","body","statusCode","_this3","JSON","parse"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/node_modules/eureka-js-client/lib/AwsMetadata.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _async = require('async');\n\nvar _async2 = _interopRequireDefault(_async);\n\nvar _Logger = require('./Logger');\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n  Utility class for pulling AWS metadata that Eureka requires when\n  registering as an Amazon instance (datacenter).\n*/\nvar AwsMetadata = function () {\n  function AwsMetadata() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, AwsMetadata);\n\n    this.logger = config.logger || new _Logger2.default();\n    this.host = config.host || '169.254.169.254';\n  }\n\n  AwsMetadata.prototype.fetchMetadata = function fetchMetadata(resultsCallback) {\n    var _this = this;\n\n    _async2.default.parallel({\n      'ami-id': function amiId(callback) {\n        _this.lookupMetadataKey('ami-id', callback);\n      },\n      'instance-id': function instanceId(callback) {\n        _this.lookupMetadataKey('instance-id', callback);\n      },\n      'instance-type': function instanceType(callback) {\n        _this.lookupMetadataKey('instance-type', callback);\n      },\n      'local-ipv4': function localIpv4(callback) {\n        _this.lookupMetadataKey('local-ipv4', callback);\n      },\n      'local-hostname': function localHostname(callback) {\n        _this.lookupMetadataKey('local-hostname', callback);\n      },\n      'availability-zone': function availabilityZone(callback) {\n        _this.lookupMetadataKey('placement/availability-zone', callback);\n      },\n      'public-hostname': function publicHostname(callback) {\n        _this.lookupMetadataKey('public-hostname', callback);\n      },\n      'public-ipv4': function publicIpv4(callback) {\n        _this.lookupMetadataKey('public-ipv4', callback);\n      },\n      mac: function mac(callback) {\n        _this.lookupMetadataKey('mac', callback);\n      },\n      accountId: function accountId(callback) {\n        // the accountId is in the identity document.\n        _this.lookupInstanceIdentity(function (error, identity) {\n          callback(null, identity ? identity.accountId : null);\n        });\n      }\n    }, function (error, results) {\n      // we need the mac before we can lookup the vpcId...\n      _this.lookupMetadataKey('network/interfaces/macs/' + results.mac + '/vpc-id', function (err, vpcId) {\n        results['vpc-id'] = vpcId;\n        _this.logger.debug('Found Instance AWS Metadata', results);\n        var filteredResults = Object.keys(results).reduce(function (filtered, prop) {\n          if (results[prop]) filtered[prop] = results[prop];\n          return filtered;\n        }, {});\n        resultsCallback(filteredResults);\n      });\n    });\n  };\n\n  AwsMetadata.prototype.lookupMetadataKey = function lookupMetadataKey(key, callback) {\n    var _this2 = this;\n\n    _request2.default.get({\n      url: 'http://' + this.host + '/latest/meta-data/' + key\n    }, function (error, response, body) {\n      if (error) {\n        _this2.logger.error('Error requesting metadata key', error);\n      }\n      callback(null, error || response.statusCode !== 200 ? null : body);\n    });\n  };\n\n  AwsMetadata.prototype.lookupInstanceIdentity = function lookupInstanceIdentity(callback) {\n    var _this3 = this;\n\n    _request2.default.get({\n      url: 'http://' + this.host + '/latest/dynamic/instance-identity/document'\n    }, function (error, response, body) {\n      if (error) {\n        _this3.logger.error('Error requesting instance identity document', error);\n      }\n      callback(null, error || response.statusCode !== 200 ? null : JSON.parse(body));\n    });\n  };\n\n  return AwsMetadata;\n}();\n\nexports.default = AwsMetadata;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}