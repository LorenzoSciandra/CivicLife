{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _request = require('request');\nvar _request2 = _interopRequireDefault(_request);\nvar _fs = require('fs');\nvar _fs2 = _interopRequireDefault(_fs);\nvar _jsYaml = require('js-yaml');\nvar _jsYaml2 = _interopRequireDefault(_jsYaml);\nvar _lodash = require('lodash');\nvar _deltaUtils = require('./deltaUtils');\nvar _path = require('path');\nvar _path2 = _interopRequireDefault(_path);\nvar _async = require('async');\nvar _events = require('events');\nvar _AwsMetadata = require('./AwsMetadata');\nvar _AwsMetadata2 = _interopRequireDefault(_AwsMetadata);\nvar _ConfigClusterResolver = require('./ConfigClusterResolver');\nvar _ConfigClusterResolver2 = _interopRequireDefault(_ConfigClusterResolver);\nvar _DnsClusterResolver = require('./DnsClusterResolver');\nvar _DnsClusterResolver2 = _interopRequireDefault(_DnsClusterResolver);\nvar _Logger = require('./Logger');\nvar _Logger2 = _interopRequireDefault(_Logger);\nvar _defaultConfig = require('./defaultConfig');\nvar _defaultConfig2 = _interopRequireDefault(_defaultConfig);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nfunction noop() {}\n\n/*\n  Eureka JS client\n  This module handles registration with a Eureka server, as well as heartbeats\n  for reporting instance health.\n*/\n\nfunction fileExists(file) {\n  try {\n    return _fs2.default.statSync(file);\n  } catch (e) {\n    return false;\n  }\n}\nfunction getYaml(file) {\n  var yml = {};\n  if (!fileExists(file)) {\n    return yml; // no configuration file\n  }\n\n  try {\n    yml = _jsYaml2.default.safeLoad(_fs2.default.readFileSync(file, 'utf8'));\n  } catch (e) {\n    // configuration file exists but was malformed\n    throw new Error('Error loading YAML configuration file: ' + file + ' ' + e);\n  }\n  return yml;\n}\nvar Eureka = function (_EventEmitter) {\n  _inherits(Eureka, _EventEmitter);\n  function Eureka() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Eureka);\n\n    // Allow passing in a custom logger:\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n    _this.logger = config.logger || new _Logger2.default();\n    _this.logger.debug('initializing eureka client');\n\n    // Load up the current working directory and the environment:\n    var cwd = config.cwd || process.cwd();\n    var env = process.env.EUREKA_ENV || process.env.NODE_ENV || 'development';\n    var filename = config.filename || 'eureka-client';\n\n    // Load in the configuration files:\n    var defaultYml = getYaml(_path2.default.join(cwd, filename + '.yml'));\n    var envYml = getYaml(_path2.default.join(cwd, filename + '-' + env + '.yml'));\n\n    // apply config overrides in appropriate order\n    _this.config = (0, _lodash.merge)({}, _defaultConfig2.default, defaultYml, envYml, config);\n\n    // Validate the provided the values we need:\n    _this.validateConfig(_this.config);\n    _this.requestMiddleware = _this.config.requestMiddleware;\n    _this.hasFullRegistry = false;\n    if (_this.amazonDataCenter) {\n      _this.metadataClient = new _AwsMetadata2.default({\n        logger: _this.logger\n      });\n    }\n    if (_this.config.eureka.useDns) {\n      _this.clusterResolver = new _DnsClusterResolver2.default(_this.config, _this.logger);\n    } else {\n      _this.clusterResolver = new _ConfigClusterResolver2.default(_this.config, _this.logger);\n    }\n    _this.cache = {\n      app: {},\n      vip: {}\n    };\n    return _this;\n  }\n\n  /*\n    Helper method to get the instance ID. If the datacenter is AWS, this will be the\n    instance-id in the metadata. Else, it's the hostName.\n  */\n\n  /*\n    Registers instance with Eureka, begins heartbeats, and fetches registry.\n  */\n  Eureka.prototype.start = function start() {\n    var _this2 = this;\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    (0, _async.series)([function (done) {\n      if (_this2.metadataClient && _this2.config.eureka.fetchMetadata) {\n        return _this2.addInstanceMetadata(done);\n      }\n      done();\n    }, function (done) {\n      if (_this2.config.eureka.registerWithEureka) {\n        return _this2.register(done);\n      }\n      done();\n    }, function (done) {\n      if (_this2.config.eureka.registerWithEureka) {\n        _this2.startHeartbeats();\n      }\n      if (_this2.config.eureka.fetchRegistry) {\n        _this2.startRegistryFetches();\n        if (_this2.config.eureka.waitForRegistry) {\n          var waitForRegistryUpdate = function waitForRegistryUpdate(cb) {\n            _this2.fetchRegistry(function () {\n              var instances = _this2.getInstancesByVipAddress(_this2.config.instance.vipAddress);\n              if (instances.length === 0) setTimeout(function () {\n                return waitForRegistryUpdate(cb);\n              }, 2000);else cb();\n            });\n          };\n          return waitForRegistryUpdate(done);\n        }\n        _this2.fetchRegistry(done);\n      } else {\n        done();\n      }\n    }], function (err) {\n      for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n      if (err) {\n        _this2.logger.warn('Error starting the Eureka Client', err);\n      } else {\n        _this2.emit('started');\n      }\n      callback.apply(undefined, [err].concat(rest));\n    });\n  };\n\n  /*\n    De-registers instance with Eureka, stops heartbeats / registry fetches.\n  */\n\n  Eureka.prototype.stop = function stop() {\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    clearInterval(this.registryFetch);\n    if (this.config.eureka.registerWithEureka) {\n      clearInterval(this.heartbeat);\n      this.deregister(callback);\n    } else {\n      callback();\n    }\n  };\n\n  /*\n    Validates client configuration.\n  */\n\n  Eureka.prototype.validateConfig = function validateConfig(config) {\n    function validate(namespace, key) {\n      if (!config[namespace][key]) {\n        throw new TypeError('Missing \"' + namespace + '.' + key + '\" config value.');\n      }\n    }\n    if (config.eureka.registerWithEureka) {\n      validate('instance', 'app');\n      validate('instance', 'vipAddress');\n      validate('instance', 'port');\n      validate('instance', 'dataCenterInfo');\n    }\n    if (typeof config.requestMiddleware !== 'function') {\n      throw new TypeError('requestMiddleware must be a function');\n    }\n  };\n\n  /*\n    Registers with the Eureka server and initializes heartbeats on registration success.\n  */\n\n  Eureka.prototype.register = function register() {\n    var _this3 = this;\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    this.config.instance.status = 'UP';\n    var connectionTimeout = setTimeout(function () {\n      _this3.logger.warn('It looks like it\\'s taking a while to register with ' + 'Eureka. This usually means there is an issue connecting to the host ' + 'specified. Start application with NODE_DEBUG=request for more logging.');\n    }, 10000);\n    this.eurekaRequest({\n      method: 'POST',\n      uri: this.config.instance.app,\n      json: true,\n      body: {\n        instance: this.config.instance\n      }\n    }, function (error, response, body) {\n      clearTimeout(connectionTimeout);\n      if (!error && response.statusCode === 204) {\n        _this3.logger.info('registered with eureka: ', _this3.config.instance.app + '/' + _this3.instanceId);\n        _this3.emit('registered');\n        return callback(null);\n      } else if (error) {\n        _this3.logger.warn('Error registering with eureka client.', error);\n        return callback(error);\n      }\n      return callback(new Error('eureka registration FAILED: status: ' + response.statusCode + ' body: ' + body));\n    });\n  };\n\n  /*\n    De-registers with the Eureka server and stops heartbeats.\n  */\n\n  Eureka.prototype.deregister = function deregister() {\n    var _this4 = this;\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    this.eurekaRequest({\n      method: 'DELETE',\n      uri: this.config.instance.app + '/' + this.instanceId\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this4.logger.info('de-registered with eureka: ' + _this4.config.instance.app + '/' + _this4.instanceId);\n        _this4.emit('deregistered');\n        return callback(null);\n      } else if (error) {\n        _this4.logger.warn('Error deregistering with eureka', error);\n        return callback(error);\n      }\n      return callback(new Error('eureka deregistration FAILED: status: ' + response.statusCode + ' body: ' + body));\n    });\n  };\n\n  /*\n    Sets up heartbeats on interval for the life of the application.\n    Heartbeat interval by setting configuration property: eureka.heartbeatInterval\n  */\n\n  Eureka.prototype.startHeartbeats = function startHeartbeats() {\n    var _this5 = this;\n    this.heartbeat = setInterval(function () {\n      _this5.renew();\n    }, this.config.eureka.heartbeatInterval);\n  };\n  Eureka.prototype.renew = function renew() {\n    var _this6 = this;\n    this.eurekaRequest({\n      method: 'PUT',\n      uri: this.config.instance.app + '/' + this.instanceId\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this6.logger.debug('eureka heartbeat success');\n        _this6.emit('heartbeat');\n      } else if (!error && response.statusCode === 404) {\n        _this6.logger.warn('eureka heartbeat FAILED, Re-registering app');\n        _this6.register();\n      } else {\n        if (error) {\n          _this6.logger.error('An error in the request occured.', error);\n        }\n        _this6.logger.warn('eureka heartbeat FAILED, will retry.' + ('statusCode: ' + (response ? response.statusCode : 'unknown')) + ('body: ' + body + ' ' + (error | '') + ' '));\n      }\n    });\n  };\n\n  /*\n    Sets up registry fetches on interval for the life of the application.\n    Registry fetch interval setting configuration property: eureka.registryFetchInterval\n  */\n\n  Eureka.prototype.startRegistryFetches = function startRegistryFetches() {\n    var _this7 = this;\n    this.registryFetch = setInterval(function () {\n      _this7.fetchRegistry(function (err) {\n        if (err) _this7.logger.warn('Error fetching registry', err);\n      });\n    }, this.config.eureka.registryFetchInterval);\n  };\n\n  /*\n    Retrieves a list of instances from Eureka server given an appId\n  */\n\n  Eureka.prototype.getInstancesByAppId = function getInstancesByAppId(appId) {\n    if (!appId) {\n      throw new RangeError('Unable to query instances with no appId');\n    }\n    var instances = this.cache.app[appId.toUpperCase()] || [];\n    if (instances.length === 0) {\n      this.logger.warn('Unable to retrieve instances for appId: ' + appId);\n    }\n    return instances;\n  };\n\n  /*\n    Retrieves a list of instances from Eureka server given a vipAddress\n   */\n\n  Eureka.prototype.getInstancesByVipAddress = function getInstancesByVipAddress(vipAddress) {\n    if (!vipAddress) {\n      throw new RangeError('Unable to query instances with no vipAddress');\n    }\n    var instances = this.cache.vip[vipAddress] || [];\n    if (instances.length === 0) {\n      this.logger.warn('Unable to retrieves instances for vipAddress: ' + vipAddress);\n    }\n    return instances;\n  };\n\n  /*\n    Orchestrates fetching registry\n   */\n\n  Eureka.prototype.fetchRegistry = function fetchRegistry() {\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    if (this.config.shouldUseDelta && this.hasFullRegistry) {\n      this.fetchDelta(callback);\n    } else {\n      this.fetchFullRegistry(callback);\n    }\n  };\n\n  /*\n    Retrieves all applications registered with the Eureka server\n  */\n\n  Eureka.prototype.fetchFullRegistry = function fetchFullRegistry() {\n    var _this8 = this;\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    this.eurekaRequest({\n      uri: '',\n      headers: {\n        Accept: 'application/json'\n      }\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this8.logger.debug('retrieved full registry successfully');\n        try {\n          _this8.transformRegistry(JSON.parse(body));\n        } catch (ex) {\n          return callback(ex);\n        }\n        _this8.emit('registryUpdated');\n        _this8.hasFullRegistry = true;\n        return callback(null);\n      } else if (error) {\n        _this8.logger.warn('Error fetching registry', error);\n        return callback(error);\n      }\n      callback(new Error('Unable to retrieve full registry from Eureka server'));\n    });\n  };\n\n  /*\n  Retrieves all applications registered with the Eureka server\n  */\n\n  Eureka.prototype.fetchDelta = function fetchDelta() {\n    var _this9 = this;\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    this.eurekaRequest({\n      uri: 'delta',\n      headers: {\n        Accept: 'application/json'\n      }\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this9.logger.debug('retrieved delta successfully');\n        var applications = void 0;\n        try {\n          var jsonBody = JSON.parse(body);\n          applications = jsonBody.applications.application;\n          _this9.handleDelta(_this9.cache, applications);\n          return callback(null);\n        } catch (ex) {\n          return callback(ex);\n        }\n      } else if (error) {\n        _this9.logger.warn('Error fetching delta registry', error);\n        return callback(error);\n      }\n      callback(new Error('Unable to retrieve delta registry from Eureka server'));\n    });\n  };\n  /*\n    Transforms the given registry and caches the registry locally\n   */\n\n  Eureka.prototype.transformRegistry = function transformRegistry(registry) {\n    var _this10 = this;\n    if (!registry) {\n      this.logger.warn('Unable to transform empty registry');\n    } else {\n      if (!registry.applications.application) {\n        return;\n      }\n      var newCache = {\n        app: {},\n        vip: {}\n      };\n      if (Array.isArray(registry.applications.application)) {\n        registry.applications.application.forEach(function (app) {\n          _this10.transformApp(app, newCache);\n        });\n      } else {\n        this.transformApp(registry.applications.application, newCache);\n      }\n      this.cache = newCache;\n    }\n  };\n\n  /*\n    Transforms the given application and places in client cache. If an application\n    has a single instance, the instance is placed into the cache as an array of one\n   */\n\n  Eureka.prototype.transformApp = function transformApp(app, cache) {\n    var _this11 = this;\n    if (app.instance.length) {\n      app.instance.filter(this.validateInstance.bind(this)).forEach(function (inst) {\n        return _this11.addInstance(cache, inst);\n      });\n    } else if (this.validateInstance(app.instance)) {\n      this.addInstance(cache, app.instance);\n    }\n  };\n\n  /*\n    Returns true if instance filtering is disabled, or if the instance is UP\n  */\n\n  Eureka.prototype.validateInstance = function validateInstance(instance) {\n    return !this.config.eureka.filterUpInstances || instance.status === 'UP';\n  };\n\n  /*\n    Returns an array of vipAddresses from string vipAddress given by eureka\n  */\n\n  Eureka.prototype.splitVipAddress = function splitVipAddress(vipAddress) {\n    // eslint-disable-line\n    if (typeof vipAddress !== 'string') {\n      return [];\n    }\n    return vipAddress.split(',');\n  };\n  Eureka.prototype.handleDelta = function handleDelta(cache, appDelta) {\n    var _this12 = this;\n    var delta = (0, _deltaUtils.normalizeDelta)(appDelta);\n    delta.forEach(function (app) {\n      app.instance.forEach(function (instance) {\n        switch (instance.actionType) {\n          case 'ADDED':\n            _this12.addInstance(cache, instance);\n            break;\n          case 'MODIFIED':\n            _this12.modifyInstance(cache, instance);\n            break;\n          case 'DELETED':\n            _this12.deleteInstance(cache, instance);\n            break;\n          default:\n            _this12.logger.warn('Unknown delta actionType', instance.actionType);\n            break;\n        }\n      });\n    });\n  };\n  Eureka.prototype.addInstance = function addInstance(cache, instance) {\n    if (!this.validateInstance(instance)) return;\n    var vipAddresses = this.splitVipAddress(instance.vipAddress);\n    var appName = instance.app.toUpperCase();\n    vipAddresses.forEach(function (vipAddress) {\n      var alreadyContains = (0, _lodash.findIndex)(cache.vip[vipAddress], (0, _deltaUtils.findInstance)(instance)) > -1;\n      if (alreadyContains) return;\n      if (!cache.vip[vipAddress]) {\n        cache.vip[vipAddress] = [];\n      }\n      cache.vip[vipAddress].push(instance);\n    });\n    if (!cache.app[appName]) cache.app[appName] = [];\n    var alreadyContains = (0, _lodash.findIndex)(cache.app[appName], (0, _deltaUtils.findInstance)(instance)) > -1;\n    if (alreadyContains) return;\n    cache.app[appName].push(instance);\n  };\n  Eureka.prototype.modifyInstance = function modifyInstance(cache, instance) {\n    var _this13 = this;\n    var vipAddresses = this.splitVipAddress(instance.vipAddress);\n    var appName = instance.app.toUpperCase();\n    vipAddresses.forEach(function (vipAddress) {\n      var index = (0, _lodash.findIndex)(cache.vip[vipAddress], (0, _deltaUtils.findInstance)(instance));\n      if (index > -1) cache.vip[vipAddress].splice(index, 1, instance);else _this13.addInstance(cache, instance);\n    });\n    var index = (0, _lodash.findIndex)(cache.app[appName], (0, _deltaUtils.findInstance)(instance));\n    if (index > -1) cache.app[appName].splice(cache.vip[instance.vipAddress], 1, instance);else this.addInstance(cache, instance);\n  };\n  Eureka.prototype.deleteInstance = function deleteInstance(cache, instance) {\n    var vipAddresses = this.splitVipAddress(instance.vipAddress);\n    var appName = instance.app.toUpperCase();\n    vipAddresses.forEach(function (vipAddress) {\n      var index = (0, _lodash.findIndex)(cache.vip[vipAddress], (0, _deltaUtils.findInstance)(instance));\n      if (index > -1) cache.vip[vipAddress].splice(index, 1);\n    });\n    var index = (0, _lodash.findIndex)(cache.app[appName], (0, _deltaUtils.findInstance)(instance));\n    if (index > -1) cache.app[appName].splice(cache.vip[instance.vipAddress], 1);\n  };\n\n  /*\n    Fetches the metadata using the built-in client and updates the instance\n    configuration with the hostname and IP address. If the value of the config\n    option 'eureka.useLocalMetadata' is true, then the local IP address and\n    hostname is used. Otherwise, the public IP address and hostname is used. If\n    'eureka.preferIpAddress' is true, the IP address will be used as the hostname.\n     A string replacement is done on the healthCheckUrl, statusPageUrl and\n    homePageUrl so that users can define the URLs with a placeholder for the\n    host ('__HOST__'). This allows flexibility since the host isn't known until\n    the metadata is fetched. The replaced value respects the config option\n    'eureka.useLocalMetadata' as described above.\n     This will only get called when dataCenterInfo.name is Amazon, but you can\n    set config.eureka.fetchMetadata to false if you want to provide your own\n    metadata in AWS environments.\n  */\n\n  Eureka.prototype.addInstanceMetadata = function addInstanceMetadata() {\n    var _this14 = this;\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n    this.metadataClient.fetchMetadata(function (metadataResult) {\n      _this14.config.instance.dataCenterInfo.metadata = (0, _lodash.merge)(_this14.config.instance.dataCenterInfo.metadata, metadataResult);\n      var useLocal = _this14.config.eureka.useLocalMetadata;\n      var preferIpAddress = _this14.config.eureka.preferIpAddress;\n      var metadataHostName = metadataResult[useLocal ? 'local-hostname' : 'public-hostname'];\n      var metadataIpAddress = metadataResult[useLocal ? 'local-ipv4' : 'public-ipv4'];\n      _this14.config.instance.hostName = preferIpAddress ? metadataIpAddress : metadataHostName;\n      _this14.config.instance.ipAddr = metadataIpAddress;\n      if (_this14.config.instance.statusPageUrl) {\n        var statusPageUrl = _this14.config.instance.statusPageUrl;\n        var replacedUrl = statusPageUrl.replace('__HOST__', _this14.config.instance.hostName);\n        _this14.config.instance.statusPageUrl = replacedUrl;\n      }\n      if (_this14.config.instance.healthCheckUrl) {\n        var healthCheckUrl = _this14.config.instance.healthCheckUrl;\n        var _replacedUrl = healthCheckUrl.replace('__HOST__', _this14.config.instance.hostName);\n        _this14.config.instance.healthCheckUrl = _replacedUrl;\n      }\n      if (_this14.config.instance.homePageUrl) {\n        var homePageUrl = _this14.config.instance.homePageUrl;\n        var _replacedUrl2 = homePageUrl.replace('__HOST__', _this14.config.instance.hostName);\n        _this14.config.instance.homePageUrl = _replacedUrl2;\n      }\n      callback();\n    });\n  };\n\n  /*\n    Helper method for making a request to the Eureka server. Handles resolving\n    the current cluster as well as some default options.\n  */\n\n  Eureka.prototype.eurekaRequest = function eurekaRequest(opts, callback) {\n    var _this15 = this;\n    var retryAttempt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    (0, _async.waterfall)([\n    /*\n    Resolve Eureka Clusters\n    */\n    function (done) {\n      _this15.clusterResolver.resolveEurekaUrl(function (err, eurekaUrl) {\n        if (err) return done(err);\n        var requestOpts = (0, _lodash.merge)({}, opts, {\n          baseUrl: eurekaUrl,\n          gzip: true\n        });\n        done(null, requestOpts);\n      }, retryAttempt);\n    },\n    /*\n    Apply Request Middleware\n    */\n    function (requestOpts, done) {\n      _this15.requestMiddleware(requestOpts, function (newRequestOpts) {\n        if ((typeof newRequestOpts === 'undefined' ? 'undefined' : _typeof(newRequestOpts)) !== 'object') {\n          return done(new Error('requestMiddleware did not return an object'));\n        }\n        done(null, newRequestOpts);\n      });\n    },\n    /*\n    Perform Request\n     */\n    function (requestOpts, done) {\n      var method = requestOpts.method ? requestOpts.method.toLowerCase() : 'get';\n      _request2.default[method](requestOpts, function (error, response, body) {\n        done(error, response, body, requestOpts);\n      });\n    }],\n    /*\n    Handle Final Output.\n     */\n    function (error, response, body, requestOpts) {\n      if (error) _this15.logger.error('Problem making eureka request', error);\n\n      // Perform retry if request failed and we have attempts left\n      var responseInvalid = response && response.statusCode && String(response.statusCode)[0] === '5';\n      if ((error || responseInvalid) && retryAttempt < _this15.config.eureka.maxRetries) {\n        var nextRetryDelay = _this15.config.eureka.requestRetryDelay * (retryAttempt + 1);\n        _this15.logger.warn('Eureka request failed to endpoint ' + requestOpts.baseUrl + ', ' + ('next server retry in ' + nextRetryDelay + 'ms'));\n        setTimeout(function () {\n          return _this15.eurekaRequest(opts, callback, retryAttempt + 1);\n        }, nextRetryDelay);\n        return;\n      }\n      callback(error, response, body);\n    });\n  };\n  _createClass(Eureka, [{\n    key: 'instanceId',\n    get: function get() {\n      if (this.config.instance.instanceId) {\n        return this.config.instance.instanceId;\n      } else if (this.amazonDataCenter) {\n        return this.config.instance.dataCenterInfo.metadata['instance-id'];\n      }\n      return this.config.instance.hostName;\n    }\n\n    /*\n      Helper method to determine if this is an AWS datacenter.\n    */\n  }, {\n    key: 'amazonDataCenter',\n    get: function get() {\n      var dataCenterInfo = this.config.instance.dataCenterInfo;\n      return dataCenterInfo && dataCenterInfo.name && dataCenterInfo.name.toLowerCase() === 'amazon';\n    }\n  }]);\n  return Eureka;\n}(_events.EventEmitter);\nexports.default = Eureka;","map":{"version":3,"names":["exports","__esModule","_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_request","require","_request2","_interopRequireDefault","_fs","_fs2","_jsYaml","_jsYaml2","_lodash","_deltaUtils","_path","_path2","_async","_events","_AwsMetadata","_AwsMetadata2","_ConfigClusterResolver","_ConfigClusterResolver2","_DnsClusterResolver","_DnsClusterResolver2","_Logger","_Logger2","_defaultConfig","_defaultConfig2","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","value","setPrototypeOf","__proto__","noop","fileExists","file","statSync","e","getYaml","yml","safeLoad","readFileSync","Error","Eureka","_EventEmitter","config","arguments","undefined","_this","logger","debug","cwd","process","env","EUREKA_ENV","NODE_ENV","filename","defaultYml","join","envYml","merge","validateConfig","requestMiddleware","hasFullRegistry","amazonDataCenter","metadataClient","eureka","useDns","clusterResolver","cache","app","vip","start","_this2","callback","series","done","fetchMetadata","addInstanceMetadata","registerWithEureka","register","startHeartbeats","fetchRegistry","startRegistryFetches","waitForRegistry","waitForRegistryUpdate","cb","instances","getInstancesByVipAddress","vipAddress","setTimeout","err","_len","rest","Array","_key","warn","emit","apply","concat","stop","clearInterval","registryFetch","heartbeat","deregister","validate","namespace","_this3","status","connectionTimeout","eurekaRequest","method","uri","json","body","error","response","clearTimeout","statusCode","info","instanceId","_this4","_this5","setInterval","renew","heartbeatInterval","_this6","_this7","registryFetchInterval","getInstancesByAppId","appId","RangeError","toUpperCase","shouldUseDelta","fetchDelta","fetchFullRegistry","_this8","headers","Accept","transformRegistry","JSON","parse","ex","_this9","applications","jsonBody","application","handleDelta","registry","_this10","newCache","isArray","forEach","transformApp","_this11","filter","validateInstance","bind","inst","addInstance","filterUpInstances","splitVipAddress","split","appDelta","_this12","delta","normalizeDelta","actionType","modifyInstance","deleteInstance","vipAddresses","appName","alreadyContains","findIndex","findInstance","push","_this13","index","splice","_this14","metadataResult","dataCenterInfo","metadata","useLocal","useLocalMetadata","preferIpAddress","metadataHostName","metadataIpAddress","hostName","ipAddr","statusPageUrl","replacedUrl","replace","healthCheckUrl","_replacedUrl","homePageUrl","_replacedUrl2","opts","_this15","retryAttempt","waterfall","resolveEurekaUrl","eurekaUrl","requestOpts","baseUrl","gzip","newRequestOpts","toLowerCase","responseInvalid","String","maxRetries","nextRetryDelay","requestRetryDelay","get","name","EventEmitter"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/node_modules/eureka-js-client/lib/EurekaClient.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _jsYaml = require('js-yaml');\n\nvar _jsYaml2 = _interopRequireDefault(_jsYaml);\n\nvar _lodash = require('lodash');\n\nvar _deltaUtils = require('./deltaUtils');\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _async = require('async');\n\nvar _events = require('events');\n\nvar _AwsMetadata = require('./AwsMetadata');\n\nvar _AwsMetadata2 = _interopRequireDefault(_AwsMetadata);\n\nvar _ConfigClusterResolver = require('./ConfigClusterResolver');\n\nvar _ConfigClusterResolver2 = _interopRequireDefault(_ConfigClusterResolver);\n\nvar _DnsClusterResolver = require('./DnsClusterResolver');\n\nvar _DnsClusterResolver2 = _interopRequireDefault(_DnsClusterResolver);\n\nvar _Logger = require('./Logger');\n\nvar _Logger2 = _interopRequireDefault(_Logger);\n\nvar _defaultConfig = require('./defaultConfig');\n\nvar _defaultConfig2 = _interopRequireDefault(_defaultConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction noop() {}\n\n/*\n  Eureka JS client\n  This module handles registration with a Eureka server, as well as heartbeats\n  for reporting instance health.\n*/\n\nfunction fileExists(file) {\n  try {\n    return _fs2.default.statSync(file);\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction getYaml(file) {\n  var yml = {};\n  if (!fileExists(file)) {\n    return yml; // no configuration file\n  }\n  try {\n    yml = _jsYaml2.default.safeLoad(_fs2.default.readFileSync(file, 'utf8'));\n  } catch (e) {\n    // configuration file exists but was malformed\n    throw new Error('Error loading YAML configuration file: ' + file + ' ' + e);\n  }\n  return yml;\n}\n\nvar Eureka = function (_EventEmitter) {\n  _inherits(Eureka, _EventEmitter);\n\n  function Eureka() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Eureka);\n\n    // Allow passing in a custom logger:\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    _this.logger = config.logger || new _Logger2.default();\n\n    _this.logger.debug('initializing eureka client');\n\n    // Load up the current working directory and the environment:\n    var cwd = config.cwd || process.cwd();\n    var env = process.env.EUREKA_ENV || process.env.NODE_ENV || 'development';\n\n    var filename = config.filename || 'eureka-client';\n\n    // Load in the configuration files:\n    var defaultYml = getYaml(_path2.default.join(cwd, filename + '.yml'));\n    var envYml = getYaml(_path2.default.join(cwd, filename + '-' + env + '.yml'));\n\n    // apply config overrides in appropriate order\n    _this.config = (0, _lodash.merge)({}, _defaultConfig2.default, defaultYml, envYml, config);\n\n    // Validate the provided the values we need:\n    _this.validateConfig(_this.config);\n\n    _this.requestMiddleware = _this.config.requestMiddleware;\n\n    _this.hasFullRegistry = false;\n\n    if (_this.amazonDataCenter) {\n      _this.metadataClient = new _AwsMetadata2.default({\n        logger: _this.logger\n      });\n    }\n\n    if (_this.config.eureka.useDns) {\n      _this.clusterResolver = new _DnsClusterResolver2.default(_this.config, _this.logger);\n    } else {\n      _this.clusterResolver = new _ConfigClusterResolver2.default(_this.config, _this.logger);\n    }\n\n    _this.cache = {\n      app: {},\n      vip: {}\n    };\n    return _this;\n  }\n\n  /*\n    Helper method to get the instance ID. If the datacenter is AWS, this will be the\n    instance-id in the metadata. Else, it's the hostName.\n  */\n\n\n  /*\n    Registers instance with Eureka, begins heartbeats, and fetches registry.\n  */\n  Eureka.prototype.start = function start() {\n    var _this2 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    (0, _async.series)([function (done) {\n      if (_this2.metadataClient && _this2.config.eureka.fetchMetadata) {\n        return _this2.addInstanceMetadata(done);\n      }\n      done();\n    }, function (done) {\n      if (_this2.config.eureka.registerWithEureka) {\n        return _this2.register(done);\n      }\n      done();\n    }, function (done) {\n      if (_this2.config.eureka.registerWithEureka) {\n        _this2.startHeartbeats();\n      }\n      if (_this2.config.eureka.fetchRegistry) {\n        _this2.startRegistryFetches();\n        if (_this2.config.eureka.waitForRegistry) {\n          var waitForRegistryUpdate = function waitForRegistryUpdate(cb) {\n            _this2.fetchRegistry(function () {\n              var instances = _this2.getInstancesByVipAddress(_this2.config.instance.vipAddress);\n              if (instances.length === 0) setTimeout(function () {\n                return waitForRegistryUpdate(cb);\n              }, 2000);else cb();\n            });\n          };\n          return waitForRegistryUpdate(done);\n        }\n        _this2.fetchRegistry(done);\n      } else {\n        done();\n      }\n    }], function (err) {\n      for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      if (err) {\n        _this2.logger.warn('Error starting the Eureka Client', err);\n      } else {\n        _this2.emit('started');\n      }\n      callback.apply(undefined, [err].concat(rest));\n    });\n  };\n\n  /*\n    De-registers instance with Eureka, stops heartbeats / registry fetches.\n  */\n\n\n  Eureka.prototype.stop = function stop() {\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    clearInterval(this.registryFetch);\n    if (this.config.eureka.registerWithEureka) {\n      clearInterval(this.heartbeat);\n      this.deregister(callback);\n    } else {\n      callback();\n    }\n  };\n\n  /*\n    Validates client configuration.\n  */\n\n\n  Eureka.prototype.validateConfig = function validateConfig(config) {\n    function validate(namespace, key) {\n      if (!config[namespace][key]) {\n        throw new TypeError('Missing \"' + namespace + '.' + key + '\" config value.');\n      }\n    }\n\n    if (config.eureka.registerWithEureka) {\n      validate('instance', 'app');\n      validate('instance', 'vipAddress');\n      validate('instance', 'port');\n      validate('instance', 'dataCenterInfo');\n    }\n\n    if (typeof config.requestMiddleware !== 'function') {\n      throw new TypeError('requestMiddleware must be a function');\n    }\n  };\n\n  /*\n    Registers with the Eureka server and initializes heartbeats on registration success.\n  */\n\n\n  Eureka.prototype.register = function register() {\n    var _this3 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    this.config.instance.status = 'UP';\n    var connectionTimeout = setTimeout(function () {\n      _this3.logger.warn('It looks like it\\'s taking a while to register with ' + 'Eureka. This usually means there is an issue connecting to the host ' + 'specified. Start application with NODE_DEBUG=request for more logging.');\n    }, 10000);\n    this.eurekaRequest({\n      method: 'POST',\n      uri: this.config.instance.app,\n      json: true,\n      body: { instance: this.config.instance }\n    }, function (error, response, body) {\n      clearTimeout(connectionTimeout);\n      if (!error && response.statusCode === 204) {\n        _this3.logger.info('registered with eureka: ', _this3.config.instance.app + '/' + _this3.instanceId);\n        _this3.emit('registered');\n        return callback(null);\n      } else if (error) {\n        _this3.logger.warn('Error registering with eureka client.', error);\n        return callback(error);\n      }\n      return callback(new Error('eureka registration FAILED: status: ' + response.statusCode + ' body: ' + body));\n    });\n  };\n\n  /*\n    De-registers with the Eureka server and stops heartbeats.\n  */\n\n\n  Eureka.prototype.deregister = function deregister() {\n    var _this4 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    this.eurekaRequest({\n      method: 'DELETE',\n      uri: this.config.instance.app + '/' + this.instanceId\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this4.logger.info('de-registered with eureka: ' + _this4.config.instance.app + '/' + _this4.instanceId);\n        _this4.emit('deregistered');\n        return callback(null);\n      } else if (error) {\n        _this4.logger.warn('Error deregistering with eureka', error);\n        return callback(error);\n      }\n      return callback(new Error('eureka deregistration FAILED: status: ' + response.statusCode + ' body: ' + body));\n    });\n  };\n\n  /*\n    Sets up heartbeats on interval for the life of the application.\n    Heartbeat interval by setting configuration property: eureka.heartbeatInterval\n  */\n\n\n  Eureka.prototype.startHeartbeats = function startHeartbeats() {\n    var _this5 = this;\n\n    this.heartbeat = setInterval(function () {\n      _this5.renew();\n    }, this.config.eureka.heartbeatInterval);\n  };\n\n  Eureka.prototype.renew = function renew() {\n    var _this6 = this;\n\n    this.eurekaRequest({\n      method: 'PUT',\n      uri: this.config.instance.app + '/' + this.instanceId\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this6.logger.debug('eureka heartbeat success');\n        _this6.emit('heartbeat');\n      } else if (!error && response.statusCode === 404) {\n        _this6.logger.warn('eureka heartbeat FAILED, Re-registering app');\n        _this6.register();\n      } else {\n        if (error) {\n          _this6.logger.error('An error in the request occured.', error);\n        }\n        _this6.logger.warn('eureka heartbeat FAILED, will retry.' + ('statusCode: ' + (response ? response.statusCode : 'unknown')) + ('body: ' + body + ' ' + (error | '') + ' '));\n      }\n    });\n  };\n\n  /*\n    Sets up registry fetches on interval for the life of the application.\n    Registry fetch interval setting configuration property: eureka.registryFetchInterval\n  */\n\n\n  Eureka.prototype.startRegistryFetches = function startRegistryFetches() {\n    var _this7 = this;\n\n    this.registryFetch = setInterval(function () {\n      _this7.fetchRegistry(function (err) {\n        if (err) _this7.logger.warn('Error fetching registry', err);\n      });\n    }, this.config.eureka.registryFetchInterval);\n  };\n\n  /*\n    Retrieves a list of instances from Eureka server given an appId\n  */\n\n\n  Eureka.prototype.getInstancesByAppId = function getInstancesByAppId(appId) {\n    if (!appId) {\n      throw new RangeError('Unable to query instances with no appId');\n    }\n    var instances = this.cache.app[appId.toUpperCase()] || [];\n    if (instances.length === 0) {\n      this.logger.warn('Unable to retrieve instances for appId: ' + appId);\n    }\n    return instances;\n  };\n\n  /*\n    Retrieves a list of instances from Eureka server given a vipAddress\n   */\n\n\n  Eureka.prototype.getInstancesByVipAddress = function getInstancesByVipAddress(vipAddress) {\n    if (!vipAddress) {\n      throw new RangeError('Unable to query instances with no vipAddress');\n    }\n    var instances = this.cache.vip[vipAddress] || [];\n    if (instances.length === 0) {\n      this.logger.warn('Unable to retrieves instances for vipAddress: ' + vipAddress);\n    }\n    return instances;\n  };\n\n  /*\n    Orchestrates fetching registry\n   */\n\n\n  Eureka.prototype.fetchRegistry = function fetchRegistry() {\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    if (this.config.shouldUseDelta && this.hasFullRegistry) {\n      this.fetchDelta(callback);\n    } else {\n      this.fetchFullRegistry(callback);\n    }\n  };\n\n  /*\n    Retrieves all applications registered with the Eureka server\n  */\n\n\n  Eureka.prototype.fetchFullRegistry = function fetchFullRegistry() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    this.eurekaRequest({\n      uri: '',\n      headers: {\n        Accept: 'application/json'\n      }\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this8.logger.debug('retrieved full registry successfully');\n        try {\n          _this8.transformRegistry(JSON.parse(body));\n        } catch (ex) {\n          return callback(ex);\n        }\n        _this8.emit('registryUpdated');\n        _this8.hasFullRegistry = true;\n        return callback(null);\n      } else if (error) {\n        _this8.logger.warn('Error fetching registry', error);\n        return callback(error);\n      }\n      callback(new Error('Unable to retrieve full registry from Eureka server'));\n    });\n  };\n\n  /*\n  Retrieves all applications registered with the Eureka server\n  */\n\n\n  Eureka.prototype.fetchDelta = function fetchDelta() {\n    var _this9 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    this.eurekaRequest({\n      uri: 'delta',\n      headers: {\n        Accept: 'application/json'\n      }\n    }, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        _this9.logger.debug('retrieved delta successfully');\n        var applications = void 0;\n        try {\n          var jsonBody = JSON.parse(body);\n          applications = jsonBody.applications.application;\n          _this9.handleDelta(_this9.cache, applications);\n          return callback(null);\n        } catch (ex) {\n          return callback(ex);\n        }\n      } else if (error) {\n        _this9.logger.warn('Error fetching delta registry', error);\n        return callback(error);\n      }\n      callback(new Error('Unable to retrieve delta registry from Eureka server'));\n    });\n  };\n  /*\n    Transforms the given registry and caches the registry locally\n   */\n\n\n  Eureka.prototype.transformRegistry = function transformRegistry(registry) {\n    var _this10 = this;\n\n    if (!registry) {\n      this.logger.warn('Unable to transform empty registry');\n    } else {\n      if (!registry.applications.application) {\n        return;\n      }\n      var newCache = { app: {}, vip: {} };\n      if (Array.isArray(registry.applications.application)) {\n        registry.applications.application.forEach(function (app) {\n          _this10.transformApp(app, newCache);\n        });\n      } else {\n        this.transformApp(registry.applications.application, newCache);\n      }\n      this.cache = newCache;\n    }\n  };\n\n  /*\n    Transforms the given application and places in client cache. If an application\n    has a single instance, the instance is placed into the cache as an array of one\n   */\n\n\n  Eureka.prototype.transformApp = function transformApp(app, cache) {\n    var _this11 = this;\n\n    if (app.instance.length) {\n      app.instance.filter(this.validateInstance.bind(this)).forEach(function (inst) {\n        return _this11.addInstance(cache, inst);\n      });\n    } else if (this.validateInstance(app.instance)) {\n      this.addInstance(cache, app.instance);\n    }\n  };\n\n  /*\n    Returns true if instance filtering is disabled, or if the instance is UP\n  */\n\n\n  Eureka.prototype.validateInstance = function validateInstance(instance) {\n    return !this.config.eureka.filterUpInstances || instance.status === 'UP';\n  };\n\n  /*\n    Returns an array of vipAddresses from string vipAddress given by eureka\n  */\n\n\n  Eureka.prototype.splitVipAddress = function splitVipAddress(vipAddress) {\n    // eslint-disable-line\n    if (typeof vipAddress !== 'string') {\n      return [];\n    }\n\n    return vipAddress.split(',');\n  };\n\n  Eureka.prototype.handleDelta = function handleDelta(cache, appDelta) {\n    var _this12 = this;\n\n    var delta = (0, _deltaUtils.normalizeDelta)(appDelta);\n    delta.forEach(function (app) {\n      app.instance.forEach(function (instance) {\n        switch (instance.actionType) {\n          case 'ADDED':\n            _this12.addInstance(cache, instance);break;\n          case 'MODIFIED':\n            _this12.modifyInstance(cache, instance);break;\n          case 'DELETED':\n            _this12.deleteInstance(cache, instance);break;\n          default:\n            _this12.logger.warn('Unknown delta actionType', instance.actionType);break;\n        }\n      });\n    });\n  };\n\n  Eureka.prototype.addInstance = function addInstance(cache, instance) {\n    if (!this.validateInstance(instance)) return;\n    var vipAddresses = this.splitVipAddress(instance.vipAddress);\n    var appName = instance.app.toUpperCase();\n    vipAddresses.forEach(function (vipAddress) {\n      var alreadyContains = (0, _lodash.findIndex)(cache.vip[vipAddress], (0, _deltaUtils.findInstance)(instance)) > -1;\n      if (alreadyContains) return;\n      if (!cache.vip[vipAddress]) {\n        cache.vip[vipAddress] = [];\n      }\n      cache.vip[vipAddress].push(instance);\n    });\n    if (!cache.app[appName]) cache.app[appName] = [];\n    var alreadyContains = (0, _lodash.findIndex)(cache.app[appName], (0, _deltaUtils.findInstance)(instance)) > -1;\n    if (alreadyContains) return;\n    cache.app[appName].push(instance);\n  };\n\n  Eureka.prototype.modifyInstance = function modifyInstance(cache, instance) {\n    var _this13 = this;\n\n    var vipAddresses = this.splitVipAddress(instance.vipAddress);\n    var appName = instance.app.toUpperCase();\n    vipAddresses.forEach(function (vipAddress) {\n      var index = (0, _lodash.findIndex)(cache.vip[vipAddress], (0, _deltaUtils.findInstance)(instance));\n      if (index > -1) cache.vip[vipAddress].splice(index, 1, instance);else _this13.addInstance(cache, instance);\n    });\n    var index = (0, _lodash.findIndex)(cache.app[appName], (0, _deltaUtils.findInstance)(instance));\n    if (index > -1) cache.app[appName].splice(cache.vip[instance.vipAddress], 1, instance);else this.addInstance(cache, instance);\n  };\n\n  Eureka.prototype.deleteInstance = function deleteInstance(cache, instance) {\n    var vipAddresses = this.splitVipAddress(instance.vipAddress);\n    var appName = instance.app.toUpperCase();\n    vipAddresses.forEach(function (vipAddress) {\n      var index = (0, _lodash.findIndex)(cache.vip[vipAddress], (0, _deltaUtils.findInstance)(instance));\n      if (index > -1) cache.vip[vipAddress].splice(index, 1);\n    });\n    var index = (0, _lodash.findIndex)(cache.app[appName], (0, _deltaUtils.findInstance)(instance));\n    if (index > -1) cache.app[appName].splice(cache.vip[instance.vipAddress], 1);\n  };\n\n  /*\n    Fetches the metadata using the built-in client and updates the instance\n    configuration with the hostname and IP address. If the value of the config\n    option 'eureka.useLocalMetadata' is true, then the local IP address and\n    hostname is used. Otherwise, the public IP address and hostname is used. If\n    'eureka.preferIpAddress' is true, the IP address will be used as the hostname.\n     A string replacement is done on the healthCheckUrl, statusPageUrl and\n    homePageUrl so that users can define the URLs with a placeholder for the\n    host ('__HOST__'). This allows flexibility since the host isn't known until\n    the metadata is fetched. The replaced value respects the config option\n    'eureka.useLocalMetadata' as described above.\n     This will only get called when dataCenterInfo.name is Amazon, but you can\n    set config.eureka.fetchMetadata to false if you want to provide your own\n    metadata in AWS environments.\n  */\n\n\n  Eureka.prototype.addInstanceMetadata = function addInstanceMetadata() {\n    var _this14 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : noop;\n\n    this.metadataClient.fetchMetadata(function (metadataResult) {\n      _this14.config.instance.dataCenterInfo.metadata = (0, _lodash.merge)(_this14.config.instance.dataCenterInfo.metadata, metadataResult);\n      var useLocal = _this14.config.eureka.useLocalMetadata;\n      var preferIpAddress = _this14.config.eureka.preferIpAddress;\n      var metadataHostName = metadataResult[useLocal ? 'local-hostname' : 'public-hostname'];\n      var metadataIpAddress = metadataResult[useLocal ? 'local-ipv4' : 'public-ipv4'];\n      _this14.config.instance.hostName = preferIpAddress ? metadataIpAddress : metadataHostName;\n      _this14.config.instance.ipAddr = metadataIpAddress;\n\n      if (_this14.config.instance.statusPageUrl) {\n        var statusPageUrl = _this14.config.instance.statusPageUrl;\n\n        var replacedUrl = statusPageUrl.replace('__HOST__', _this14.config.instance.hostName);\n        _this14.config.instance.statusPageUrl = replacedUrl;\n      }\n      if (_this14.config.instance.healthCheckUrl) {\n        var healthCheckUrl = _this14.config.instance.healthCheckUrl;\n\n        var _replacedUrl = healthCheckUrl.replace('__HOST__', _this14.config.instance.hostName);\n        _this14.config.instance.healthCheckUrl = _replacedUrl;\n      }\n      if (_this14.config.instance.homePageUrl) {\n        var homePageUrl = _this14.config.instance.homePageUrl;\n\n        var _replacedUrl2 = homePageUrl.replace('__HOST__', _this14.config.instance.hostName);\n        _this14.config.instance.homePageUrl = _replacedUrl2;\n      }\n\n      callback();\n    });\n  };\n\n  /*\n    Helper method for making a request to the Eureka server. Handles resolving\n    the current cluster as well as some default options.\n  */\n\n\n  Eureka.prototype.eurekaRequest = function eurekaRequest(opts, callback) {\n    var _this15 = this;\n\n    var retryAttempt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    (0, _async.waterfall)([\n    /*\n    Resolve Eureka Clusters\n    */\n    function (done) {\n      _this15.clusterResolver.resolveEurekaUrl(function (err, eurekaUrl) {\n        if (err) return done(err);\n        var requestOpts = (0, _lodash.merge)({}, opts, {\n          baseUrl: eurekaUrl,\n          gzip: true\n        });\n        done(null, requestOpts);\n      }, retryAttempt);\n    },\n    /*\n    Apply Request Middleware\n    */\n    function (requestOpts, done) {\n      _this15.requestMiddleware(requestOpts, function (newRequestOpts) {\n        if ((typeof newRequestOpts === 'undefined' ? 'undefined' : _typeof(newRequestOpts)) !== 'object') {\n          return done(new Error('requestMiddleware did not return an object'));\n        }\n        done(null, newRequestOpts);\n      });\n    },\n    /*\n    Perform Request\n     */\n    function (requestOpts, done) {\n      var method = requestOpts.method ? requestOpts.method.toLowerCase() : 'get';\n      _request2.default[method](requestOpts, function (error, response, body) {\n        done(error, response, body, requestOpts);\n      });\n    }],\n    /*\n    Handle Final Output.\n     */\n    function (error, response, body, requestOpts) {\n      if (error) _this15.logger.error('Problem making eureka request', error);\n\n      // Perform retry if request failed and we have attempts left\n      var responseInvalid = response && response.statusCode && String(response.statusCode)[0] === '5';\n\n      if ((error || responseInvalid) && retryAttempt < _this15.config.eureka.maxRetries) {\n        var nextRetryDelay = _this15.config.eureka.requestRetryDelay * (retryAttempt + 1);\n        _this15.logger.warn('Eureka request failed to endpoint ' + requestOpts.baseUrl + ', ' + ('next server retry in ' + nextRetryDelay + 'ms'));\n\n        setTimeout(function () {\n          return _this15.eurekaRequest(opts, callback, retryAttempt + 1);\n        }, nextRetryDelay);\n        return;\n      }\n\n      callback(error, response, body);\n    });\n  };\n\n  _createClass(Eureka, [{\n    key: 'instanceId',\n    get: function get() {\n      if (this.config.instance.instanceId) {\n        return this.config.instance.instanceId;\n      } else if (this.amazonDataCenter) {\n        return this.config.instance.dataCenterInfo.metadata['instance-id'];\n      }\n      return this.config.instance.hostName;\n    }\n\n    /*\n      Helper method to determine if this is an AWS datacenter.\n    */\n\n  }, {\n    key: 'amazonDataCenter',\n    get: function get() {\n      var dataCenterInfo = this.config.instance.dataCenterInfo;\n\n      return dataCenterInfo && dataCenterInfo.name && dataCenterInfo.name.toLowerCase() === 'amazon';\n    }\n  }]);\n\n  return Eureka;\n}(_events.EventEmitter);\n\nexports.default = Eureka;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}