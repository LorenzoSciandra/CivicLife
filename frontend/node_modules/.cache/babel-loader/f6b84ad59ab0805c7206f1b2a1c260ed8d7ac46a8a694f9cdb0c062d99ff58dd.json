{"ast":null,"code":"var _jsxFileName = \"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Data/PersonalData.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Grid } from \"@mui/material\";\nimport '../App.css';\nimport React, { useState } from \"react\";\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List';\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport { CssTextField, ReadOnlyTextField } from \"../Utils/CustomTextFields\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PersonalData = () => {\n  _s();\n  const buttons = ['Dati', 'Vaccini', 'Bonus'];\n  const [dataList, setDataList] = useState(['dato1', 'dato2', 'dato3', 'dato4', 'dato5', 'dato6', 'dato7']);\n  const [vaxinesList, setvaxinesList] = useState(['vaccino1', 'vaccino2', 'vaccino3', 'vaccino4']);\n  const [bonusList, setBonusList] = useState(['bonus1', 'bonus2']);\n  const [showingList, setShowingList] = useState(dataList);\n  const [activeButton, setActiveButton] = useState(buttons[0]);\n  const handleOperation = () => {\n    if (activeButton === buttons[0]) {\n      console.log('MODIFICO I DATI');\n    } else if (activeButton === buttons[1]) {\n      console.log('PRENDO I VACCINI');\n    } else if (activeButton === buttons[2]) {\n      console.log('PRENDO I BONUS');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(UpperButtonMenu, {\n        first_label: buttons[0],\n        second_label: buttons[1],\n        third_label: buttons[2],\n        first_list: dataList,\n        second_list: vaxinesList,\n        third_list: bonusList,\n        listSetter: setShowingList,\n        buttonSetter: setActiveButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            width: '100%',\n            position: 'relative',\n            overflow: 'auto',\n            maxHeight: 650\n          },\n          children: [showingList.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: activeButton === buttons[0] ? /*#__PURE__*/_jsxDEV(CssTextField, {\n                sx: {\n                  input: {\n                    color: 'white'\n                  },\n                  style: {\n                    color: 'white'\n                  }\n                },\n                label: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 73\n              }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyTextField, {\n                sx: {\n                  input: {\n                    color: 'white'\n                  },\n                  style: {\n                    color: 'white'\n                  }\n                },\n                label: value,\n                defaultValue: value,\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 49\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginTop: '15px',\n                borderRadius: 35,\n                backgroundColor: \"#92d36e\",\n                padding: \"18px 36px\",\n                fontSize: \"15px\"\n              },\n              variant: \"contained\",\n              onClick: () => {\n                handleOperation();\n              },\n              children: activeButton === buttons[0] ? 'Salva' : activeButton === buttons[1] ? 'Aggiungi Vaccino' : 'aggiungi Bonus'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n_s(PersonalData, \"PKJn/cCjvRhOX+44JF7PsHkJdc0=\");\n_c = PersonalData;\nexport default PersonalData;\nvar _c;\n$RefreshReg$(_c, \"PersonalData\");","map":{"version":3,"names":["Button","Grid","React","useState","ListItem","List","UpperButtonMenu","CssTextField","ReadOnlyTextField","PersonalData","buttons","dataList","setDataList","vaxinesList","setvaxinesList","bonusList","setBonusList","showingList","setShowingList","activeButton","setActiveButton","handleOperation","console","log","width","position","overflow","maxHeight","map","value","index","input","color","style","readOnly","marginTop","borderRadius","backgroundColor","padding","fontSize"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Data/PersonalData.tsx"],"sourcesContent":["import {Button, Grid,} from \"@mui/material\";\nimport '../App.css'\nimport React, {useState} from \"react\";\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List';\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport {CssTextField, ReadOnlyTextField} from \"../Utils/CustomTextFields\";\n\n\nconst PersonalData = () => {\n\n    const buttons= ['Dati', 'Vaccini', 'Bonus']\n    const [dataList, setDataList] = useState<any[]>(['dato1', 'dato2', 'dato3', 'dato4', 'dato5', 'dato6', 'dato7'])\n    const [vaxinesList, setvaxinesList] = useState<any[]>(['vaccino1', 'vaccino2', 'vaccino3', 'vaccino4'])\n    const [bonusList, setBonusList] = useState<any[]>(['bonus1', 'bonus2'])\n    const [showingList, setShowingList]= useState<any[]>(dataList)\n    const [activeButton, setActiveButton] = useState(buttons[0]);\n\n    const handleOperation=()=>{\n        if(activeButton===buttons[0]){\n            console.log('MODIFICO I DATI')\n        } else if(activeButton===buttons[1]){\n            console.log('PRENDO I VACCINI')\n        }else if(activeButton===buttons[2]){\n            console.log('PRENDO I BONUS')\n        }\n    }\n\n    return (\n\n            <Grid container className=\"App-header\">\n                <Grid container direction=\"row\" spacing={2} >\n                    <UpperButtonMenu first_label={buttons[0]} second_label={buttons[1]} third_label={buttons[2]} first_list={dataList} second_list={vaxinesList} third_list={bonusList} listSetter={setShowingList} buttonSetter={setActiveButton}/>\n                    <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <List sx={{width: '100%',\n                            position: 'relative',\n                            overflow: 'auto',\n                            maxHeight: 650}}>\n                            {showingList.map((value, index) => {\n                                return (\n                                    <ListItem key={index}>\n                                        {\n                                            activeButton===buttons[0]?  <CssTextField sx={{ input: { color: 'white' } , style:{color:'white'}}} label={value} />\n                                                :\n                                                <ReadOnlyTextField\n                                                    sx={{ input: { color: 'white' } , style:{color:'white'}}}\n                                                    label={value}\n                                                    defaultValue={value}\n                                                    InputProps={{\n                                                        readOnly: true,\n                                                    }}\n                                                />\n                                        }\n\n                                    </ListItem>\n                                );\n                            })}\n                            <Grid item xs={12} display=\"flex\" justifyContent='center' alignItems=\"right\">\n                            <Button style={{\n                                marginTop:'15px',\n                                borderRadius: 35,\n                                backgroundColor: \"#92d36e\",\n                                padding: \"18px 36px\",\n                                fontSize: \"15px\"\n                            }}\n                                    variant=\"contained\"\n                                    onClick={()=>{handleOperation()}}>\n                                {\n                                    activeButton===buttons[0]? 'Salva': activeButton===buttons[1]? 'Aggiungi Vaccino': 'aggiungi Bonus'\n                                }\n                            </Button>\n                        </Grid>\n                        </List>\n                    </Grid>\n\n                </Grid>\n            </Grid>\n    );\n}\n\nexport default PersonalData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}