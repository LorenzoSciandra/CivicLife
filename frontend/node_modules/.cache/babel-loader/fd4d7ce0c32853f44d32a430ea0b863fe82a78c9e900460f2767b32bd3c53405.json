{"ast":null,"code":"import axios from 'axios';\nimport { Base64 } from \"js-base64\";\nexport const token = async () => {\n  window.location.assign('http://localhost:8080/login');\n};\nexport const exchangeToken = async token => {\n  console.log(\"token da decifrare: \" + token);\n  // convert token to base64\n  console.log(\"converto il token\");\n  const tokenBase64 = Base64.encode(token);\n  console.log(\"token convertito: \" + tokenBase64);\n  let url = 'http://localhost:8080/authAPI/v1/token/' + tokenBase64;\n  const response = await axios.get(url);\n  console.log(response.data);\n  console.log('cazzo');\n};","map":{"version":3,"names":["axios","Base64","token","window","location","assign","exchangeToken","console","log","tokenBase64","encode","url","response","get","data"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/oauthAPI.tsx"],"sourcesContent":["import axios from 'axios';\nimport {Base64} from \"js-base64\";\n\nexport const token = async () => {\n    window.location.assign('http://localhost:8080/login')\n}\n\nexport const exchangeToken = async (token: string) => {\n    console.log(\"token da decifrare: \" + token)\n    // convert token to base64\n    console.log(\"converto il token\")\n    const tokenBase64 = Base64.encode(token)\n    console.log(\"token convertito: \" + tokenBase64)\n    let url = 'http://localhost:8080/authAPI/v1/token/'+ tokenBase64\n    const response = await axios.get(url)\n    console.log(response.data)\n    console.log('cazzo')\n\n}\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,WAAW;AAEhC,OAAO,MAAMC,KAAK,GAAG,YAAY;EAC7BC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,6BAA6B,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOJ,KAAa,IAAK;EAClDK,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAGN,KAAK,CAAC;EAC3C;EACAK,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAChC,MAAMC,WAAW,GAAGR,MAAM,CAACS,MAAM,CAACR,KAAK,CAAC;EACxCK,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGC,WAAW,CAAC;EAC/C,IAAIE,GAAG,GAAG,yCAAyC,GAAEF,WAAW;EAChE,MAAMG,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACF,GAAG,CAAC;EACrCJ,OAAO,CAACC,GAAG,CAACI,QAAQ,CAACE,IAAI,CAAC;EAC1BP,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;AAExB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}