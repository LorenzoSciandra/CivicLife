{"ast":null,"code":"import axios from \"axios\";\nexport const getUser = async tokenData => {\n  const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email + '/' + tokenData.email;\n  return await axios.get(url, {\n    headers: {\n      'Email': tokenData.email,\n      'Provider': tokenData.provider,\n      'Token': tokenData.token\n    }\n  }).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\nexport const getAllUsers = async tokenData => {\n  const url = 'http://localhost:8080/userAPI/v1/users/';\n  // axios.get(url + tokenData.email, {\n  //     headers: {\n  //         'Email': tokenData.email,\n  //         'Provider': tokenData.provider,\n  //         'Token': tokenData.token,\n  //     }\n  // }).then((response) => {\n  //     console.log('response', response.data)\n  //     return response.data\n  // })\n  let myHeaders = new Headers();\n  myHeaders.append(\"Email\", tokenData.email);\n  myHeaders.append(\"Provider\", tokenData.provider);\n  myHeaders.append(\"Token\", tokenData.token);\n  axios.get(url + tokenData.email, {\n    headers: {}\n  }).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};","map":{"version":3,"names":["axios","getUser","tokenData","url","email","get","headers","provider","token","then","response","console","log","data","getAllUsers","myHeaders","Headers","append"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts"],"sourcesContent":["import {TokenData} from \"./oauthAPI\";\nimport axios from \"axios\";\n\nexport const getUser = async (tokenData: TokenData) => {\n    const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email + '/' + tokenData.email\n    return await axios.get(url, {\n        headers: {\n            'Email': tokenData.email,\n            'Provider': tokenData.provider,\n            'Token': tokenData.token\n        }\n    }).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\nexport const getAllUsers = async (tokenData: TokenData) => {\n    const url = 'http://localhost:8080/userAPI/v1/users/'\n    // axios.get(url + tokenData.email, {\n    //     headers: {\n    //         'Email': tokenData.email,\n    //         'Provider': tokenData.provider,\n    //         'Token': tokenData.token,\n    //     }\n    // }).then((response) => {\n    //     console.log('response', response.data)\n    //     return response.data\n    // })\n    let myHeaders = new Headers();\n    myHeaders.append(\"Email\", tokenData.email);\n    myHeaders.append(\"Provider\", tokenData.provider);\n    myHeaders.append(\"Token\", tokenData.token);\n    \n    axios.get(url + tokenData.email,\n        {\n            headers: {\n            }\n        }).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,OAAO,GAAG,MAAOC,SAAoB,IAAK;EACnD,MAAMC,GAAG,GAAG,4CAA4C,GAAGD,SAAS,CAACE,KAAK,GAAG,GAAG,GAAGF,SAAS,CAACE,KAAK;EAClG,OAAO,MAAMJ,KAAK,CAACK,GAAG,CAACF,GAAG,EAAE;IACxBG,OAAO,EAAE;MACL,OAAO,EAAEJ,SAAS,CAACE,KAAK;MACxB,UAAU,EAAEF,SAAS,CAACK,QAAQ;MAC9B,OAAO,EAAEL,SAAS,CAACM;IACvB;EACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACtC,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOZ,SAAoB,IAAK;EACvD,MAAMC,GAAG,GAAG,yCAAyC;EACrD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIY,SAAS,GAAG,IAAIC,OAAO,EAAE;EAC7BD,SAAS,CAACE,MAAM,CAAC,OAAO,EAAEf,SAAS,CAACE,KAAK,CAAC;EAC1CW,SAAS,CAACE,MAAM,CAAC,UAAU,EAAEf,SAAS,CAACK,QAAQ,CAAC;EAChDQ,SAAS,CAACE,MAAM,CAAC,OAAO,EAAEf,SAAS,CAACM,KAAK,CAAC;EAE1CR,KAAK,CAACK,GAAG,CAACF,GAAG,GAAGD,SAAS,CAACE,KAAK,EAC3B;IACIE,OAAO,EAAE,CACT;EACJ,CAAC,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;IACtBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACtC,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}