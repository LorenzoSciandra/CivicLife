{"ast":null,"code":"var _jsxFileName = \"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/InitiativeCreateForm.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Chip, Dialog, Grid, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { CssTextField } from \"../Utils/CustomTextFields\";\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InitiativeCreateForm = () => {\n  _s();\n  const types = ['tipo1', 'tipo2', 'tipo3'];\n  const [usersList, setUsersList] = useState(['utente1', 'utente2', 'utente3', 'utente4', 'utente5', 'utente6', 'utente7', 'utente8', 'utente9', 'utente10', 'utente11', 'utente12']);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [selectedType, setSelectedType] = useState(types[0]);\n  const [startDate, setStartDate] = React.useState(null);\n  const [endDate, setEndDate] = React.useState(null);\n  const [description, setDescription] = useState(null);\n  const [name, setName] = useState(null);\n  const [location, setLocation] = useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [errors, setErrors] = useState([]);\n  const handleCreateInitiative = () => {\n    if (name && description && location && startDate && endDate && selectedType) {\n      if (!startDate.isBefore(endDate)) {\n        console.log('DATA INIZIO DOPO DATA FINE');\n        setErrors([...errors, 'La data di inizio deve essere precedente alla data di fine']);\n      }\n      if (description.length < 20) {\n        console.log('DESCRIZIONE TROPPO CORTA');\n        setErrors([...errors, 'La descrizione deve essere lunga almeno 20 caratteri']);\n      }\n    } else {\n      console.log('DATI MANCANTI');\n      setErrors([...errors, 'Compila tutti i campi']);\n    }\n    console.log(errors);\n    if (errors.length === 0) {\n      console.log('CREO INIZIATIVA');\n      //TODO: chiamata al backend crea iniziativa\n    }\n\n    setOpen(true);\n  };\n  const handleTypeChange = event => {\n    setSelectedType(event.target.value);\n  };\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n  const handleUserAdd = user => {\n    if (!selectedUsers.includes(user)) {\n      setSelectedUsers([...selectedUsers, user]);\n    }\n  };\n  const handleDelete = userToDelete => () => {\n    setSelectedUsers(users => users.filter(user => user !== userToDelete));\n  };\n  const handleDialogClose = () => {\n    setOpen(false);\n    setErrors([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: '#feac0d',\n          textAlign: 'center',\n          fontSize: '3rem'\n        },\n        children: \"Crea la tua iniziativa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          sx: {\n            input: {\n              color: 'white'\n            },\n            style: {\n              color: 'white'\n            },\n            width: '70%'\n          },\n          label: 'Nome',\n          onChange: handleNameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          sx: {\n            input: {\n              color: 'white'\n            },\n            style: {\n              color: 'white'\n            },\n            width: '70%'\n          },\n          label: 'Descrizione',\n          onChange: handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          sx: {\n            input: {\n              color: 'white'\n            },\n            style: {\n              color: 'white'\n            },\n            width: '70%'\n          },\n          label: 'Luogo',\n          onChange: handleLocationChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          sx: {\n            width: '70%',\n            input: {\n              color: 'white'\n            },\n            style: {\n              color: 'white'\n            }\n          },\n          id: \"select\",\n          select: true,\n          value: selectedType,\n          label: \"Tipo\",\n          onChange: handleTypeChange,\n          children: types.map(type => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type,\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), selectedUsers.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: selectedUsers.map(user => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              sx: {\n                backgroundColor: '#feac0d',\n                marginTop: '10px'\n              },\n              icon: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n                sx: {\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 57\n              }, this),\n              label: user,\n              onDelete: handleDelete(user)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            width: '70%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CssTextField, {\n            sx: {\n              input: {\n                color: 'white'\n              },\n              style: {\n                color: 'white'\n              }\n            },\n            select: true,\n            label: \"Organizzatori\",\n            onChange: handleTypeChange,\n            children: usersList.map(user => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: () => {\n                  handleUserAdd(user);\n                },\n                value: user,\n                children: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDayjs,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            inputFormat: \"DD/MM/YYYY\",\n            label: \"Data inizio\",\n            value: startDate,\n            onChange: newValue => {\n              setStartDate(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(CssTextField, {\n              ...params,\n              sx: {\n                width: '70%',\n                input: {\n                  color: 'white'\n                },\n                style: {\n                  color: 'white'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDayjs,\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            inputFormat: \"DD/MM/YYYY\",\n            label: \"Data fine\",\n            value: endDate,\n            onChange: newValue => {\n              setEndDate(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(CssTextField, {\n              ...params,\n              sx: {\n                width: '70%',\n                input: {\n                  color: 'white'\n                },\n                style: {\n                  color: 'white'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleCreateInitiative,\n        style: {\n          marginTop: '15px',\n          borderRadius: 35,\n          backgroundColor: \"green\",\n          padding: \"10px 20px\",\n          fontSize: \"18px\"\n        },\n        variant: \"contained\",\n        children: \"CREA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      maxWidth: \"sm\",\n      fullWidth: true,\n      open: open,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Dettagli bonus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: errors.length > 0 ? errors.map(error => {\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 36\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"La tua iniziativa \\xE8 stata creata con successo!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          children: \"Chiudi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(InitiativeCreateForm, \"gNIsF+b6RTHsu8zBONVtcVP2O2w=\");\n_c = InitiativeCreateForm;\nexport default InitiativeCreateForm;\nvar _c;\n$RefreshReg$(_c, \"InitiativeCreateForm\");","map":{"version":3,"names":["Button","Chip","Dialog","Grid","Typography","React","useState","CssTextField","MenuItem","FormControl","AccountCircleIcon","DatePicker","LocalizationProvider","AdapterDayjs","DialogTitle","DialogContent","DialogContentText","DialogActions","InitiativeCreateForm","types","usersList","setUsersList","selectedUsers","setSelectedUsers","selectedType","setSelectedType","startDate","setStartDate","endDate","setEndDate","description","setDescription","name","setName","location","setLocation","open","setOpen","errors","setErrors","handleCreateInitiative","isBefore","console","log","length","handleTypeChange","event","target","value","handleDescriptionChange","handleNameChange","handleLocationChange","handleUserAdd","user","includes","handleDelete","userToDelete","users","filter","handleDialogClose","color","textAlign","fontSize","input","style","width","map","type","backgroundColor","marginTop","newValue","params","borderRadius","padding","error"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/InitiativeCreateForm.tsx"],"sourcesContent":["import {Button, Chip, Dialog, Divider, Grid, ListItemText, Typography} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport {CssTextField} from \"../Utils/CustomTextFields\";\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport {Dayjs} from \"dayjs\";\nimport {DatePicker, LocalizationProvider} from \"@mui/x-date-pickers\";\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\n\nconst InitiativeCreateForm = () => {\n    const types = ['tipo1', 'tipo2', 'tipo3']\n    const [usersList, setUsersList] = useState<any[]>(['utente1', 'utente2', 'utente3', 'utente4', 'utente5', 'utente6', 'utente7', 'utente8', 'utente9', 'utente10', 'utente11', 'utente12'])\n    const [selectedUsers, setSelectedUsers] = useState<any>([])\n    const [selectedType, setSelectedType] = useState<any>(types[0])\n    const [startDate, setStartDate] = React.useState<Dayjs | null>(null);\n    const [endDate, setEndDate] = React.useState<Dayjs | null>(null);\n    const [description, setDescription] = useState<any>(null)\n    const [name, setName] = useState<any>(null)\n    const [location, setLocation] = useState<any>(null)\n    const [open, setOpen] = React.useState(false);\n    const [errors, setErrors] = useState<any>([])\n\n    const handleCreateInitiative = () => {\n        if(name && description && location && startDate && endDate && selectedType) {\n            if(!startDate.isBefore(endDate)) {\n                console.log('DATA INIZIO DOPO DATA FINE')\n                setErrors([...errors, 'La data di inizio deve essere precedente alla data di fine'])\n            }\n            if(description.length<20) {\n                console.log('DESCRIZIONE TROPPO CORTA')\n                setErrors([...errors, 'La descrizione deve essere lunga almeno 20 caratteri'])\n            }\n        }\n        else {\n            console.log('DATI MANCANTI')\n            setErrors([...errors, 'Compila tutti i campi'])\n        }\n        console.log(errors)\n        if(errors.length===0) {\n            console.log('CREO INIZIATIVA')\n            //TODO: chiamata al backend crea iniziativa\n        }\n        setOpen(true)\n    }\n\n    const handleTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSelectedType(event.target.value);\n    };\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDescription(event.target.value);\n    }\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value);\n    }\n\n    const handleLocationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setLocation(event.target.value);\n    }\n\n    const handleUserAdd = (user: any) => {\n        if (!selectedUsers.includes(user)) {\n            setSelectedUsers([...selectedUsers, user])\n        }\n    }\n\n    const handleDelete = (userToDelete: any) => () => {\n        setSelectedUsers((users: any[]) => users.filter((user) => user !== userToDelete));\n    };\n\n    const handleDialogClose = () => {\n        setOpen(false);\n        setErrors([]);\n    }\n\n    return (\n        <Grid container>\n            {/*    <Grid item xs={12} display=\"flex\" sx={{*/}\n            {/*    width: '100%',*/}\n            {/*    margin: \"auto\",*/}\n            {/*    top: 0,*/}\n            {/*    right: 0*/}\n            {/*}}>*/}\n            {/*    <IconButton><KeyboardBackspaceIcon sx={{fontSize: 60, color: '#ffffff'}}/></IconButton>*/}\n            {/*</Grid>*/}\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Typography style={{color: '#feac0d', textAlign: 'center', fontSize: '3rem'}}>Crea la tua\n                    iniziativa</Typography>\n            </Grid>\n            <Grid container direction='row' spacing={2}>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}, width: '70%'}}\n                                  label={'Nome'} onChange={handleNameChange}/>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}, width: '70%'}}\n                                  label={'Descrizione'} onChange={handleDescriptionChange}/>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}, width: '70%'}}\n                                  label={'Luogo'} onChange={handleLocationChange}/>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{width: '70%', input: {color: 'white'}, style: {color: 'white'}}}\n                                  id=\"select\" select\n                                  value={selectedType}\n                                  label='Tipo'\n                                  onChange={handleTypeChange}\n                    >\n                        {\n                            types.map((type) => {\n                                return <MenuItem value={type}>{type}</MenuItem>\n                            })\n                        }\n                    </CssTextField>\n                </Grid>\n                {\n                    selectedUsers.length > 0 ?\n                        <Grid container direction='row'>\n                            {\n                                selectedUsers.map((user: any) => {\n                                    return (\n                                        <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                                            <Chip sx={{backgroundColor: '#feac0d', marginTop: '10px'}}\n                                                  icon={<AccountCircleIcon sx={{color: 'white'}}/>}\n                                                  label={user}\n                                                  onDelete={handleDelete(user)}\n                                            />\n                                        </Grid>)\n                                })\n                            }\n                        </Grid>\n                        :\n                        null\n                }\n\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <FormControl sx={{width: '70%'}}>\n                        <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}}}\n                                      select\n                                      label='Organizzatori'\n                                      onChange={handleTypeChange}\n                        >\n                            {\n                                usersList.map((user) => {\n                                    return <MenuItem onClick={() => {\n                                        handleUserAdd(user)\n                                    }} value={user}>{user}</MenuItem>\n                                })\n                            }\n                        </CssTextField>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            inputFormat=\"DD/MM/YYYY\"\n                            label=\"Data inizio\"\n                            value={startDate}\n                            onChange={(newValue) => {\n                                setStartDate(newValue);\n                            }}\n                            renderInput={(params) => <CssTextField {...params} sx={{\n                                width: '70%',\n                                input: {color: 'white'},\n                                style: {color: 'white'}\n                            }}/>}\n                        />\n                    </LocalizationProvider>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            inputFormat=\"DD/MM/YYYY\"\n                            label=\"Data fine\"\n                            value={endDate}\n                            onChange={(newValue) => {\n                                setEndDate(newValue);\n                            }}\n                            renderInput={(params) => <CssTextField {...params} sx={{\n                                width: '70%',\n                                input: {color: 'white'},\n                                style: {color: 'white'}\n                            }}/>}\n                        />\n                    </LocalizationProvider>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Button\n                    onClick={handleCreateInitiative}\n                    style={{\n                        marginTop: '15px',\n                        borderRadius: 35,\n                        backgroundColor: \"green\",\n                        padding: \"10px 20px\",\n                        fontSize: \"18px\"\n                    }}\n                    variant=\"contained\">\n                    CREA\n                </Button>\n            </Grid>\n            <Dialog maxWidth={\"sm\"} fullWidth={true} open={open} onClose={handleDialogClose}>\n                <DialogTitle>Dettagli bonus</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {errors.length>0 ? errors.map((error: string) => {\n                            return <Typography>{error}</Typography>\n                        }) : <Typography>La tua iniziativa è stata creata con successo!</Typography>}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose}>Chiudi</Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    )\n}\n\nexport default InitiativeCreateForm"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAWC,IAAI,EAAgBC,UAAU,QAAO,eAAe;AAC3F,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,YAAY,QAAO,2BAA2B;AACtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,iBAAiB,MAAM,mCAAmC;AAEjE,SAAQC,UAAU,EAAEC,oBAAoB,QAAO,qBAAqB;AACpE,SAAQC,YAAY,QAAO,kCAAkC;AAC7D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,aAAa,MAAM,6BAA6B;AAAC;AAExD,MAAMC,oBAAoB,GAAG,MAAM;EAAA;EAC/B,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;EAC1L,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAM,EAAE,CAAC;EAC3D,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAMa,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGtB,KAAK,CAACC,QAAQ,CAAe,IAAI,CAAC;EACpE,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,KAAK,CAACC,QAAQ,CAAe,IAAI,CAAC;EAChE,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAM,IAAI,CAAC;EACzD,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAM,IAAI,CAAC;EAC3C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAM,IAAI,CAAC;EACnD,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAGhC,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAM,EAAE,CAAC;EAE7C,MAAMkC,sBAAsB,GAAG,MAAM;IACjC,IAAGR,IAAI,IAAIF,WAAW,IAAII,QAAQ,IAAIR,SAAS,IAAIE,OAAO,IAAIJ,YAAY,EAAE;MACxE,IAAG,CAACE,SAAS,CAACe,QAAQ,CAACb,OAAO,CAAC,EAAE;QAC7Bc,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzCJ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,4DAA4D,CAAC,CAAC;MACxF;MACA,IAAGR,WAAW,CAACc,MAAM,GAAC,EAAE,EAAE;QACtBF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvCJ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,sDAAsD,CAAC,CAAC;MAClF;IACJ,CAAC,MACI;MACDI,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BJ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,uBAAuB,CAAC,CAAC;IACnD;IACAI,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACnB,IAAGA,MAAM,CAACM,MAAM,KAAG,CAAC,EAAE;MAClBF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B;IACJ;;IACAN,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,MAAMQ,gBAAgB,GAAIC,KAA0C,IAAK;IACrErB,eAAe,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EACD,MAAMC,uBAAuB,GAAIH,KAA0C,IAAK;IAC5Ef,cAAc,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EACD,MAAME,gBAAgB,GAAIJ,KAA0C,IAAK;IACrEb,OAAO,CAACa,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMG,oBAAoB,GAAIL,KAA0C,IAAK;IACzEX,WAAW,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMI,aAAa,GAAIC,IAAS,IAAK;IACjC,IAAI,CAAC/B,aAAa,CAACgC,QAAQ,CAACD,IAAI,CAAC,EAAE;MAC/B9B,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE+B,IAAI,CAAC,CAAC;IAC9C;EACJ,CAAC;EAED,MAAME,YAAY,GAAIC,YAAiB,IAAK,MAAM;IAC9CjC,gBAAgB,CAAEkC,KAAY,IAAKA,KAAK,CAACC,MAAM,CAAEL,IAAI,IAAKA,IAAI,KAAKG,YAAY,CAAC,CAAC;EACrF,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAM;IAC5BtB,OAAO,CAAC,KAAK,CAAC;IACdE,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,oBACI,QAAC,IAAI;IAAC,SAAS;IAAA,wBASX,QAAC,IAAI;MAAC,IAAI;MAAC,EAAE,EAAE,EAAG;MAAC,OAAO,EAAC,MAAM;MAAC,cAAc,EAAC,QAAQ;MAAC,UAAU,EAAC,QAAQ;MAAA,uBACzE,QAAC,UAAU;QAAC,KAAK,EAAE;UAACqB,KAAK,EAAE,SAAS;UAAEC,SAAS,EAAE,QAAQ;UAAEC,QAAQ,EAAE;QAAM,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAClD;MAAA;MAAA;MAAA;IAAA,QACxB,eACP,QAAC,IAAI;MAAC,SAAS;MAAC,SAAS,EAAC,KAAK;MAAC,OAAO,EAAE,CAAE;MAAA,wBACvC,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,OAAO,EAAC,MAAM;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,uBACzE,QAAC,YAAY;UAAC,EAAE,EAAE;YAACC,KAAK,EAAE;cAACH,KAAK,EAAE;YAAO,CAAC;YAAEI,KAAK,EAAE;cAACJ,KAAK,EAAE;YAAO,CAAC;YAAEK,KAAK,EAAE;UAAK,CAAE;UACrE,KAAK,EAAE,MAAO;UAAC,QAAQ,EAAEf;QAAiB;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACvD,eACP,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,OAAO,EAAC,MAAM;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,uBACzE,QAAC,YAAY;UAAC,EAAE,EAAE;YAACa,KAAK,EAAE;cAACH,KAAK,EAAE;YAAO,CAAC;YAAEI,KAAK,EAAE;cAACJ,KAAK,EAAE;YAAO,CAAC;YAAEK,KAAK,EAAE;UAAK,CAAE;UACrE,KAAK,EAAE,aAAc;UAAC,QAAQ,EAAEhB;QAAwB;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACrE,eACP,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,OAAO,EAAC,MAAM;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,uBACzE,QAAC,YAAY;UAAC,EAAE,EAAE;YAACc,KAAK,EAAE;cAACH,KAAK,EAAE;YAAO,CAAC;YAAEI,KAAK,EAAE;cAACJ,KAAK,EAAE;YAAO,CAAC;YAAEK,KAAK,EAAE;UAAK,CAAE;UACrE,KAAK,EAAE,OAAQ;UAAC,QAAQ,EAAEd;QAAqB;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAC5D,eACP,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,OAAO,EAAC,MAAM;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,uBACzE,QAAC,YAAY;UAAC,EAAE,EAAE;YAACc,KAAK,EAAE,KAAK;YAAEF,KAAK,EAAE;cAACH,KAAK,EAAE;YAAO,CAAC;YAAEI,KAAK,EAAE;cAACJ,KAAK,EAAE;YAAO;UAAC,CAAE;UACrE,EAAE,EAAC,QAAQ;UAAC,MAAM;UAClB,KAAK,EAAEpC,YAAa;UACpB,KAAK,EAAC,MAAM;UACZ,QAAQ,EAAEqB,gBAAiB;UAAA,UAGjC1B,KAAK,CAAC+C,GAAG,CAAEC,IAAI,IAAK;YAChB,oBAAO,QAAC,QAAQ;cAAC,KAAK,EAAEA,IAAK;cAAA,UAAEA;YAAI;cAAA;cAAA;cAAA;YAAA,QAAY;UACnD,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MAEK;QAAA;QAAA;QAAA;MAAA,QACZ,EAEH7C,aAAa,CAACsB,MAAM,GAAG,CAAC,gBACpB,QAAC,IAAI;QAAC,SAAS;QAAC,SAAS,EAAC,KAAK;QAAA,UAEvBtB,aAAa,CAAC4C,GAAG,CAAEb,IAAS,IAAK;UAC7B,oBACI,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,EAAG;YAAC,OAAO,EAAC,MAAM;YAAC,cAAc,EAAC,QAAQ;YAAC,UAAU,EAAC,QAAQ;YAAA,uBACzE,QAAC,IAAI;cAAC,EAAE,EAAE;gBAACe,eAAe,EAAE,SAAS;gBAAEC,SAAS,EAAE;cAAM,CAAE;cACpD,IAAI,eAAE,QAAC,iBAAiB;gBAAC,EAAE,EAAE;kBAACT,KAAK,EAAE;gBAAO;cAAE;gBAAA;gBAAA;gBAAA;cAAA,QAAG;cACjD,KAAK,EAAEP,IAAK;cACZ,QAAQ,EAAEE,YAAY,CAACF,IAAI;YAAE;cAAA;cAAA;cAAA;YAAA;UACjC;YAAA;YAAA;YAAA;UAAA,QACC;QACf,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEH,GAEP,IAAI,eAGZ,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,OAAO,EAAC,MAAM;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,uBACzE,QAAC,WAAW;UAAC,EAAE,EAAE;YAACY,KAAK,EAAE;UAAK,CAAE;UAAA,uBAC5B,QAAC,YAAY;YAAC,EAAE,EAAE;cAACF,KAAK,EAAE;gBAACH,KAAK,EAAE;cAAO,CAAC;cAAEI,KAAK,EAAE;gBAACJ,KAAK,EAAE;cAAO;YAAC,CAAE;YACvD,MAAM;YACN,KAAK,EAAC,eAAe;YACrB,QAAQ,EAAEf,gBAAiB;YAAA,UAGjCzB,SAAS,CAAC8C,GAAG,CAAEb,IAAI,IAAK;cACpB,oBAAO,QAAC,QAAQ;gBAAC,OAAO,EAAE,MAAM;kBAC5BD,aAAa,CAACC,IAAI,CAAC;gBACvB,CAAE;gBAAC,KAAK,EAAEA,IAAK;gBAAA,UAAEA;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QAAY;YACrC,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA;QAEK;UAAA;UAAA;UAAA;QAAA;MACL;QAAA;QAAA;QAAA;MAAA,QACX,eACP,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,OAAO,EAAC,MAAM;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,uBACzE,QAAC,oBAAoB;UAAC,WAAW,EAAExC,YAAa;UAAA,uBAC5C,QAAC,UAAU;YACP,WAAW,EAAC,YAAY;YACxB,KAAK,EAAC,aAAa;YACnB,KAAK,EAAEa,SAAU;YACjB,QAAQ,EAAG4C,QAAQ,IAAK;cACpB3C,YAAY,CAAC2C,QAAQ,CAAC;YAC1B,CAAE;YACF,WAAW,EAAGC,MAAM,iBAAK,QAAC,YAAY;cAAA,GAAKA,MAAM;cAAE,EAAE,EAAE;gBACnDN,KAAK,EAAE,KAAK;gBACZF,KAAK,EAAE;kBAACH,KAAK,EAAE;gBAAO,CAAC;gBACvBI,KAAK,EAAE;kBAACJ,KAAK,EAAE;gBAAO;cAC1B;YAAE;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA;MACiB;QAAA;QAAA;QAAA;MAAA,QACpB,eACP,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,EAAG;QAAC,OAAO,EAAC,MAAM;QAAC,cAAc,EAAC,QAAQ;QAAC,UAAU,EAAC,QAAQ;QAAA,uBACzE,QAAC,oBAAoB;UAAC,WAAW,EAAE/C,YAAa;UAAA,uBAC5C,QAAC,UAAU;YACP,WAAW,EAAC,YAAY;YACxB,KAAK,EAAC,WAAW;YACjB,KAAK,EAAEe,OAAQ;YACf,QAAQ,EAAG0C,QAAQ,IAAK;cACpBzC,UAAU,CAACyC,QAAQ,CAAC;YACxB,CAAE;YACF,WAAW,EAAGC,MAAM,iBAAK,QAAC,YAAY;cAAA,GAAKA,MAAM;cAAE,EAAE,EAAE;gBACnDN,KAAK,EAAE,KAAK;gBACZF,KAAK,EAAE;kBAACH,KAAK,EAAE;gBAAO,CAAC;gBACvBI,KAAK,EAAE;kBAACJ,KAAK,EAAE;gBAAO;cAC1B;YAAE;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA;QACP;UAAA;UAAA;UAAA;QAAA;MACiB;QAAA;QAAA;QAAA;MAAA,QACpB;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACP,QAAC,IAAI;MAAC,IAAI;MAAC,EAAE,EAAE,EAAG;MAAC,OAAO,EAAC,MAAM;MAAC,cAAc,EAAC,QAAQ;MAAC,UAAU,EAAC,QAAQ;MAAA,uBACzE,QAAC,MAAM;QACH,OAAO,EAAEpB,sBAAuB;QAChC,KAAK,EAAE;UACH6B,SAAS,EAAE,MAAM;UACjBG,YAAY,EAAE,EAAE;UAChBJ,eAAe,EAAE,OAAO;UACxBK,OAAO,EAAE,WAAW;UACpBX,QAAQ,EAAE;QACd,CAAE;QACF,OAAO,EAAC,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAEd;MAAA;MAAA;MAAA;IAAA,QACN,eACP,QAAC,MAAM;MAAC,QAAQ,EAAE,IAAK;MAAC,SAAS,EAAE,IAAK;MAAC,IAAI,EAAE1B,IAAK;MAAC,OAAO,EAAEuB,iBAAkB;MAAA,wBAC5E,QAAC,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA6B,eACzC,QAAC,aAAa;QAAA,uBACV,QAAC,iBAAiB;UAAA,UACbrB,MAAM,CAACM,MAAM,GAAC,CAAC,GAAGN,MAAM,CAAC4B,GAAG,CAAEQ,KAAa,IAAK;YAC7C,oBAAO,QAAC,UAAU;cAAA,UAAEA;YAAK;cAAA;cAAA;cAAA;YAAA,QAAc;UAC3C,CAAC,CAAC,gBAAG,QAAC,UAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAA4D;UAAA;UAAA;UAAA;QAAA;MAC5D;QAAA;QAAA;QAAA;MAAA,QACR,eAChB,QAAC,aAAa;QAAA,uBACV,QAAC,MAAM;UAAC,OAAO,EAAEf,iBAAkB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgB;QAAA;QAAA;QAAA;MAAA,QACvC;IAAA;MAAA;MAAA;MAAA;IAAA,QACX;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEf,CAAC;AAAA,GA/MKzC,oBAAoB;AAAA,KAApBA,oBAAoB;AAiN1B,eAAeA,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}