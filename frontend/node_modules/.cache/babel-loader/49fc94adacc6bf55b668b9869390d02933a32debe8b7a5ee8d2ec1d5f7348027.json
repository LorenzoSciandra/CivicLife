{"ast":null,"code":"import axios from \"axios\";\nimport { ValidateCode } from \"./OauthAPI\";\nimport { Base64 } from \"js-base64\";\nexport let InitiativeType;\n(function (InitiativeType) {\n  InitiativeType[\"SOCIAL\"] = \"SOCIAL\";\n  InitiativeType[\"FOOD\"] = \"FOOD\";\n  InitiativeType[\"HEALTH\"] = \"HEALTH\";\n  InitiativeType[\"SPORT\"] = \"SPORT\";\n  InitiativeType[\"EDUCATIONAL\"] = \"EDUCATIONAL\";\n  InitiativeType[\"ENVIRONMENTAL\"] = \"ENVIRONMENTAL\";\n  InitiativeType[\"OTHER\"] = \"OTHER\";\n})(InitiativeType || (InitiativeType = {}));\nexport let InitiativeTypeColor;\n(function (InitiativeTypeColor) {\n  InitiativeTypeColor[\"SOCIAL\"] = \"#FFC107\";\n  InitiativeTypeColor[\"FOOD\"] = \"#FF5722\";\n  InitiativeTypeColor[\"HEALTH\"] = \"#4CAF50\";\n  InitiativeTypeColor[\"SPORT\"] = \"#2196F3\";\n  InitiativeTypeColor[\"EDUCATIONAL\"] = \"#9C27B0\";\n  InitiativeTypeColor[\"ENVIRONMENTAL\"] = \"#795548\";\n  InitiativeTypeColor[\"OTHER\"] = \"#9E9E9E\";\n})(InitiativeTypeColor || (InitiativeTypeColor = {}));\nexport const getAllInitiatives = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url\n    };\n    return authError;\n  });\n};\nexport const getMyInitiatives = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/getCreatedInitiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url\n    };\n    return authError;\n  });\n};\nexport const getSubscribedInitiatives = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/getMySubscribedInitiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url\n    };\n    return authError;\n  });\n};\nexport const getOrganizedInitiatives = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/getOrganizedInitiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url\n    };\n    return authError;\n  });\n};\nexport const createInitiative = async (tokenData, initiative) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/create/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url, JSON.stringify(initiative), {\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    console.log(error);\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const getInitiativesForVisitor = async () => {\n  const url = 'http://localhost:8080/initiativeAPI/v1/getAllNamesDesc';\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url\n    };\n    return authError;\n  });\n};\nexport const modifyInitiative = async (tokenData, initiative) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/modify/' + initiative.id + '/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url, JSON.stringify(initiative), {\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    console.log(error);\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const deleteInitiative = async (tokenData, initiativeId) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/delete/' + initiativeId + '/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    console.log(error);\n    const authError = {\n      code: ValidateCode.DELETE_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const subscribeInitiative = async (tokenData, initiativeId) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/subscribe/' + initiativeId + '/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    console.log(error);\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const unsubscribeInitiative = async (tokenData, initiativeId) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/unsubscribe/' + initiativeId + '/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    console.log(error);\n    const authError = {\n      code: ValidateCode.UPDATE_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const getInitiativeByID = async (tokenData, initiativeID) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/initiativeAPI/v1/initiative/' + initiativeID + '/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    console.log(error);\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};","map":{"version":3,"names":["axios","ValidateCode","Base64","InitiativeType","InitiativeTypeColor","getAllInitiatives","tokenData","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","console","log","data","catch","authError","code","GET_FAIL","method","requestedPath","getMyInitiatives","getSubscribedInitiatives","getOrganizedInitiatives","createInitiative","initiative","post","JSON","stringify","headers","value","error","UPDATE_FAIL","split","getInitiativesForVisitor","modifyInitiative","id","deleteInitiative","initiativeId","DELETE_FAIL","subscribeInitiative","unsubscribeInitiative","getInitiativeByID","initiativeID"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/InitiativeAPI.ts"],"sourcesContent":["import axios from \"axios\";\nimport {AuthError, TokenData, ValidateCode} from \"./OauthAPI\";\nimport {Base64} from \"js-base64\";\n\n\nexport enum InitiativeType {\n    SOCIAL = 'SOCIAL',\n    FOOD= 'FOOD',\n    HEALTH = 'HEALTH',\n    SPORT = 'SPORT',\n    EDUCATIONAL = 'EDUCATIONAL',\n    ENVIRONMENTAL = 'ENVIRONMENTAL',\n    OTHER = 'OTHER'\n}\n\nexport enum InitiativeTypeColor {\n    SOCIAL = '#FFC107',\n    FOOD= '#FF5722',\n    HEALTH = '#4CAF50',\n    SPORT = '#2196F3',\n    EDUCATIONAL = '#9C27B0',\n    ENVIRONMENTAL = '#795548',\n    OTHER = '#9E9E9E'\n\n}\n\nexport interface Initiative {\n    id: string,\n    name: string,\n    description: string;\n    type: InitiativeType;\n    idCreator: string;\n    idOrganizers: string[];\n    idMembers: string[];\n    startDate: number;\n    endDate: number;\n    location: string;\n}\n\nexport const getAllInitiatives = async (tokenData: TokenData): Promise<Initiative[] | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url\n        }\n        return authError\n    })\n}\n\nexport const getMyInitiatives = async (tokenData: TokenData): Promise<Initiative[] | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/getCreatedInitiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url\n        }\n        return authError\n    })\n}\n\nexport const getSubscribedInitiatives = async (tokenData: TokenData): Promise<Initiative[] | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/getMySubscribedInitiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url\n        }\n        return authError\n    })\n}\n\nexport const getOrganizedInitiatives = async (tokenData: TokenData): Promise<Initiative[] | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/getOrganizedInitiatives/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url\n        }\n        return authError\n    })\n}\n\n\nexport const createInitiative = async (tokenData: TokenData, initiative: Initiative) => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/create/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean | AuthError>(url,\n        JSON.stringify(initiative),\n        {\n            headers: {\"Content-Type\": \"text/plain\"}\n        })\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            console.log(error)\n            const authError: AuthError = {\n                code: ValidateCode.UPDATE_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        });\n}\n\nexport interface InitiativeNameDesc {\n    name: string,\n    description: string\n    location: string\n    type: InitiativeType\n}\n\nexport const getInitiativesForVisitor = async (): Promise<InitiativeNameDesc[] | AuthError> => {\n    const url = 'http://localhost:8080/initiativeAPI/v1/getAllNamesDesc'\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url\n        }\n        return authError\n    })\n}\n\nexport const modifyInitiative = async (tokenData: TokenData, initiative: Initiative): Promise<boolean|AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/modify/'+initiative.id+'/'\n        + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean | AuthError>(url,\n        JSON.stringify(initiative),\n        {\n            headers: {\"Content-Type\": \"text/plain\"}\n        })\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            console.log(error)\n            const authError: AuthError = {\n                code: ValidateCode.UPDATE_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        });\n}\n\nexport const deleteInitiative= async (tokenData: TokenData, initiativeId: string): Promise<boolean|AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/delete/'+initiativeId+'/'\n        + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean | AuthError>(url)\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            console.log(error)\n            const authError: AuthError = {\n                code: ValidateCode.DELETE_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        });\n}\n\nexport const subscribeInitiative = async (tokenData: TokenData, initiativeId: string): Promise<boolean|AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/subscribe/'+initiativeId+'/'\n        + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean | AuthError>(url)\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            console.log(error)\n            const authError: AuthError = {\n                code: ValidateCode.UPDATE_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        });\n}\n\nexport const unsubscribeInitiative = async (tokenData: TokenData, initiativeId: string): Promise<boolean|AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/unsubscribe/'+initiativeId+'/'\n        + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean | AuthError>(url)\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            console.log(error)\n            const authError: AuthError = {\n                code: ValidateCode.UPDATE_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        });\n}\n\nexport const getInitiativeByID = async (tokenData: TokenData,initiativeID: string): Promise<Initiative | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/initiativeAPI/v1/initiative/'+initiativeID+'/'\n        + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.get<Initiative | AuthError>(url)\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            console.log(error)\n            const authError: AuthError = {\n                code: ValidateCode.GET_FAIL,\n                method: 'GET',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        });\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}