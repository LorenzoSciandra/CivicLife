{"ast":null,"code":"import axios from \"axios\";\nimport { Base64 } from \"js-base64\";\nexport let StatusType;\n(function (StatusType) {\n  StatusType[\"ACTIVE\"] = \"ACTIVE\";\n  StatusType[\"SUSPENDED\"] = \"SUSPENDED\";\n  StatusType[\"BANNED\"] = \"BANNED\";\n})(StatusType || (StatusType = {}));\nexport const getLoggedUser = tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\nexport function isInstanceOfUser(object) {\n  return 'email' in object;\n}\nexport const updateUser = async (tokenData, newUser) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/update/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url, JSON.stringify(newUser), {\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(value => {\n    return value.data;\n  }).catch(function (error) {\n    console.log(error);\n    return false;\n  });\n};\nexport const authorizeBonusAccess = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/authorizeBonus/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\nexport const authorizeVaccineAccess = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/authorizeVaccine/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\n\n//ADMIN METHODS\n\nexport const updateUserStatus = async (tokenData, newStatus, emailToUpdate) => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/update/status/' + emailToUpdate + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url, newStatus).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\nexport const getAllUsers = tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/users/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};","map":{"version":3,"names":["axios","Base64","StatusType","getLoggedUser","tokenData","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","console","log","data","isInstanceOfUser","object","updateUser","newUser","post","JSON","stringify","headers","value","catch","error","authorizeBonusAccess","authorizeVaccineAccess","updateUserStatus","newStatus","emailToUpdate","getAllUsers"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts"],"sourcesContent":["import {TokenData} from \"./OauthAPI\";\nimport axios from \"axios\";\nimport {Base64} from \"js-base64\";\nimport {AuthError} from \"./OauthAPI\";\n\nexport enum StatusType{\n    ACTIVE='ACTIVE', // puo fare tutto\n    SUSPENDED='SUSPENDED', // puo fare tutto tranne creare iniziative\n    BANNED='BANNED' // puo solo votare le iniziative sono bloccate\n}\n\nexport interface User{\n    email: string,\n    name: string,\n    surname: string,\n    admin: boolean,\n    fiscalCode:string,\n    residence:string,\n    birthDate:number,\n    domicile:string,\n    status:StatusType,\n    telephonNumber: number,\n    authorizeBonus: boolean,\n    authorizeVaccine: boolean,\n}\n\nexport const getLoggedUser = (tokenData: TokenData) : Promise<User | AuthError>=> {\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get<User | AuthError>(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\nexport function isInstanceOfUser(object:any): object is User {\n    return 'email' in object\n}\n\n\nexport const updateUser=async (tokenData: TokenData, newUser: User): Promise<boolean | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/userAPI/v1/user/update/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean| AuthError>(url,\n        JSON.stringify(newUser),\n        {\n            headers: {\"Content-Type\": \"text/plain\"}\n        })\n        .then(value => {\n            return value.data;\n        }).catch(function (error) {\n            console.log(error)\n            return false;\n        });\n}\n\nexport const authorizeBonusAccess=async (tokenData: TokenData): Promise<boolean | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/userAPI/v1/user/authorizeBonus/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\nexport const authorizeVaccineAccess=async (tokenData: TokenData): Promise<boolean | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/userAPI/v1/user/authorizeVaccine/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\n\n//ADMIN METHODS\n\nexport const updateUserStatus = async (tokenData:TokenData, newStatus:StatusType, emailToUpdate:string): Promise<boolean | AuthError>=>{\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const url = 'http://localhost:8080/userAPI/v1/user/update/status/' + emailToUpdate + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n\n    return await axios.post<boolean | AuthError>(url, newStatus).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\nexport const getAllUsers = (tokenData: TokenData): Promise<User[] | AuthError> => {\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/userAPI/v1/users/'+tokenData.email+'?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get<User[] | AuthError>(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}