{"ast":null,"code":"import axios from \"axios\";\nimport { Base64 } from \"js-base64\";\nexport const getLoggedUser = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\nexport const getAllUsers = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/users/?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};","map":{"version":3,"names":["axios","Base64","getLoggedUser","tokenData","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","console","log","data","getAllUsers"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts"],"sourcesContent":["import {TokenData} from \"./oauthAPI\";\nimport axios from \"axios\";\nimport {Base64} from \"js-base64\";\n\nexport type UserType = {\n    email: string,\n    name: string,\n    surname: string,\n    admin: boolean,\n    fiscalCode:string,\n    residence:string,\n    birthDate:number,\n    domicile:string,\n    status:string,\n    telephoneNumber: number\n}\n\nexport const getLoggedUser = async (tokenData: TokenData) => {\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\nexport const getAllUsers = async (tokenData: TokenData) => {\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/userAPI/v1/users/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,WAAW;AAehC,OAAO,MAAMC,aAAa,GAAG,MAAOC,SAAoB,IAAK;EACzD,MAAMC,WAAW,GAAEH,MAAM,CAACI,MAAM,CAACF,SAAS,CAACG,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAEN,MAAM,CAACI,MAAM,CAACF,SAAS,CAACK,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAER,MAAM,CAACI,MAAM,CAACF,SAAS,CAACO,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAG,4CAA4C,GAAGR,SAAS,CAACG,KAAK,GAAE,SAAS,GAAEF,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EAC5J,OAAO,MAAMT,KAAK,CAACY,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IAC3CC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACtC,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOf,SAAoB,IAAK;EACvD,MAAMC,WAAW,GAAEH,MAAM,CAACI,MAAM,CAACF,SAAS,CAACG,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAEN,MAAM,CAACI,MAAM,CAACF,SAAS,CAACK,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAER,MAAM,CAACI,MAAM,CAACF,SAAS,CAACO,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAG,gDAAgD,GAAEP,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EACnI,OAAO,MAAMT,KAAK,CAACY,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IAC3CC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACtC,OAAOH,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}