{"ast":null,"code":"import axios from \"axios\";\nimport { Base64 } from \"js-base64\";\nexport let StatusType;\n(function (StatusType) {\n  StatusType[StatusType[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  StatusType[StatusType[\"SUSPENDED\"] = 1] = \"SUSPENDED\";\n  StatusType[StatusType[\"BANNED\"] = 2] = \"BANNED\";\n})(StatusType || (StatusType = {}));\nexport const getLoggedUser = async tokenData => {\n  console.log('recupero utente', tokenData);\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\nexport const getAllUsers = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/users/?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\nconst configGeneratorEncoder = (base_url, tokenData, value) => {\n  value = Base64.encode(value);\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = base_url + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  console.log('url', url);\n  return {\n    method: 'post',\n    url: url,\n    data: value\n  };\n};\nexport const updateUser = async (tokenData, newUser) => {\n  // console.log('newUser',newUser)\n  // const emailBase64= Base64.encode(tokenData.email)\n  // const providerBase64= Base64.encode(tokenData.provider)\n  // const tokenBase64= Base64.encode(tokenData.token)\n  // const url= 'http://localhost:8080/userAPI/v1/user/update/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n  // console.log('url',url)\n  // const config= {\n  //     method:'post',\n  //     url:url,\n  //     data: newUser\n  // }\n  // axios(config).then((response) => {\n  //     console.log('response', response.data)\n  //     return response.data\n  // })\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/update/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  console.log(JSON.stringify(newUser));\n  axios.post(url, newUser, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    }\n  }).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"names":["axios","Base64","StatusType","getLoggedUser","tokenData","console","log","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","data","getAllUsers","configGeneratorEncoder","base_url","value","method","updateUser","newUser","JSON","stringify","post","headers","catch","error"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts"],"sourcesContent":["import {TokenData} from \"./oauthAPI\";\nimport axios from \"axios\";\nimport {Base64} from \"js-base64\";\n\nexport enum StatusType{\n    ACTIVE,SUSPENDED,BANNED\n}\n\nexport type UserType = {\n    email: string,\n    name: string,\n    surname: string,\n    admin: boolean,\n    fiscalCode:string,\n    residence:string,\n    birthDate:number,\n    domicile:string,\n    status:StatusType,\n    telephonNumber: number\n}\n\nexport const getLoggedUser = async (tokenData: TokenData) => {\n    console.log('recupero utente', tokenData)\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\nexport const getAllUsers = async (tokenData: TokenData) => {\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/userAPI/v1/users/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\n\nconst configGeneratorEncoder=(base_url: string, tokenData:TokenData, value:string)=>{\n    value = Base64.encode(value)\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url= base_url+tokenData.email+'?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    console.log('url',url)\n    return  {\n        method:'post',\n        url:url,\n        data: value\n    }\n}\n\nexport const updateUser=async (tokenData: TokenData, newUser: UserType)=>{\n    // console.log('newUser',newUser)\n    // const emailBase64= Base64.encode(tokenData.email)\n    // const providerBase64= Base64.encode(tokenData.provider)\n    // const tokenBase64= Base64.encode(tokenData.token)\n    // const url= 'http://localhost:8080/userAPI/v1/user/update/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    // console.log('url',url)\n    // const config= {\n    //     method:'post',\n    //     url:url,\n    //     data: newUser\n    // }\n    // axios(config).then((response) => {\n    //     console.log('response', response.data)\n    //     return response.data\n    // })\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url= 'http://localhost:8080/userAPI/v1/user/update/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    console.log(JSON.stringify(newUser))\n    axios.post(url, newUser, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n        },\n    }).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch((error) => {\n        console.log(error)\n    })\n\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}