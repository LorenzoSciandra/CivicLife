{"ast":null,"code":"var _jsxFileName = \"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Utils/CustomTextFields.tsx\",\n  _s = $RefreshSig$();\nimport { styled, TextField } from \"@mui/material\";\nimport Switch from \"@mui/material/Switch\";\nimport { Grid, ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CssTextField = styled(TextField)({\n  '& label.MuiInputLabel-root': {\n    color: 'white'\n  },\n  '& label.Mui-focused': {\n    color: '#feac0d'\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#feac0d'\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'white'\n    },\n    '&:hover fieldset': {\n      borderColor: 'white'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#feac0d'\n    }\n  },\n  width: '100%'\n});\nexport const Android12Switch = styled(Switch)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: 8,\n    '& .MuiSwitch-track': {\n      borderRadius: 22 / 2,\n      '&:before, &:after': {\n        content: '\"\"',\n        position: 'absolute',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        width: 16,\n        height: 16\n      },\n      '&:before': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(theme.palette.getContrastText(theme.palette.primary.main))}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\n        left: 12\n      },\n      '&:after': {\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(theme.palette.getContrastText(theme.palette.primary.main))}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\n        right: 12\n      }\n    },\n    '& .MuiSwitch-thumb': {\n      boxShadow: 'none',\n      width: 16,\n      height: 16,\n      margin: 2\n    }\n  };\n});\nexport const activeButtonColor = {\n  background: '#feac0d',\n  color: '#ffffff'\n};\nexport const inactiveButtonColor = {\n  background: '#ffffff',\n  color: '#feac0d'\n};\nconst UpperButtonMenu = props => {\n  _s();\n  const activeButtonColor = {\n    background: '#feac0d',\n    color: '#ffffff'\n  };\n  const inactiveButtonColor = {\n    background: '#ffffff',\n    color: '#feac0d'\n  };\n  const activeButton = useState(props.first_label);\n  const [firstButton, setFirstButton] = useState(activeButtonColor);\n  const [secondButton, setSecondButton] = useState(inactiveButtonColor);\n  const [thirdButton, setThirdButton] = useState(inactiveButtonColor);\n  const handleChange = (event, newActiveButton) => {\n    if (newActiveButton === props.first_label) {\n      setFirstButton(activeButtonColor);\n      setSecondButton(inactiveButtonColor);\n      setThirdButton(inactiveButtonColor);\n      props.listSetter(props.first_list);\n    } else if (newActiveButton === props.second_label) {\n      setFirstButton(inactiveButtonColor);\n      setSecondButton(activeButtonColor);\n      setThirdButton(inactiveButtonColor);\n      props.listSetter(props.second_list);\n    } else if (props.third_list !== null) {\n      if (newActiveButton === props.third_label) {\n        setFirstButton(inactiveButtonColor);\n        setSecondButton(inactiveButtonColor);\n        setThirdButton(activeButtonColor);\n        props.listSetter(props.third_list);\n      }\n    }\n    if (props.buttonSetter) props.buttonSetter(newActiveButton);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      sx: {\n        position: 'fixed',\n        top: '8%',\n        margin: 'auto',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        value: activeButton,\n        exclusive: true,\n        onChange: handleChange,\n        \"aria-label\": \"Platform\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          style: {\n            backgroundColor: firstButton.background,\n            color: firstButton.color,\n            borderColor: '#000000',\n            fontSize: '25px'\n          },\n          value: props.first_label,\n          children: props.first_label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          style: {\n            backgroundColor: secondButton.background,\n            color: secondButton.color,\n            borderColor: '#000000',\n            fontSize: '25px'\n          },\n          value: props.second_label,\n          children: props.second_label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), props.third_list && props.third_label ? /*#__PURE__*/_jsxDEV(ToggleButton, {\n          style: {\n            backgroundColor: thirdButton.background,\n            color: thirdButton.color,\n            borderColor: '#000000',\n            fontSize: '25px'\n          },\n          value: props.third_label,\n          children: props.third_label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 63\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(UpperButtonMenu, \"W799qNHQkqQnySF0JVMEBU71/fA=\");\n_c = UpperButtonMenu;\nexport default UpperButtonMenu;\nvar _c;\n$RefreshReg$(_c, \"UpperButtonMenu\");","map":{"version":3,"names":["styled","TextField","Switch","Grid","ToggleButton","ToggleButtonGroup","React","useState","CssTextField","color","borderBottomColor","borderColor","width","Android12Switch","theme","padding","borderRadius","content","position","top","transform","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","margin","activeButtonColor","background","inactiveButtonColor","UpperButtonMenu","props","activeButton","first_label","firstButton","setFirstButton","secondButton","setSecondButton","thirdButton","setThirdButton","handleChange","event","newActiveButton","listSetter","first_list","second_label","second_list","third_list","third_label","buttonSetter","backgroundColor","fontSize"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Utils/CustomTextFields.tsx"],"sourcesContent":["import {styled, TextField} from \"@mui/material\";\nimport Switch from \"@mui/material/Switch\";\nimport {Grid, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\nimport React, {useState} from \"react\";\n\nexport const CssTextField = styled(TextField)({\n\n    '& label.MuiInputLabel-root':{\n        color:'white',\n    },\n    '& label.Mui-focused': {\n        color: '#feac0d',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: '#feac0d',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: 'white',\n        },\n        '&:hover fieldset': {\n            borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor:'#feac0d',\n        },\n    },\n    width:'100%'\n});\n\nexport const Android12Switch = styled(Switch)(({ theme }) => ({\n    padding: 8,\n    '& .MuiSwitch-track': {\n        borderRadius: 22 / 2,\n        '&:before, &:after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            width: 16,\n            height: 16,\n        },\n        '&:before': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\n            left: 12,\n        },\n        '&:after': {\n            backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\n                theme.palette.getContrastText(theme.palette.primary.main),\n            )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\n            right: 12,\n        },\n    },\n    '& .MuiSwitch-thumb': {\n        boxShadow: 'none',\n        width: 16,\n        height: 16,\n        margin: 2,\n    },\n}));\n\nexport type ButtonStyleType = {\n    background: string,\n    color: string\n}\nexport const activeButtonColor: ButtonStyleType = {\n    background: '#feac0d',\n    color: '#ffffff'\n}\nexport const inactiveButtonColor: ButtonStyleType = {\n    background: '#ffffff',\n    color: '#feac0d'\n}\n\n\n\ntype UpperButtonsMenupropsType={\n    first_label:string,\n    second_label:string,\n    third_label:string | null,\n    first_list: any[],\n    second_list: any[],\n    third_list:any[]| null,\n    listSetter:any,\n    buttonSetter:any|null\n}\n\nconst UpperButtonMenu = (props: UpperButtonsMenupropsType) => {\n\n    type ButtonStyleType = {\n        background: string,\n        color: string\n    }\n    const activeButtonColor: ButtonStyleType = {\n        background: '#feac0d',\n        color: '#ffffff'\n    }\n    const inactiveButtonColor: ButtonStyleType = {\n        background: '#ffffff',\n        color: '#feac0d'\n    }\n    const activeButton = useState(props.first_label);\n    const [firstButton, setFirstButton] = useState<ButtonStyleType>(activeButtonColor)\n    const [secondButton, setSecondButton] = useState<ButtonStyleType>(inactiveButtonColor)\n    const [thirdButton, setThirdButton] = useState<ButtonStyleType>(inactiveButtonColor)\n\n    const handleChange = (event: React.MouseEvent<HTMLElement>, newActiveButton: string,) => {\n        if (newActiveButton === props.first_label) {\n            setFirstButton(activeButtonColor)\n            setSecondButton(inactiveButtonColor)\n            setThirdButton(inactiveButtonColor)\n            props.listSetter(props.first_list)\n        } else if (newActiveButton === props.second_label) {\n            setFirstButton(inactiveButtonColor)\n            setSecondButton(activeButtonColor)\n            setThirdButton(inactiveButtonColor)\n            props.listSetter(props.second_list)\n        } else if(props.third_list!==null) {\n            if (newActiveButton === props.third_label) {\n                setFirstButton(inactiveButtonColor)\n                setSecondButton(inactiveButtonColor)\n                setThirdButton(activeButtonColor)\n                props.listSetter(props.third_list)\n            }\n        }\n        if(props.buttonSetter) props.buttonSetter(newActiveButton)\n    };\n\n    return (\n        <>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{position:'fixed', top:'8%',margin:'auto', width:'100%'}}>\n                <ToggleButtonGroup value={activeButton} exclusive onChange={handleChange} aria-label=\"Platform\">\n                    <ToggleButton style={{\n                        backgroundColor: firstButton.background,\n                        color: firstButton.color,\n                        borderColor: '#000000',\n                        fontSize: '25px'\n                    }} value={props.first_label}>{props.first_label}</ToggleButton>\n                    <ToggleButton style={{\n                        backgroundColor: secondButton.background,\n                        color: secondButton.color,\n                        borderColor: '#000000',\n                        fontSize: '25px'\n                    }} value={props.second_label}>{props.second_label}</ToggleButton>\n                    {\n                        props.third_list && props.third_label?<ToggleButton style={{\n                                backgroundColor: thirdButton.background,\n                                color: thirdButton.color,\n                                borderColor: '#000000',\n                                fontSize: '25px'\n                            }} value={props.third_label}>{props.third_label}</ToggleButton>\n                            :\n                            null\n                    }\n                </ToggleButtonGroup>\n            </Grid>\n        </>\n    );\n}\n\nexport default UpperButtonMenu;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}