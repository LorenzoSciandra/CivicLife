{"ast":null,"code":"var _jsxFileName = \"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/VotationsAdmin.tsx\",\n  _s = $RefreshSig$();\nimport { AppBar, Button, Dialog, Divider, Grid, IconButton, ListItemSecondaryAction, ListItemText, ToggleButton, ToggleButtonGroup, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport '../App.css';\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport List from \"@mui/material/List\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { isInstanceOfAuthError, logoutUser } from \"../APIs/OauthAPI\";\nimport { activeButtonColor, inactiveButtonColor } from \"../Utils/CustomTextFields\";\nimport { changeVotationStatus, getActiveVotations, getEndedVotations, getProgrammedVotations, VotationStatus } from \"../APIs/VotationsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VotationsAdmin = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tokenData = location.state.token;\n  const buttons = ['Attive', 'Concluse', 'Programmate'];\n  const [clickedVotation, setClickedVotation] = useState(null);\n  const [activeVotations, setactiveVotations] = useState(null);\n  const [endedVotations, setEndedVotations] = useState(null);\n  const [programmedVotations, setProgrammedVotations] = useState(null);\n  const [firstButton, setFirstButton] = useState(activeButtonColor);\n  const [secondButton, setSecondButton] = useState(inactiveButtonColor);\n  const [thirdButton, setThirdButton] = useState(inactiveButtonColor);\n  const [activeButton, setActiveButton] = useState(buttons[0]);\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [buttonChanged, setButtonChanged] = useState(false);\n  const getActives = async () => {\n    const response = await getActiveVotations();\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setactiveVotations(response);\n    }\n  };\n  const getEndeds = async () => {\n    const response = await getEndedVotations();\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setEndedVotations(response);\n    }\n  };\n  const getProgrammed = async () => {\n    const response = await getProgrammedVotations(tokenData);\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setProgrammedVotations(response);\n    }\n  };\n  useEffect(() => {\n    if (firstLoad) {\n      if (activeVotations === null) {\n        console.log('first load getting active votations');\n        getActives();\n      }\n    }\n    setFirstLoad(false);\n  }, []);\n  useEffect(() => {\n    if (buttonChanged) {\n      if (activeButton === buttons[0]) {\n        console.log('Attive');\n        getActives();\n      }\n      if (activeButton === buttons[1]) {\n        console.log('Concluse');\n        getEndeds();\n      }\n      if (activeButton === buttons[2]) {\n        console.log('Programmate');\n        getProgrammed();\n      }\n    }\n    setButtonChanged(true);\n  }, [activeButton]);\n  const handleVotationDetailsOpen = value => {\n    navigate('/votations/votationDetails', {\n      state: {\n        token: tokenData,\n        votation: value\n      }\n    });\n  };\n  const handleDisable = async value => {\n    console.log('Disabilita', value);\n    const result = await changeVotationStatus(tokenData, value.title, VotationStatus.TERMINATED);\n  };\n  const handleEnable = async value => {\n    console.log('Abilita', value);\n    const result = await changeVotationStatus(tokenData, value.title, VotationStatus.ACTIVE);\n  };\n  const handleVotationClick = value => {\n    setClickedVotation(value);\n  };\n  const handleDialogClose = () => {\n    setClickedVotation(null);\n  };\n  const handleChange = (event, newActiveButton) => {\n    if (newActiveButton === buttons[0]) {\n      setFirstButton(activeButtonColor);\n      setSecondButton(inactiveButtonColor);\n      setThirdButton(inactiveButtonColor);\n    } else if (newActiveButton === buttons[1]) {\n      setFirstButton(inactiveButtonColor);\n      setSecondButton(activeButtonColor);\n      setThirdButton(inactiveButtonColor);\n    } else if (newActiveButton === buttons[2]) {\n      setFirstButton(inactiveButtonColor);\n      setSecondButton(inactiveButtonColor);\n      setThirdButton(activeButtonColor);\n    }\n    setActiveButton(newActiveButton);\n  };\n  const logout = async () => {\n    if (tokenData !== null) {\n      const response = await logoutUser(tokenData);\n      if (typeof response === 'boolean') {\n        if (response) {\n          navigate('/');\n        } else {\n          console.log('error');\n        }\n      } else {\n        navigate('/error', {\n          state: {\n            error: response\n          }\n        });\n      }\n    }\n  };\n  const goBack = () => {\n    navigate(-1);\n  };\n  const statusTyphografy = status => {\n    if (status === VotationStatus.ACTIVE) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: 'green'\n        },\n        children: \"Attivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 20\n      }, this);\n    } else if (status === VotationStatus.TERMINATED) {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: 'red'\n        },\n        children: \"Terminata\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(AppBar, {\n          position: \"fixed\",\n          sx: {\n            backgroundColor: '#3d4347'\n          },\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              edge: \"start\",\n              \"aria-label\": \"menu\",\n              sx: {\n                mr: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                onClick: goBack,\n                sx: {\n                  fontSize: '3rem',\n                  color: 'white'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"div\",\n              sx: {\n                flexGrow: 1\n              },\n              style: {\n                justifyContent: 'center',\n                color: '#feac0d',\n                textAlign: 'center',\n                fontSize: '1.8rem'\n              },\n              children: \"Moderazione votazioni\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: logout,\n              style: {\n                color: 'white',\n                backgroundColor: \"red\"\n              },\n              children: \"logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      sx: {\n        position: 'fixed',\n        top: '8%',\n        margin: 'auto',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        value: activeButton,\n        exclusive: true,\n        onChange: handleChange,\n        \"aria-label\": \"Platform\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          style: {\n            backgroundColor: firstButton.background,\n            color: firstButton.color,\n            borderColor: '#000000',\n            fontSize: 'calc(15px+0.40vw)'\n          },\n          value: buttons[0],\n          children: buttons[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          style: {\n            backgroundColor: secondButton.background,\n            color: secondButton.color,\n            borderColor: '#000000',\n            fontSize: 'calc(15px+0.40vw)'\n          },\n          value: buttons[1],\n          children: buttons[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          style: {\n            backgroundColor: thirdButton.background,\n            color: thirdButton.color,\n            borderColor: '#000000',\n            fontSize: 'calc(15px+0.40vw)'\n          },\n          value: buttons[2],\n          children: buttons[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          width: '80%',\n          overflow: 'auto',\n          maxHeight: 580,\n          position: 'fixed',\n          top: 150,\n          bottom: 100\n        },\n        children: activeButton === buttons[0] && activeVotations ? activeVotations.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              onClick: () => handleVotationClick(value),\n              children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: '1.2rem',\n                      fontWeight: 'bold'\n                    },\n                    children: value.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 60\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: statusTyphografy(value.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        }) : activeButton === buttons[1] && endedVotations ? endedVotations.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              onClick: () => handleVotationClick(value),\n              children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: '1.2rem',\n                      fontWeight: 'bold'\n                    },\n                    children: value.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: statusTyphografy(value.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        }) : activeButton === buttons[2] && programmedVotations ? programmedVotations.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              onClick: () => handleVotationClick(value),\n              children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontSize: '1.2rem',\n                      fontWeight: 'bold'\n                    },\n                    children: value.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 64\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: statusTyphografy(value.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      maxWidth: \"sm\",\n      fullWidth: true,\n      open: clickedVotation !== null,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Operazioni su votazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          children: \"Chiudi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), clickedVotation && clickedVotation.status === VotationStatus.TERMINATED ? null : clickedVotation && clickedVotation.status === VotationStatus.ACTIVE ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDisable(clickedVotation),\n          children: \"Termina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 29\n        }, this) : clickedVotation && clickedVotation.status === VotationStatus.PROGRAMMED ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleEnable(clickedVotation),\n          children: \"Attiva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleVotationDetailsOpen(clickedVotation),\n          children: \"Visualizza Dettagli\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(VotationsAdmin, \"FGdx66ilCBnyeZ7Xg2B3bI4/DUA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = VotationsAdmin;\nexport default VotationsAdmin;\nvar _c;\n$RefreshReg$(_c, \"VotationsAdmin\");","map":{"version":3,"names":["AppBar","Button","Dialog","Divider","Grid","IconButton","ListItemSecondaryAction","ListItemText","ToggleButton","ToggleButtonGroup","Typography","React","useEffect","useState","ListItem","ListItemButton","List","useLocation","useNavigate","DialogTitle","DialogActions","Box","Toolbar","ArrowBackIcon","isInstanceOfAuthError","logoutUser","activeButtonColor","inactiveButtonColor","changeVotationStatus","getActiveVotations","getEndedVotations","getProgrammedVotations","VotationStatus","VotationsAdmin","navigate","location","tokenData","state","token","buttons","clickedVotation","setClickedVotation","activeVotations","setactiveVotations","endedVotations","setEndedVotations","programmedVotations","setProgrammedVotations","firstButton","setFirstButton","secondButton","setSecondButton","thirdButton","setThirdButton","activeButton","setActiveButton","firstLoad","setFirstLoad","buttonChanged","setButtonChanged","getActives","response","error","getEndeds","getProgrammed","console","log","handleVotationDetailsOpen","value","votation","handleDisable","result","title","TERMINATED","handleEnable","ACTIVE","handleVotationClick","handleDialogClose","handleChange","event","newActiveButton","logout","goBack","statusTyphografy","status","color","flexGrow","backgroundColor","mr","fontSize","justifyContent","textAlign","position","top","margin","width","background","borderColor","overflow","maxHeight","bottom","map","index","fontWeight","PROGRAMMED"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/VotationsAdmin.tsx"],"sourcesContent":["import {\n    AppBar,\n    Button,\n    Dialog,\n    Divider,\n    Grid,\n    IconButton,\n    ListItemSecondaryAction, ListItemText,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport React, {useEffect, useState} from \"react\";\nimport '../App.css'\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport List from \"@mui/material/List\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport {isInstanceOfAuthError, logoutUser} from \"../APIs/OauthAPI\";\nimport {activeButtonColor, ButtonStyleType, inactiveButtonColor} from \"../Utils/CustomTextFields\";\nimport {\n    changeVotationStatus,\n    getActiveVotations,\n    getEndedVotations,\n    getProgrammedVotations,\n    Votation,\n    VotationStatus\n} from \"../APIs/VotationsAPI\";\n\n\n\nconst VotationsAdmin = () => {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const tokenData = location.state.token\n    const buttons = ['Attive', 'Concluse','Programmate']\n    const [clickedVotation, setClickedVotation] = useState<Votation | null>(null)\n    const [activeVotations, setactiveVotations] = useState<Votation[] | null>(null)\n    const [endedVotations, setEndedVotations] = useState<Votation[] | null>(null)\n    const [programmedVotations, setProgrammedVotations] = useState<Votation[] | null>(null)\n    const [firstButton, setFirstButton] = useState<ButtonStyleType>(activeButtonColor)\n    const [secondButton, setSecondButton] = useState<ButtonStyleType>(inactiveButtonColor)\n    const [thirdButton, setThirdButton] = useState<ButtonStyleType>(inactiveButtonColor)\n    const [activeButton, setActiveButton] = useState(buttons[0]);\n    const [firstLoad, setFirstLoad] = useState(true)\n    const [buttonChanged, setButtonChanged] = useState(false)\n\n    const getActives = async () => {\n        const response = await getActiveVotations()\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setactiveVotations(response)\n        }\n    }\n\n    const getEndeds = async () => {\n        const response = await getEndedVotations()\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setEndedVotations(response)\n        }\n    }\n\n    const getProgrammed = async () => {\n        const response = await getProgrammedVotations(tokenData)\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setProgrammedVotations(response)\n        }\n    }\n\n    useEffect(() => {\n        if (firstLoad) {\n            if (activeVotations === null) {\n                console.log('first load getting active votations')\n                getActives()\n            }\n        }\n        setFirstLoad(false)\n    }, [])\n\n    useEffect(() => {\n        if (buttonChanged) {\n            if (activeButton === buttons[0]) {\n                console.log('Attive')\n                getActives()\n            }\n            if (activeButton === buttons[1]) {\n                console.log('Concluse')\n                getEndeds()\n            }\n            if(activeButton === buttons[2]){\n                console.log('Programmate')\n                getProgrammed()\n            }\n        }\n        setButtonChanged(true)\n    }, [activeButton])\n\n\n    const handleVotationDetailsOpen = (value: any) => {\n        navigate('/votations/votationDetails', {state: {token: tokenData, votation: value}})\n    }\n\n    const handleDisable = async (value: any) => {\n        console.log('Disabilita', value)\n        const result = await changeVotationStatus(tokenData, value.title, VotationStatus.TERMINATED)\n    }\n    const handleEnable = async (value: any) => {\n        console.log('Abilita', value)\n        const result = await changeVotationStatus(tokenData, value.title, VotationStatus.ACTIVE)\n    }\n\n    const handleVotationClick = (value: any) => {\n        setClickedVotation(value)\n    }\n\n    const handleDialogClose = () => {\n        setClickedVotation(null)\n    }\n\n    const handleChange = (event: React.MouseEvent<HTMLElement>, newActiveButton: string,) => {\n        if (newActiveButton === buttons[0]) {\n            setFirstButton(activeButtonColor)\n            setSecondButton(inactiveButtonColor)\n            setThirdButton(inactiveButtonColor)\n        } else if (newActiveButton === buttons[1]) {\n            setFirstButton(inactiveButtonColor)\n            setSecondButton(activeButtonColor)\n            setThirdButton(inactiveButtonColor)\n        } else if (newActiveButton === buttons[2]) {\n            setFirstButton(inactiveButtonColor)\n            setSecondButton(inactiveButtonColor)\n            setThirdButton(activeButtonColor)\n        }\n        setActiveButton(newActiveButton);\n    }\n\n    const logout = async () => {\n        if (tokenData !== null) {\n            const response = await logoutUser(tokenData)\n            if (typeof response === 'boolean') {\n                if (response) {\n                    navigate('/')\n                } else {\n                    console.log('error')\n                }\n            } else {\n                navigate('/error', {state: {error: response}})\n            }\n        }\n    }\n\n    const goBack = () => {\n        navigate(-1)\n    }\n\n    const statusTyphografy = (status: VotationStatus) => {\n        if (status === VotationStatus.ACTIVE) {\n            return <Typography sx={{color: 'green'}}>Attivo</Typography>\n        } else if (status === VotationStatus.TERMINATED) {\n            return <Typography sx={{color: 'red'}}>Terminata</Typography>\n        }\n    }\n\n    return (\n        <Grid container direction=\"row\" spacing={2}>\n            <Grid item xs={12} justifyContent=\"center\" alignItems=\"center\">\n                <Box sx={{flexGrow: 1}}>\n                    <AppBar position=\"fixed\" sx={{backgroundColor: '#3d4347'}}>\n                        <Toolbar>\n                            <IconButton\n                                size=\"small\"\n                                edge=\"start\"\n                                aria-label=\"menu\"\n                                sx={{mr: 2}}\n                            >\n                                <ArrowBackIcon onClick={goBack} sx={{fontSize: '3rem', color: 'white'}}/>\n                            </IconButton>\n\n                            <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}\n                                        style={{\n                                            justifyContent: 'center',\n                                            color: '#feac0d',\n                                            textAlign: 'center',\n                                            fontSize: '1.8rem',\n                                        }}>\n                                Moderazione votazioni\n                            </Typography>\n                            <Button\n                                onClick={logout}\n                                style={{\n                                    color: 'white',\n                                    backgroundColor: \"red\",\n                                }}>\n\n                                logout\n                            </Button>\n                        </Toolbar>\n                    </AppBar>\n                </Box>\n            </Grid>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\n                  sx={{position: 'fixed', top: '8%', margin: 'auto', width: '100%'}}>\n                <ToggleButtonGroup value={activeButton} exclusive onChange={handleChange} aria-label=\"Platform\">\n                    <ToggleButton style={{\n                        backgroundColor: firstButton.background,\n                        color: firstButton.color,\n                        borderColor: '#000000',\n                        fontSize: 'calc(15px+0.40vw)'\n                    }} value={buttons[0]}>{buttons[0]}</ToggleButton>\n                    <ToggleButton style={{\n                        backgroundColor: secondButton.background,\n                        color: secondButton.color,\n                        borderColor: '#000000',\n                        fontSize: 'calc(15px+0.40vw)'\n                    }} value={buttons[1]}>{buttons[1]}</ToggleButton>\n                    <ToggleButton style={{\n                        backgroundColor: thirdButton.background,\n                        color: thirdButton.color,\n                        borderColor: '#000000',\n                        fontSize: 'calc(15px+0.40vw)'\n                    }} value={buttons[2]}>{buttons[2]}</ToggleButton>\n                </ToggleButtonGroup>\n            </Grid>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <List sx={{\n                    width: '80%',\n                    overflow: 'auto',\n                    maxHeight: 580,\n                    position: 'fixed',\n                    top: 150,\n                    bottom: 100\n                }}>\n                    {activeButton === buttons[0] && activeVotations ? activeVotations.map((value, index) => {\n                        return (\n                            <>\n                                <ListItem key={index} onClick={() => handleVotationClick(value)}>\n                                <ListItemButton>\n                                    <ListItemText primary={<Typography sx={{fontSize: '1.2rem', fontWeight: 'bold'}}>{value.title}</Typography>}/>\n                                </ListItemButton>\n                                <ListItemSecondaryAction>{statusTyphografy(value.status)}</ListItemSecondaryAction>\n                            </ListItem>\n                                <Divider color='white'/>\n                            </>\n                        );\n                    }) : activeButton === buttons[1] && endedVotations ? endedVotations.map((value, index) => {\n                        return (\n                            <>\n                                <ListItem key={index} onClick={() => handleVotationClick(value)}>\n                                    <ListItemButton>\n                                        <ListItemText primary={<Typography sx={{fontSize: '1.2rem', fontWeight: 'bold'}}>{value.title}</Typography>}/>\n                                    </ListItemButton>\n                                    <ListItemSecondaryAction>{statusTyphografy(value.status)}</ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider color='white'/>\n                            </>\n                        );\n                    }) : activeButton === buttons[2] && programmedVotations ? programmedVotations.map((value, index) => {\n                        return (\n                            <>\n                                <ListItem key={index} onClick={() => handleVotationClick(value)}>\n                                    <ListItemButton>\n                                        <ListItemText primary={<Typography sx={{fontSize: '1.2rem', fontWeight: 'bold'}}>{value.title}</Typography>}/>\n                                    </ListItemButton>\n                                    <ListItemSecondaryAction>{statusTyphografy(value.status)}</ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider color='white'/>\n                            </>\n                        );\n                    }):null}\n                </List>\n            </Grid>\n            <Dialog maxWidth={\"sm\"} fullWidth={true} open={clickedVotation !== null} onClose={handleDialogClose}>\n                <DialogTitle>Operazioni su votazione</DialogTitle>\n\n                <DialogActions>\n                    <Button onClick={handleDialogClose}>Chiudi</Button>\n                    {clickedVotation && clickedVotation.status===VotationStatus.TERMINATED? null:\n                        clickedVotation && clickedVotation.status===VotationStatus.ACTIVE?\n                            <Button onClick={() => handleDisable(clickedVotation)}>Termina</Button>:\n                            clickedVotation && clickedVotation.status===VotationStatus.PROGRAMMED?\n                                <Button onClick={() => handleEnable(clickedVotation)}>Attiva</Button>:null}\n                    <Button onClick={() => handleVotationDetailsOpen(clickedVotation)}>Visualizza Dettagli</Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    )\n}\n\nexport default VotationsAdmin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}