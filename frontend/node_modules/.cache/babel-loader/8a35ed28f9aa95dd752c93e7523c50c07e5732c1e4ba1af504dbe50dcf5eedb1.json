{"ast":null,"code":"import axios from \"axios\";\nimport { Base64 } from \"js-base64\";\nexport const getLoggedUser = async tokenData => {\n  console.log('recupero utente', tokenData);\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};\n\n// export const getAllUsers = async (tokenData: TokenData) => {\n//     const emailBase64= Base64.encode(tokenData.email)\n//     const providerBase64= Base64.encode(tokenData.provider)\n//     const tokenBase64= Base64.encode(tokenData.token)\n//     const url = 'http://localhost:8080/userAPI/v1/users/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n//     return await axios.get(url).then((response) => {\n//         console.log('response', response.data)\n//         return response.data\n//     })\n// }\n\nexport const updateDomicile = async (domicile, tokenData) => {\n  console.log('domicile', domicile);\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/userAPI/v1/user/update/domicile/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  console.log('url', url);\n  return axios.post(url, domicile).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  });\n};","map":{"version":3,"names":["axios","Base64","getLoggedUser","tokenData","console","log","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","data","updateDomicile","domicile","post"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts"],"sourcesContent":["import {TokenData} from \"./oauthAPI\";\nimport axios from \"axios\";\nimport {Base64} from \"js-base64\";\n\nexport type UserType = {\n    email: string,\n    name: string,\n    surname: string,\n    admin: boolean,\n    fiscalCode:string,\n    residence:string,\n    birthDate:number,\n    domicile:string,\n    status:string,\n    telephoneNumber: number\n}\n\nexport const getLoggedUser = async (tokenData: TokenData) => {\n    console.log('recupero utente', tokenData)\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/userAPI/v1/user/get/' + tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}\n\n// export const getAllUsers = async (tokenData: TokenData) => {\n//     const emailBase64= Base64.encode(tokenData.email)\n//     const providerBase64= Base64.encode(tokenData.provider)\n//     const tokenBase64= Base64.encode(tokenData.token)\n//     const url = 'http://localhost:8080/userAPI/v1/users/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n//     return await axios.get(url).then((response) => {\n//         console.log('response', response.data)\n//         return response.data\n//     })\n// }\n\nexport const updateDomicile=async (domicile:string,tokenData: TokenData)=>{\n    console.log('domicile',domicile)\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url= 'http://localhost:8080/userAPI/v1/user/update/domicile/'+tokenData.email+ '?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    console.log('url',url)\n    return axios.post(url, domicile).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    })\n}"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,WAAW;AAehC,OAAO,MAAMC,aAAa,GAAG,MAAOC,SAAoB,IAAK;EACzDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,SAAS,CAAC;EACzC,MAAMG,WAAW,GAAEL,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACK,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAER,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACO,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAEV,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACS,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAG,4CAA4C,GAAGV,SAAS,CAACK,KAAK,GAAE,SAAS,GAAEF,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EAC5J,OAAO,MAAMX,KAAK,CAACc,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IAC3CZ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEW,QAAQ,CAACC,IAAI,CAAC;IACtC,OAAOD,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAC,OAAOC,QAAe,EAAChB,SAAoB,KAAG;EACtEC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACc,QAAQ,CAAC;EAChC,MAAMb,WAAW,GAAEL,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACK,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAER,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACO,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAEV,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACS,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAE,wDAAwD,GAACV,SAAS,CAACK,KAAK,GAAE,SAAS,GAAEF,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EACrKP,OAAO,CAACC,GAAG,CAAC,KAAK,EAACQ,GAAG,CAAC;EACtB,OAAOb,KAAK,CAACoB,IAAI,CAACP,GAAG,EAAEM,QAAQ,CAAC,CAACJ,IAAI,CAAEC,QAAQ,IAAK;IAChDZ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEW,QAAQ,CAACC,IAAI,CAAC;IACtC,OAAOD,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}