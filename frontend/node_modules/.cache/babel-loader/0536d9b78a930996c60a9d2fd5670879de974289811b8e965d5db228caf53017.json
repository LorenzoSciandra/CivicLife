{"ast":null,"code":"import axios from 'axios';\nimport { Base64 } from \"js-base64\";\nexport let ValidateCode;\n(function (ValidateCode) {\n  ValidateCode[\"ACTIVE\"] = \"ACTIVE\";\n  ValidateCode[\"EXPIRED\"] = \"EXPIRED\";\n  ValidateCode[\"INVALID_EMAIL\"] = \"INVALID_EMAIL\";\n  ValidateCode[\"INVALID_TOKEN\"] = \"INVALID_TOKEN\";\n  ValidateCode[\"INVALID_PROVIDER\"] = \"INVALID_PROVIDER\";\n  ValidateCode[\"INCOMPLETE_CREDENTIALS\"] = \"INCOMPLETE_CREDENTIALS\";\n  ValidateCode[\"AUTH_SERVER_ERROR\"] = \"AUTH_SERVER_ERROR\";\n  ValidateCode[\"UPDATE_FAIL\"] = \"UPDATE_FAIL\";\n  ValidateCode[\"LOGOUT_FAIL\"] = \"LOGOUT_FAIL\";\n  ValidateCode[\"LOGIN_FAIL\"] = \"LOGIN_FAIL\";\n  ValidateCode[\"GET_FAIL\"] = \"GET_FAIL\";\n  ValidateCode[\"DELETE_FAIL\"] = \"DELETE_FAIL\";\n})(ValidateCode || (ValidateCode = {}));\nexport function isInstanceOfAuthError(object) {\n  return 'code' in object;\n}\nexport const exchangeToken = async token => {\n  console.log('qui ho questo', token);\n  let url = 'http://localhost:8080/authAPI/v1/token/' + token;\n  return await axios.get(url).then(response => {\n    const data = Base64.decode(response.data);\n    const values = data.split(\",\");\n    console.log('values trovati', values);\n    for (let i = 0; i < values.length; i++) {\n      values[i] = values[i].split(\": \")[1];\n    }\n    return {\n      email: values[0],\n      provider: values[1],\n      token: values[2]\n    };\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.LOGIN_FAIL,\n      method: 'GET',\n      requestedPath: url\n    };\n    return authError;\n  });\n};\nexport const logoutUser = async tokenData => {\n  const TokenKey = {\n    email: tokenData.email,\n    provider: tokenData.provider\n  };\n  const url = 'http://localhost:8080/authAPI/v1/deleteToken/' + tokenData.email;\n  return await axios.post(url, JSON.stringify(TokenKey), {\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(value => {\n    return value.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.LOGOUT_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};","map":{"version":3,"names":["axios","Base64","ValidateCode","isInstanceOfAuthError","object","exchangeToken","token","console","log","url","get","then","response","data","decode","values","split","i","length","email","provider","catch","authError","code","LOGIN_FAIL","method","requestedPath","logoutUser","tokenData","TokenKey","post","JSON","stringify","headers","value","LOGOUT_FAIL"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/OauthAPI.ts"],"sourcesContent":["import axios from 'axios';\nimport {Base64} from \"js-base64\";\nimport {User} from \"./UsersAPI\";\n\nexport type TokenData= {\n    email:string,\n    provider:string,\n    token:string,\n}\n\nexport enum ValidateCode{\n    ACTIVE = 'ACTIVE',\n    EXPIRED = 'EXPIRED',\n    INVALID_EMAIL = 'INVALID_EMAIL',\n    INVALID_TOKEN = 'INVALID_TOKEN',\n    INVALID_PROVIDER = 'INVALID_PROVIDER',\n    INCOMPLETE_CREDENTIALS = 'INCOMPLETE_CREDENTIALS',\n    AUTH_SERVER_ERROR = 'AUTH_SERVER_ERROR',\n    UPDATE_FAIL = 'UPDATE_FAIL',\n    LOGOUT_FAIL = 'LOGOUT_FAIL',\n    LOGIN_FAIL = 'LOGIN_FAIL',\n    GET_FAIL = 'GET_FAIL',\n    DELETE_FAIL = 'DELETE_FAIL',\n\n}\n\nexport interface AuthError{\n    code: ValidateCode,\n    method: string,\n    requestedPath: string\n}\n\nexport function isInstanceOfAuthError(object:any): object is AuthError {\n    return 'code' in object\n}\n\nexport const exchangeToken = async (token: string):Promise<TokenData|AuthError>=> {\n    console.log('qui ho questo',token)\n    let url = 'http://localhost:8080/authAPI/v1/token/'+ token\n    return await axios.get(url).then((response) => {\n        const data = Base64.decode(response.data);\n        const values = data.split(\",\")\n        console.log('values trovati',values)\n        for(let i = 0; i < values.length; i++){\n            values[i] = values[i].split(\": \")[1]\n        }\n        return{\n            email: values[0],\n            provider: values[1],\n            token: values[2],\n        }\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.LOGIN_FAIL,\n            method: 'GET',\n            requestedPath: url\n        }\n        return authError\n    })\n}\n\nexport const logoutUser = async (tokenData: TokenData): Promise<boolean | AuthError> => {\n\n    const TokenKey= {\n        email: tokenData.email,\n        provider: tokenData.provider,\n    }\n\n    const url = 'http://localhost:8080/authAPI/v1/deleteToken/' + tokenData.email\n    return await axios.post<boolean| AuthError>(url,\n        JSON.stringify(TokenKey),\n        {\n            headers: {\"Content-Type\": \"text/plain\"}\n        })\n        .then(value => {\n            return value.data;\n        }).catch(() => {\n            const authError: AuthError = {\n                code: ValidateCode.LOGOUT_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        })\n}\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,WAAW;AAShC,WAAYC,YAAY;AAcvB,WAdWA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;EAAZA,YAAY;AAAA,GAAZA,YAAY,KAAZA,YAAY;AAsBxB,OAAO,SAASC,qBAAqB,CAACC,MAAU,EAAuB;EACnE,OAAO,MAAM,IAAIA,MAAM;AAC3B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,KAAa,IAAiC;EAC9EC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACF,KAAK,CAAC;EAClC,IAAIG,GAAG,GAAG,yCAAyC,GAAEH,KAAK;EAC1D,OAAO,MAAMN,KAAK,CAACU,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IAC3C,MAAMC,IAAI,GAAGZ,MAAM,CAACa,MAAM,CAACF,QAAQ,CAACC,IAAI,CAAC;IACzC,MAAME,MAAM,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;IAC9BT,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACO,MAAM,CAAC;IACpC,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;MAClCF,MAAM,CAACE,CAAC,CAAC,GAAGF,MAAM,CAACE,CAAC,CAAC,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC;IACA,OAAM;MACFG,KAAK,EAAEJ,MAAM,CAAC,CAAC,CAAC;MAChBK,QAAQ,EAAEL,MAAM,CAAC,CAAC,CAAC;MACnBT,KAAK,EAAES,MAAM,CAAC,CAAC;IACnB,CAAC;EACL,CAAC,CAAC,CAACM,KAAK,CAAC,MAAM;IACX,MAAMC,SAAoB,GAAG;MACzBC,IAAI,EAAErB,YAAY,CAACsB,UAAU;MAC7BC,MAAM,EAAE,KAAK;MACbC,aAAa,EAAEjB;IACnB,CAAC;IACD,OAAOa,SAAS;EACpB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOC,SAAoB,IAAmC;EAEpF,MAAMC,QAAQ,GAAE;IACZV,KAAK,EAAES,SAAS,CAACT,KAAK;IACtBC,QAAQ,EAAEQ,SAAS,CAACR;EACxB,CAAC;EAED,MAAMX,GAAG,GAAG,+CAA+C,GAAGmB,SAAS,CAACT,KAAK;EAC7E,OAAO,MAAMnB,KAAK,CAAC8B,IAAI,CAAqBrB,GAAG,EAC3CsB,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,EACxB;IACII,OAAO,EAAE;MAAC,cAAc,EAAE;IAAY;EAC1C,CAAC,CAAC,CACDtB,IAAI,CAACuB,KAAK,IAAI;IACX,OAAOA,KAAK,CAACrB,IAAI;EACrB,CAAC,CAAC,CAACQ,KAAK,CAAC,MAAM;IACX,MAAMC,SAAoB,GAAG;MACzBC,IAAI,EAAErB,YAAY,CAACiC,WAAW;MAC9BV,MAAM,EAAE,MAAM;MACdC,aAAa,EAAEjB,GAAG,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,OAAOM,SAAS;EACpB,CAAC,CAAC;AACV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}