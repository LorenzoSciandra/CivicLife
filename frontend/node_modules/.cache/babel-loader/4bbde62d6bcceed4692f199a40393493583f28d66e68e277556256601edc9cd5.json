{"ast":null,"code":"var _jsxFileName = \"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/Votations.tsx\",\n  _s = $RefreshSig$();\nimport { Divider, Grid } from \"@mui/material\";\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport React, { useState } from \"react\";\nimport '../App.css';\nimport Box from \"@mui/material/Box\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Votations = () => {\n  _s();\n  const buttons = ['Attive', 'Concluse'];\n  const [activeList, setActiveList] = useState(['votazione1', 'votazione2', 'votazione3', 'votazione4', 'votazione5', 'votazione6', 'votazione7']);\n  const [endedList, setEndedList] = useState(['votazione1 conclusa', 'votazione2 conclusa', 'votazione3 conclusa', 'votazione4 conclusa']);\n  const [showingList, setShowingList] = useState(activeList);\n  const [clickedVotation, setClickedVotation] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const handleInitiativeDetailsOpen = value => {\n    setClickedVotation(value);\n    setShowModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(UpperButtonMenu, {\n      first_label: buttons[0],\n      second_label: buttons[1],\n      third_label: null,\n      first_list: activeList,\n      second_list: endedList,\n      third_list: null,\n      listSetter: setShowingList,\n      buttonSetter: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '70%',\n          height: '100%'\n        },\n        children: showingList.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                onClick: () => handleInitiativeDetailsOpen(value),\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Votations, \"vRHlicEiB2S92uoVQO+77c7eRvc=\");\n_c = Votations;\nexport default Votations;\nvar _c;\n$RefreshReg$(_c, \"Votations\");","map":{"version":3,"names":["Divider","Grid","UpperButtonMenu","React","useState","Box","ListItem","ListItemButton","Votations","buttons","activeList","setActiveList","endedList","setEndedList","showingList","setShowingList","clickedVotation","setClickedVotation","showModal","setShowModal","handleInitiativeDetailsOpen","value","width","height","map","index"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/Votations.tsx"],"sourcesContent":["import {Divider, Grid} from \"@mui/material\";\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport React, {useState} from \"react\";\nimport '../App.css'\nimport Box from \"@mui/material/Box\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\n\n\nconst Votations = () => {\n    const buttons = ['Attive', 'Concluse']\n    const [activeList, setActiveList] = useState<any[]>(['votazione1', 'votazione2', 'votazione3', 'votazione4', 'votazione5', 'votazione6', 'votazione7'])\n    const [endedList, setEndedList] = useState<any[]>(['votazione1 conclusa', 'votazione2 conclusa', 'votazione3 conclusa', 'votazione4 conclusa'])\n    const [showingList, setShowingList] = useState<any[]>(activeList)\n    const [clickedVotation, setClickedVotation]= useState(null)\n    const [showModal, setShowModal] = useState(false)\n\n    const handleInitiativeDetailsOpen = (value: any) => {\n        setClickedVotation(value)\n        setShowModal(true)\n    }\n\n    return (\n        <Grid container direction=\"row\" spacing={2}>\n            <UpperButtonMenu first_label={buttons[0]} second_label={buttons[1]} third_label={null}\n                             first_list={activeList} second_list={endedList} third_list={null}\n                             listSetter={setShowingList} buttonSetter={null}/>\n\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Box sx={{width: '70%', height: '100%'}}>\n                    {showingList.map((value, index) => {\n                        return (\n                            <><\n                                ListItem key={index}>\n                                <ListItemButton\n                                    onClick={() => handleInitiativeDetailsOpen(value)}>{value}</ListItemButton>\n                            </ListItem>\n                                <Divider color='white'/>\n                            </>\n                        );\n                    })}\n                </Box>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Votations;"],"mappings":";;AAAA,SAAQA,OAAO,EAAEC,IAAI,QAAO,eAAe;AAC3C,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,YAAY;AACnB,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,cAAc,MAAM,8BAA8B;AAAC;AAAA;AAG1D,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAMC,OAAO,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAQ,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;EACvJ,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAQ,CAAC,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,qBAAqB,CAAC,CAAC;EAC/I,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAQM,UAAU,CAAC;EACjE,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAEb,QAAQ,CAAC,IAAI,CAAC;EAC3D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMgB,2BAA2B,GAAIC,KAAU,IAAK;IAChDJ,kBAAkB,CAACI,KAAK,CAAC;IACzBF,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACI,QAAC,IAAI;IAAC,SAAS;IAAC,SAAS,EAAC,KAAK;IAAC,OAAO,EAAE,CAAE;IAAA,wBACvC,QAAC,eAAe;MAAC,WAAW,EAAEV,OAAO,CAAC,CAAC,CAAE;MAAC,YAAY,EAAEA,OAAO,CAAC,CAAC,CAAE;MAAC,WAAW,EAAE,IAAK;MACrE,UAAU,EAAEC,UAAW;MAAC,WAAW,EAAEE,SAAU;MAAC,UAAU,EAAE,IAAK;MACjE,UAAU,EAAEG,cAAe;MAAC,YAAY,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAElE,QAAC,IAAI;MAAC,IAAI;MAAC,EAAE,EAAE,EAAG;MAAC,OAAO,EAAC,MAAM;MAAC,cAAc,EAAC,QAAQ;MAAC,UAAU,EAAC,QAAQ;MAAA,uBACzE,QAAC,GAAG;QAAC,EAAE,EAAE;UAACO,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAM,CAAE;QAAA,UACnCT,WAAW,CAACU,GAAG,CAAC,CAACH,KAAK,EAAEI,KAAK,KAAK;UAC/B,oBACI;YAAA,wBAAE,QACE,QAAQ;cAAA,uBACR,QAAC,cAAc;gBACX,OAAO,EAAE,MAAML,2BAA2B,CAACC,KAAK,CAAE;gBAAA,UAAEA;cAAK;gBAAA;gBAAA;gBAAA;cAAA;YAAkB,GAFjEI,KAAK;cAAA;cAAA;cAAA;YAAA,QAGZ,eACP,QAAC,OAAO;cAAC,KAAK,EAAC;YAAO;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA,gBACzB;QAEX,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf,CAAC;AAAA,GApCKjB,SAAS;AAAA,KAATA,SAAS;AAsCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}