{"ast":null,"code":"import axios from 'axios';\nimport { Base64 } from \"js-base64\";\nexport let ValidateCode;\n(function (ValidateCode) {\n  ValidateCode[ValidateCode[\"ACTIVE\"] = 0] = \"ACTIVE\";\n  ValidateCode[ValidateCode[\"EXPIRED\"] = 1] = \"EXPIRED\";\n  ValidateCode[ValidateCode[\"INVALID_EMAIL\"] = 2] = \"INVALID_EMAIL\";\n  ValidateCode[ValidateCode[\"INVALID_TOKEN\"] = 3] = \"INVALID_TOKEN\";\n  ValidateCode[ValidateCode[\"INVALID_PROVIDER\"] = 4] = \"INVALID_PROVIDER\";\n  ValidateCode[ValidateCode[\"INCOMPLETE_CREDENTIALS\"] = 5] = \"INCOMPLETE_CREDENTIALS\";\n  ValidateCode[ValidateCode[\"AUTH_SERVER_ERROR\"] = 6] = \"AUTH_SERVER_ERROR\";\n  ValidateCode[ValidateCode[\"UPDATE_FAIL\"] = 7] = \"UPDATE_FAIL\";\n  ValidateCode[ValidateCode[\"LOGOUT_FAIL\"] = 8] = \"LOGOUT_FAIL\";\n  ValidateCode[ValidateCode[\"LOGIN_FAIL\"] = 9] = \"LOGIN_FAIL\";\n  ValidateCode[ValidateCode[\"GET_FAIL\"] = 10] = \"GET_FAIL\";\n})(ValidateCode || (ValidateCode = {}));\nexport function isInstanceOfAuthError(object) {\n  return 'code' in object;\n}\nexport const exchangeToken = async token => {\n  console.log('qui ho questo', token);\n  let url = 'http://localhost:8080/authAPI/v1/token/' + token;\n  return await axios.get(url).then(response => {\n    const data = Base64.decode(response.data);\n    const values = data.split(\",\");\n    console.log('values trovati', values);\n    for (let i = 0; i < values.length; i++) {\n      values[i] = values[i].split(\": \")[1];\n    }\n    return {\n      email: values[0],\n      provider: values[1],\n      token: values[2]\n    };\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.LOGIN_FAIL,\n      method: 'GET',\n      requestedPath: url\n    };\n    return authError;\n  });\n};\nexport const logout = async tokenData => {\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const tokenKey = {\n    email: tokenData.email,\n    provider: tokenData.provider\n  };\n  const url = 'http://localhost:8080/authAPI/v1/deleteToken/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return await axios.post(url, JSON.stringify(tokenKey), {\n    headers: {\n      \"Content-Type\": \"text/plain\"\n    }\n  }).then(value => {\n    return value.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.LOGOUT_FAIL,\n      method: 'POST',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};","map":{"version":3,"names":["axios","Base64","ValidateCode","isInstanceOfAuthError","object","exchangeToken","token","console","log","url","get","then","response","data","decode","values","split","i","length","email","provider","catch","authError","code","LOGIN_FAIL","method","requestedPath","logout","tokenData","emailBase64","encode","providerBase64","tokenBase64","tokenKey","post","JSON","stringify","headers","value","LOGOUT_FAIL"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/OauthAPI.ts"],"sourcesContent":["import axios from 'axios';\nimport {Base64} from \"js-base64\";\nimport {User} from \"./UsersAPI\";\n\nexport type TokenData= {\n    email:string,\n    provider:string,\n    token:string,\n}\n\nexport enum ValidateCode{\n    ACTIVE,\n    EXPIRED,\n    INVALID_EMAIL,\n    INVALID_TOKEN,\n    INVALID_PROVIDER,\n    INCOMPLETE_CREDENTIALS,\n    AUTH_SERVER_ERROR,\n    UPDATE_FAIL,\n    LOGOUT_FAIL,\n    LOGIN_FAIL,\n    GET_FAIL,\n}\n\nexport interface AuthError{\n    code: ValidateCode,\n    method: string,\n    requestedPath: string\n}\n\nexport function isInstanceOfAuthError(object:any): object is AuthError {\n    return 'code' in object\n}\n\nexport const exchangeToken = async (token: string):Promise<TokenData|AuthError>=> {\n    console.log('qui ho questo',token)\n    let url = 'http://localhost:8080/authAPI/v1/token/'+ token\n    return await axios.get(url).then((response) => {\n        const data = Base64.decode(response.data);\n        const values = data.split(\",\")\n        console.log('values trovati',values)\n        for(let i = 0; i < values.length; i++){\n            values[i] = values[i].split(\": \")[1]\n        }\n        return{\n            email: values[0],\n            provider: values[1],\n            token: values[2],\n        }\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.LOGIN_FAIL,\n            method: 'GET',\n            requestedPath: url\n        }\n        return authError\n    })\n}\n\nexport const logout = async (tokenData: TokenData): Promise<boolean | AuthError> => {\n    const emailBase64 = Base64.encode(tokenData.email)\n    const providerBase64 = Base64.encode(tokenData.provider)\n    const tokenBase64 = Base64.encode(tokenData.token)\n\n    const tokenKey= {\n        email: tokenData.email,\n        provider: tokenData.provider,\n    }\n\n    const url = 'http://localhost:8080/authAPI/v1/deleteToken/' + tokenData.email + '?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return await axios.post<boolean| AuthError>(url,\n        JSON.stringify(tokenKey),\n        {\n            headers: {\"Content-Type\": \"text/plain\"}\n        })\n        .then(value => {\n            return value.data;\n        }).catch(() => {\n            const authError: AuthError = {\n                code: ValidateCode.LOGOUT_FAIL,\n                method: 'POST',\n                requestedPath: url.split('?')[0]\n            }\n            return authError\n        })\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}