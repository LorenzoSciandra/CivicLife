{"ast":null,"code":"var _jsxFileName = \"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/Initiatives.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Divider, Grid, Modal } from \"@mui/material\";\nimport '../App.css';\nimport React, { useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport InitiativeDetails from \"./initiativeDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Initiatives = () => {\n  _s();\n  const buttons = ['Tutte', 'Mie', 'Sottoscritte'];\n  const [allInitiativesList, setAllInitiativesList] = useState(['Iniziativa1', 'Iniziativa2', 'Iniziativa3', 'Iniziativa4', 'Iniziativa5', 'Iniziativa6', 'Iniziativa7', 'Iniziativa8', 'Iniziativa9', 'Iniziativa10']);\n  const [myInitiativesList, setMyInitiativesList] = useState(['Mia Iniziativa1', 'Mia Iniziativa2', 'Mia Iniziativa3', 'Mia Iniziativa4']);\n  const [subcribedInitiativesList, setSubscribedInitiativesList] = useState(['sottoscritta1', 'sottoscritta2']);\n  const [showingList, setShowingList] = useState(allInitiativesList);\n  const [showModal, setShowModal] = useState(false);\n  const [activeButton, setActiveButton] = useState(buttons[0]);\n  const [clickedInitiative, setClickedInitiative] = useState(null);\n  const handleInitiativeDetailsOpen = value => {\n    setClickedInitiative(value);\n    setShowModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(UpperButtonMenu, {\n          first_label: buttons[0],\n          second_label: buttons[1],\n          third_label: buttons[2],\n          first_list: allInitiativesList,\n          second_list: myInitiativesList,\n          third_list: subcribedInitiativesList,\n          listSetter: setShowingList,\n          buttonSetter: setActiveButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '70%',\n              height: '100%'\n            },\n            children: [showingList.map((value, index) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                    onClick: () => handleInitiativeDetailsOpen(value),\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 41\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  color: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true);\n            }), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '15px',\n                  borderRadius: 35,\n                  backgroundColor: \"#92d36e\",\n                  padding: \"18px 36px\",\n                  fontSize: \"15px\"\n                },\n                variant: \"contained\",\n                children: \"CREA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showModal,\n      children: /*#__PURE__*/_jsxDEV(InitiativeDetails, {\n        initiative: clickedInitiative,\n        handleClose: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Initiatives, \"rT5WQfKw74a95vCEkY5wNczeb5M=\");\n_c = Initiatives;\nexport default Initiatives;\nvar _c;\n$RefreshReg$(_c, \"Initiatives\");","map":{"version":3,"names":["Button","Divider","Grid","Modal","React","useState","Box","ListItem","ListItemButton","UpperButtonMenu","InitiativeDetails","Initiatives","buttons","allInitiativesList","setAllInitiativesList","myInitiativesList","setMyInitiativesList","subcribedInitiativesList","setSubscribedInitiativesList","showingList","setShowingList","showModal","setShowModal","activeButton","setActiveButton","clickedInitiative","setClickedInitiative","handleInitiativeDetailsOpen","value","width","height","map","index","marginTop","borderRadius","backgroundColor","padding","fontSize"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/Initiatives.tsx"],"sourcesContent":["import {Button, Divider, Grid, Modal,} from \"@mui/material\";\nimport '../App.css'\nimport React, {useState} from \"react\";\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport InitiativeDetails from \"./initiativeDetails\";\n\nconst Initiatives = () => {\n\n    const buttons = ['Tutte', 'Mie', 'Sottoscritte']\n    const [allInitiativesList, setAllInitiativesList] = useState<any[]>(['Iniziativa1', 'Iniziativa2', 'Iniziativa3', 'Iniziativa4', 'Iniziativa5', 'Iniziativa6', 'Iniziativa7','Iniziativa8','Iniziativa9','Iniziativa10' ])\n    const [myInitiativesList, setMyInitiativesList] = useState<any[]>(['Mia Iniziativa1', 'Mia Iniziativa2', 'Mia Iniziativa3', 'Mia Iniziativa4'])\n    const [subcribedInitiativesList, setSubscribedInitiativesList] = useState<any[]>(['sottoscritta1', 'sottoscritta2'])\n    const [showingList, setShowingList] = useState<any[]>(allInitiativesList)\n    const [showModal, setShowModal] = useState(false)\n    const [activeButton, setActiveButton] = useState(buttons[0]);\n    const [clickedInitiative, setClickedInitiative]= useState(null)\n\n    const handleInitiativeDetailsOpen = (value: any) => {\n        setClickedInitiative(value)\n        setShowModal(true)\n    }\n\n\n    return (\n        <>\n            <Grid container className=\"App-header\">\n                <Grid container direction=\"row\" spacing={2}>\n                    <UpperButtonMenu first_label={buttons[0]} second_label={buttons[1]} third_label={buttons[2]}\n                                     first_list={allInitiativesList} second_list={myInitiativesList}\n                                     third_list={subcribedInitiativesList} listSetter={setShowingList}\n                                     buttonSetter={setActiveButton}/>\n                    <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <Box sx={{width: '70%', height: '100%'}}>\n                            {showingList.map((value, index) => {\n                                return (\n                                    <><\n                                        ListItem key={index}>\n                                        <ListItemButton\n                                            onClick={() => handleInitiativeDetailsOpen(value)}>{value}</ListItemButton>\n                                    </ListItem>\n                                        <Divider color='white'/>\n                                    </>\n                                );\n                            })}\n                            <Grid item xs={12} display=\"flex\" justifyContent='center' alignItems=\"right\">\n                                <Button style={{\n                                    marginTop: '15px',\n                                    borderRadius: 35,\n                                    backgroundColor: \"#92d36e\",\n                                    padding: \"18px 36px\",\n                                    fontSize: \"15px\"\n                                }}\n                                        variant=\"contained\">\n                                    CREA\n                                </Button>\n                            </Grid>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Modal open={showModal}>\n                <InitiativeDetails initiative={clickedInitiative} handleClose={()=>setShowModal(false)}/>\n            </Modal>\n        </>\n\n    );\n}\n\nexport default Initiatives;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}