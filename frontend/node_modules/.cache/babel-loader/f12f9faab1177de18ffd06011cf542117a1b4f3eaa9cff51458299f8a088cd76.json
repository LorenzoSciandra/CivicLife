{"ast":null,"code":"import axios from 'axios';\nimport { ValidateCode } from \"./OauthAPI\";\nimport { Base64 } from \"js-base64\";\nexport const getAllBonuses = tokenData => {\n  console.log('recupero bonus');\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/bonusAPI/v1/bonuses/' + tokenData.email + '/?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};\nexport const getAllVaccines = tokenData => {\n  console.log('recupero vaccini');\n  const emailBase64 = Base64.encode(tokenData.email);\n  const providerBase64 = Base64.encode(tokenData.provider);\n  const tokenBase64 = Base64.encode(tokenData.token);\n  const url = 'http://localhost:8080/vaccinationAPI/v1/vaccinations/' + tokenData.email + '/?email=' + emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64;\n  return axios.get(url).then(response => {\n    console.log('response', response.data);\n    return response.data;\n  }).catch(() => {\n    const authError = {\n      code: ValidateCode.GET_FAIL,\n      method: 'GET',\n      requestedPath: url.split('?')[0]\n    };\n    return authError;\n  });\n};","map":{"version":3,"names":["axios","ValidateCode","Base64","getAllBonuses","tokenData","console","log","emailBase64","encode","email","providerBase64","provider","tokenBase64","token","url","get","then","response","data","catch","authError","code","GET_FAIL","method","requestedPath","split","getAllVaccines"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/ExternalResourcesAPI.ts"],"sourcesContent":["import axios from 'axios';\nimport {AuthError, TokenData, ValidateCode} from \"./OauthAPI\";\nimport {Base64} from \"js-base64\";\n\nexport type BonusType={\n    id: string,\n    name:string,\n    description:string,\n    email_owner:string,\n    type:string,\n    end_date:number,\n}\n\nexport type VaccineType={\n     id:string;//ok\n     email_owner:string;//ok\n     type:string; //ok\n     date:number;\n     location:string;//ok\n     description:string;//ok\n     name:string;//ok\n     vaccine:string;\n     manufacturer:string;//ok\n     doctor:string;//ok\n     nurse:string;//ok\n}\n\nexport const getAllBonuses=(tokenData: TokenData): Promise<BonusType[]|AuthError>=>{\n    console.log('recupero bonus')\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/bonusAPI/v1/bonuses/'+ tokenData.email+'/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}\n\nexport const getAllVaccines=(tokenData: TokenData): Promise<VaccineType[]|AuthError>=>{\n    console.log('recupero vaccini')\n    const emailBase64= Base64.encode(tokenData.email)\n    const providerBase64= Base64.encode(tokenData.provider)\n    const tokenBase64= Base64.encode(tokenData.token)\n    const url = 'http://localhost:8080/vaccinationAPI/v1/vaccinations/'+ tokenData.email+'/?email='+ emailBase64 + '&provider=' + providerBase64 + '&token=' + tokenBase64\n    return axios.get(url).then((response) => {\n        console.log('response', response.data)\n        return response.data\n    }).catch(() => {\n        const authError: AuthError = {\n            code: ValidateCode.GET_FAIL,\n            method: 'GET',\n            requestedPath: url.split('?')[0]\n        }\n        return authError\n    })\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAA8BC,YAAY,QAAO,YAAY;AAC7D,SAAQC,MAAM,QAAO,WAAW;AAyBhC,OAAO,MAAMC,aAAa,GAAEC,SAAoB,IAAmC;EAC/EC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,MAAMC,WAAW,GAAEL,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACK,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAER,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACO,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAEV,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACS,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAG,4CAA4C,GAAEV,SAAS,CAACK,KAAK,GAAC,UAAU,GAAEF,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EAC3J,OAAOZ,KAAK,CAACe,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IACrCZ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEW,QAAQ,CAACC,IAAI,CAAC;IACtC,OAAOD,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;IACX,MAAMC,SAAoB,GAAG;MACzBC,IAAI,EAAEpB,YAAY,CAACqB,QAAQ;MAC3BC,MAAM,EAAE,KAAK;MACbC,aAAa,EAAEV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,OAAOL,SAAS;EACpB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMM,cAAc,GAAEtB,SAAoB,IAAqC;EAClFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/B,MAAMC,WAAW,GAAEL,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACK,KAAK,CAAC;EACjD,MAAMC,cAAc,GAAER,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACO,QAAQ,CAAC;EACvD,MAAMC,WAAW,GAAEV,MAAM,CAACM,MAAM,CAACJ,SAAS,CAACS,KAAK,CAAC;EACjD,MAAMC,GAAG,GAAG,uDAAuD,GAAEV,SAAS,CAACK,KAAK,GAAC,UAAU,GAAEF,WAAW,GAAG,YAAY,GAAGG,cAAc,GAAG,SAAS,GAAGE,WAAW;EACtK,OAAOZ,KAAK,CAACe,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IACrCZ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEW,QAAQ,CAACC,IAAI,CAAC;IACtC,OAAOD,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;IACX,MAAMC,SAAoB,GAAG;MACzBC,IAAI,EAAEpB,YAAY,CAACqB,QAAQ;MAC3BC,MAAM,EAAE,KAAK;MACbC,aAAa,EAAEV,GAAG,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,OAAOL,SAAS;EACpB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}