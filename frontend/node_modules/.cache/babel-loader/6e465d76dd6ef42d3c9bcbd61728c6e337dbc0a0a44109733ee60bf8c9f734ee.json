{"ast":null,"code":"var _jsxFileName = \"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/Initiatives.tsx\",\n  _s = $RefreshSig$();\nimport { AppBar, Button, Divider, Grid, IconButton, ToggleButton, ToggleButtonGroup, Typography } from \"@mui/material\";\nimport '../App.css';\nimport React, { useEffect, useState } from \"react\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport List from \"@mui/material/List\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { getAllInitiatives, getInitiativesForVisitor, getMyInitiatives, getOrganizedInitiatives, getSubscribedInitiatives } from \"../APIs/InitiativeAPI\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { isInstanceOfAuthError, logoutUser } from \"../APIs/OauthAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst activeButtonColor = {\n  background: '#feac0d',\n  color: '#ffffff'\n};\nconst inactiveButtonColor = {\n  background: '#ffffff',\n  color: '#feac0d'\n};\nconst Initiatives = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tokenData = location.state.token;\n  const isVisitor = location.state.isVisitor;\n  const user = location.state.user;\n  const buttons = ['Tutte', 'Mie', 'Sottoscritte', 'Organizzate'];\n  const [allInitiativesList, setAllInitiativesList] = useState(null);\n  const [myInitiativesList, setMyInitiativesList] = useState(null);\n  const [readOnlyInitiativeList, setReadOnlyInitiativeList] = useState(null);\n  const [subscribedInitiativesList, setSubscribedInitiativesList] = useState(null);\n  const [organizedInitiativesList, setOrganizedInitiativesList] = useState(null);\n  const [activeButton, setActiveButton] = useState(buttons[0]);\n  const [clickedInitiative, setClickedInitiative] = useState(null);\n  const [firstButton, setFirstButton] = useState(activeButtonColor);\n  const [secondButton, setSecondButton] = useState(inactiveButtonColor);\n  const [thirdButton, setThirdButton] = useState(inactiveButtonColor);\n  const [fourthButton, setFourthButton] = useState(inactiveButtonColor);\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [buttonChanged, setButtonChanged] = useState(false);\n  const getInitiatives = async () => {\n    const response = await getAllInitiatives(tokenData);\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setAllInitiativesList(response);\n    }\n  };\n  const getInitiativesReadOnly = async () => {\n    const response = await getInitiativesForVisitor();\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setReadOnlyInitiativeList(response);\n    }\n  };\n  const getMy = async () => {\n    const response = await getMyInitiatives(tokenData);\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setMyInitiativesList(response);\n    }\n  };\n  const getSubscribed = async () => {\n    const response = await getSubscribedInitiatives(tokenData);\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setSubscribedInitiativesList(response);\n    }\n  };\n  const getOrganized = async () => {\n    const response = await getOrganizedInitiatives(tokenData);\n    if (isInstanceOfAuthError(response)) {\n      navigate('/error', {\n        state: {\n          error: response\n        }\n      });\n    } else {\n      setOrganizedInitiativesList(response);\n    }\n  };\n  useEffect(() => {\n    if (firstLoad) {\n      if (allInitiativesList === null) {\n        if (isVisitor === true) {\n          getInitiativesReadOnly();\n        } else {\n          getInitiatives();\n        }\n      }\n    }\n    setFirstLoad(false);\n  }, []);\n  useEffect(() => {\n    if (buttonChanged) {\n      if (activeButton === buttons[0]) {\n        console.log('Tutte');\n        getInitiatives();\n      }\n      if (activeButton === buttons[1]) {\n        getMy();\n      }\n      if (activeButton === buttons[2]) {\n        console.log('Sottoscritte');\n        getSubscribed();\n      }\n      if (activeButton === buttons[3]) {\n        console.log('Organizzate');\n        getOrganized();\n      }\n    }\n    setButtonChanged(true);\n  }, [activeButton]);\n  const handleInitiativeDetailsOpen = value => {\n    navigate('/initiativeDetails', {\n      state: {\n        token: tokenData,\n        isVisitor: isVisitor,\n        user: user,\n        initiative: value\n      }\n    });\n  };\n  const handleCreateInitiative = () => {\n    navigate('/createInitiative', {\n      state: {\n        token: tokenData\n      }\n    });\n  };\n  const handleChange = (event, newActiveButton) => {\n    if (newActiveButton === buttons[0]) {\n      setFirstButton(activeButtonColor);\n      setSecondButton(inactiveButtonColor);\n      setThirdButton(inactiveButtonColor);\n      setFourthButton(inactiveButtonColor);\n    } else if (newActiveButton === buttons[1]) {\n      setFirstButton(inactiveButtonColor);\n      setSecondButton(activeButtonColor);\n      setThirdButton(inactiveButtonColor);\n      setFourthButton(inactiveButtonColor);\n    } else if (newActiveButton === buttons[2]) {\n      setFirstButton(inactiveButtonColor);\n      setSecondButton(inactiveButtonColor);\n      setThirdButton(activeButtonColor);\n      setFourthButton(inactiveButtonColor);\n    } else if (newActiveButton === buttons[3]) {\n      setFirstButton(inactiveButtonColor);\n      setSecondButton(inactiveButtonColor);\n      setThirdButton(inactiveButtonColor);\n      setFourthButton(activeButtonColor);\n    }\n    setActiveButton(newActiveButton);\n  };\n  const logout = async () => {\n    if (tokenData !== null) {\n      const response = await logoutUser(tokenData);\n      if (typeof response === 'boolean') {\n        if (response) {\n          navigate('/');\n        } else {\n          console.log('error');\n        }\n      } else {\n        navigate('/error', {\n          state: {\n            error: response\n          }\n        });\n      }\n    }\n  };\n  const goBack = () => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"fixed\",\n            sx: {\n              backgroundColor: '#3d4347'\n            },\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                edge: \"start\",\n                \"aria-label\": \"menu\",\n                sx: {\n                  mr: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n                  onClick: goBack,\n                  sx: {\n                    fontSize: '3rem',\n                    color: 'white'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                sx: {\n                  flexGrow: 1\n                },\n                style: {\n                  justifyContent: 'center',\n                  color: '#feac0d',\n                  textAlign: 'center',\n                  fontSize: '1.8rem'\n                },\n                children: user && user.isAdmin ? 'Amministrazione iniziative' : 'Iniziative'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                sx: {\n                  color: 'white',\n                  backgroundColor: 'red'\n                },\n                onClick: logout,\n                children: \"logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), user && !user.admin ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        sx: {\n          position: 'fixed',\n          top: '8%',\n          margin: 'auto',\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: activeButton,\n          exclusive: true,\n          onChange: handleChange,\n          \"aria-label\": \"Platform\",\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            style: {\n              backgroundColor: firstButton.background,\n              color: firstButton.color,\n              borderColor: '#000000',\n              fontSize: '25px'\n            },\n            value: buttons[0],\n            children: buttons[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            style: {\n              backgroundColor: secondButton.background,\n              color: secondButton.color,\n              borderColor: '#000000',\n              fontSize: '25px'\n            },\n            value: buttons[1],\n            children: buttons[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            style: {\n              backgroundColor: thirdButton.background,\n              color: thirdButton.color,\n              borderColor: '#000000',\n              fontSize: '25px'\n            },\n            value: buttons[2],\n            children: buttons[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            style: {\n              backgroundColor: fourthButton.background,\n              color: fourthButton.color,\n              borderColor: '#000000',\n              fontSize: '25px'\n            },\n            value: buttons[3],\n            children: buttons[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            width: '85%',\n            overflow: 'auto',\n            maxHeight: 550,\n            position: 'fixed',\n            top: '20%',\n            bottom: '1%'\n          },\n          children: isVisitor && readOnlyInitiativeList ? readOnlyInitiativeList.map(value => {\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              children: value.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 41\n            }, this);\n          }) : activeButton === buttons[0] && allInitiativesList ? allInitiativesList.map(value => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  onClick: () => handleInitiativeDetailsOpen(value),\n                  children: value.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 45\n                }, this)\n              }, value.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true);\n          }) : activeButton === buttons[1] && myInitiativesList ? myInitiativesList.map(value => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  onClick: () => handleInitiativeDetailsOpen(value),\n                  children: value.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 49\n                }, this)\n              }, value.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true);\n          }) : activeButton === buttons[2] && subscribedInitiativesList ? subscribedInitiativesList.map(value => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  onClick: () => handleInitiativeDetailsOpen(value),\n                  children: value.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 53\n                }, this)\n              }, value.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true);\n          }) : activeButton === buttons[3] && organizedInitiativesList ? organizedInitiativesList.map(value => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n                  onClick: () => handleInitiativeDetailsOpen(value),\n                  children: value.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 57\n                }, this)\n              }, value.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 55\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"right\",\n        children: isVisitor ? null : user && user.admin ? /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            position: 'fixed',\n            bottom: 20,\n            borderRadius: 35,\n            backgroundColor: \"red\",\n            padding: \"18px 36px\",\n            fontSize: \"15px\"\n          },\n          variant: \"contained\",\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateInitiative,\n          style: {\n            position: 'fixed',\n            bottom: 20,\n            marginTop: '15px',\n            borderRadius: 35,\n            backgroundColor: \"#92d36e\",\n            padding: \"18px 36px\",\n            fontSize: \"15px\"\n          },\n          variant: \"contained\",\n          children: \"CREA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Initiatives, \"gMxdCeDxd/R7V8KPYEdOZVkCCFQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Initiatives;\nexport default Initiatives;\nvar _c;\n$RefreshReg$(_c, \"Initiatives\");","map":{"version":3,"names":["AppBar","Button","Divider","Grid","IconButton","ToggleButton","ToggleButtonGroup","Typography","React","useEffect","useState","ListItem","ListItemButton","List","useLocation","useNavigate","getAllInitiatives","getInitiativesForVisitor","getMyInitiatives","getOrganizedInitiatives","getSubscribedInitiatives","Box","Toolbar","ArrowBackIcon","isInstanceOfAuthError","logoutUser","activeButtonColor","background","color","inactiveButtonColor","Initiatives","navigate","location","tokenData","state","token","isVisitor","user","buttons","allInitiativesList","setAllInitiativesList","myInitiativesList","setMyInitiativesList","readOnlyInitiativeList","setReadOnlyInitiativeList","subscribedInitiativesList","setSubscribedInitiativesList","organizedInitiativesList","setOrganizedInitiativesList","activeButton","setActiveButton","clickedInitiative","setClickedInitiative","firstButton","setFirstButton","secondButton","setSecondButton","thirdButton","setThirdButton","fourthButton","setFourthButton","firstLoad","setFirstLoad","buttonChanged","setButtonChanged","getInitiatives","response","error","getInitiativesReadOnly","getMy","getSubscribed","getOrganized","console","log","handleInitiativeDetailsOpen","value","initiative","handleCreateInitiative","handleChange","event","newActiveButton","logout","goBack","flexGrow","backgroundColor","mr","fontSize","justifyContent","textAlign","isAdmin","admin","position","top","margin","width","borderColor","overflow","maxHeight","bottom","map","key","name","id","borderRadius","padding","marginTop"],"sources":["/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/Initiatives.tsx"],"sourcesContent":["import {AppBar, Button, Divider, Grid, IconButton, ToggleButton, ToggleButtonGroup, Typography,} from \"@mui/material\";\nimport '../App.css'\nimport React, {useEffect, useState} from \"react\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport List from \"@mui/material/List\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {\n    getAllInitiatives,\n    getInitiativesForVisitor,\n    getMyInitiatives, getOrganizedInitiatives, getSubscribedInitiatives,\n    Initiative,\n    InitiativeNameDesc\n} from \"../APIs/InitiativeAPI\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport {isInstanceOfAuthError, logoutUser} from \"../APIs/OauthAPI\";\nimport {ListItemText} from \"@mui/material\";\n\ntype ButtonStyleType = {\n    background: string,\n    color: string\n}\nconst activeButtonColor: ButtonStyleType = {\n    background: '#feac0d',\n    color: '#ffffff'\n}\nconst inactiveButtonColor: ButtonStyleType = {\n    background: '#ffffff',\n    color: '#feac0d'\n}\n\nconst Initiatives = () => {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const tokenData = location.state.token\n    const isVisitor = location.state.isVisitor\n    const user = location.state.user\n    const buttons = ['Tutte', 'Mie', 'Sottoscritte', 'Organizzate']\n    const [allInitiativesList, setAllInitiativesList] = useState<Initiative[] | null>(null)\n    const [myInitiativesList, setMyInitiativesList] = useState<Initiative[] | null>(null)\n    const [readOnlyInitiativeList, setReadOnlyInitiativeList] = useState<InitiativeNameDesc[] | null>(null)\n    const [subscribedInitiativesList, setSubscribedInitiativesList] = useState<Initiative[] | null>(null)\n    const [organizedInitiativesList, setOrganizedInitiativesList] = useState<Initiative[] | null>(null)\n    const [activeButton, setActiveButton] = useState(buttons[0]);\n    const [clickedInitiative, setClickedInitiative] = useState(null)\n    const [firstButton, setFirstButton] = useState<ButtonStyleType>(activeButtonColor)\n    const [secondButton, setSecondButton] = useState<ButtonStyleType>(inactiveButtonColor)\n    const [thirdButton, setThirdButton] = useState<ButtonStyleType>(inactiveButtonColor)\n    const [fourthButton, setFourthButton] = useState<ButtonStyleType>(inactiveButtonColor)\n    const [firstLoad, setFirstLoad] = useState(true)\n    const [buttonChanged, setButtonChanged] = useState(false)\n\n    const getInitiatives = async () => {\n        const response = await getAllInitiatives(tokenData)\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setAllInitiativesList(response)\n        }\n    }\n\n    const getInitiativesReadOnly = async () => {\n        const response = await getInitiativesForVisitor()\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setReadOnlyInitiativeList(response)\n        }\n    }\n\n    const getMy = async () => {\n        const response = await getMyInitiatives(tokenData)\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setMyInitiativesList(response)\n        }\n    }\n\n    const getSubscribed= async () => {\n        const response = await getSubscribedInitiatives(tokenData)\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setSubscribedInitiativesList(response)\n        }\n    }\n\n    const getOrganized = async () => {\n        const response = await getOrganizedInitiatives(tokenData)\n        if (isInstanceOfAuthError(response)) {\n            navigate('/error', {state: {error: response}})\n        } else {\n            setOrganizedInitiativesList(response)\n        }\n    }\n\n\n\n    useEffect(() => {\n        if (firstLoad) {\n            if (allInitiativesList === null) {\n                if (isVisitor===true) {\n                    getInitiativesReadOnly()\n                } else {\n                    getInitiatives()\n\n                }\n            }\n        }\n        setFirstLoad(false)\n    }, [])\n\n    useEffect(() => {\n        if (buttonChanged) {\n            if (activeButton === buttons[0]) {\n                console.log('Tutte')\n                getInitiatives()\n            }\n            if (activeButton === buttons[1]) {\n                getMy()\n            }\n            if (activeButton === buttons[2]) {\n                console.log('Sottoscritte')\n                getSubscribed()\n            }\n            if (activeButton === buttons[3]) {\n                console.log('Organizzate')\n                getOrganized()\n            }\n        }\n        setButtonChanged(true)\n    }, [activeButton])\n\n    const handleInitiativeDetailsOpen = (value: any) => {\n        navigate('/initiativeDetails', {\n            state: {\n                token: tokenData,\n                isVisitor: isVisitor,\n                user: user,\n                initiative: value\n            }\n        })\n    }\n\n\n    const handleCreateInitiative = () => {\n        navigate('/createInitiative', {\n            state: {\n                token: tokenData,\n            }\n        })\n    }\n\n    const handleChange = (event: React.MouseEvent<HTMLElement>, newActiveButton: string,) => {\n        if (newActiveButton === buttons[0]) {\n            setFirstButton(activeButtonColor)\n            setSecondButton(inactiveButtonColor)\n            setThirdButton(inactiveButtonColor)\n            setFourthButton(inactiveButtonColor)\n        } else if (newActiveButton === buttons[1]) {\n            setFirstButton(inactiveButtonColor)\n            setSecondButton(activeButtonColor)\n            setThirdButton(inactiveButtonColor)\n            setFourthButton(inactiveButtonColor)\n        } else if (newActiveButton === buttons[2]) {\n            setFirstButton(inactiveButtonColor)\n            setSecondButton(inactiveButtonColor)\n            setThirdButton(activeButtonColor)\n            setFourthButton(inactiveButtonColor)\n        } else if (newActiveButton === buttons[3]) {\n            setFirstButton(inactiveButtonColor)\n            setSecondButton(inactiveButtonColor)\n            setThirdButton(inactiveButtonColor)\n            setFourthButton(activeButtonColor)\n        }\n        setActiveButton(newActiveButton);\n    }\n\n    const logout = async () => {\n        if (tokenData !== null) {\n            const response = await logoutUser(tokenData)\n            if (typeof response === 'boolean') {\n                if (response) {\n                    navigate('/')\n                } else {\n                    console.log('error')\n                }\n            } else {\n                navigate('/error', {state: {error: response}})\n            }\n        }\n    }\n\n    const goBack = () => {\n        navigate(-1)\n    }\n\n\n    return (\n        <>\n            <Grid container direction=\"row\" spacing={2}>\n                <Grid item xs={12} justifyContent=\"center\" alignItems=\"center\">\n                    <Box sx={{flexGrow: 1}}>\n                        <AppBar position=\"fixed\" sx={{backgroundColor: '#3d4347'}}>\n                            <Toolbar>\n                                <IconButton\n                                    size=\"small\"\n                                    edge=\"start\"\n                                    aria-label=\"menu\"\n                                    sx={{mr: 2}}\n                                >\n                                    <ArrowBackIcon onClick={goBack} sx={{fontSize: '3rem', color: 'white'}}/>\n                                </IconButton>\n\n                                <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}\n                                            style={{\n                                                justifyContent: 'center',\n                                                color: '#feac0d',\n                                                textAlign: 'center',\n                                                fontSize: '1.8rem',\n                                            }}>\n                                    {user && user.isAdmin ? 'Amministrazione iniziative' : 'Iniziative'}\n                                </Typography>\n                                <Button sx={{color: 'white', backgroundColor: 'red'}}\n                                        onClick={logout}>\n                                    logout\n                                </Button>\n                            </Toolbar>\n                        </AppBar>\n                    </Box>\n                </Grid>\n                {user && !user.admin ?\n                    <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\n                          sx={{position: 'fixed', top: '8%', margin: 'auto', width: '100%'}}>\n                        <ToggleButtonGroup value={activeButton} exclusive onChange={handleChange} aria-label=\"Platform\">\n                            <ToggleButton style={{\n                                backgroundColor: firstButton.background,\n                                color: firstButton.color,\n                                borderColor: '#000000',\n                                fontSize: '25px'\n                            }} value={buttons[0]}>{buttons[0]}</ToggleButton>\n                            <ToggleButton style={{\n                                backgroundColor: secondButton.background,\n                                color: secondButton.color,\n                                borderColor: '#000000',\n                                fontSize: '25px'\n                            }} value={buttons[1]}>{buttons[1]}</ToggleButton>\n                            <ToggleButton style={{\n                                backgroundColor: thirdButton.background,\n                                color: thirdButton.color,\n                                borderColor: '#000000',\n                                fontSize: '25px'\n                            }} value={buttons[2]}>{buttons[2]}</ToggleButton>\n                            <ToggleButton style={{\n                                backgroundColor: fourthButton.background,\n                                color: fourthButton.color,\n                                borderColor: '#000000',\n                                fontSize: '25px'\n                            }} value={buttons[3]}>{buttons[3]}</ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n                    : null}\n\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <List sx={{\n                        width: '85%',\n                        overflow: 'auto',\n                        maxHeight: 550,\n                        position: 'fixed',\n                        top: '20%',\n                        bottom: '1%'\n                    }}>\n                        {\n                            isVisitor && readOnlyInitiativeList ?\n                                readOnlyInitiativeList.map((value) => {\n                                    return (\n                                        <ListItem >{value.key}</ListItem>\n                                    )\n                                })\n                                :\n                            activeButton === buttons[0] && allInitiativesList ?\n                                allInitiativesList.map((value) => {\n                                    return (\n                                        <><\n                                            ListItem key={value.id}>\n                                            <ListItemButton\n                                                onClick={() => handleInitiativeDetailsOpen(value)}>{value.name}</ListItemButton>\n                                        </ListItem>\n                                            <Divider color='white'/>\n                                        </>\n                                    );\n                                })\n                                :\n                                activeButton === buttons[1] && myInitiativesList ?\n                                    myInitiativesList.map((value) => {\n                                        return (\n                                            <><\n                                                ListItem key={value.id}>\n                                                <ListItemButton\n                                                    onClick={() => handleInitiativeDetailsOpen(value)}>{value.name}</ListItemButton>\n                                            </ListItem>\n                                                <Divider color='white'/>\n                                            </>\n                                        );\n                                    })\n                                    :\n                                    activeButton === buttons[2] && subscribedInitiativesList ?\n                                        subscribedInitiativesList.map((value) => {\n                                            return (\n                                                <><\n                                                    ListItem key={value.id}>\n                                                    <ListItemButton\n                                                        onClick={() => handleInitiativeDetailsOpen(value)}>{value.name}</ListItemButton>\n                                                </ListItem>\n                                                    <Divider color='white'/>\n                                                </>\n                                            );\n                                        }) : activeButton === buttons[3] && organizedInitiativesList ?\n                                            organizedInitiativesList.map((value) => {\n                                                return (\n                                                    <><\n                                                        ListItem key={value.id}>\n                                                        <ListItemButton\n                                                            onClick={() => handleInitiativeDetailsOpen(value)}>{value.name}</ListItemButton>\n                                                    </ListItem>\n                                                        <Divider color='white'/>\n                                                    </>\n                                                );\n                                            }) : null\n                        }\n                    </List>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent='center' alignItems=\"right\">\n                    {\n                        isVisitor? null :\n                        user && user.admin ?\n                            <Button style={{\n                                position: 'fixed',\n                                bottom: 20,\n                                borderRadius: 35,\n                                backgroundColor: \"red\",\n                                padding: \"18px 36px\",\n                                fontSize: \"15px\"\n                            }}\n                                    variant=\"contained\">\n                                Elimina\n                            </Button>\n                            :\n                            <Button\n                                onClick={handleCreateInitiative}\n\n                                style={{\n                                    position: 'fixed',\n                                    bottom: 20,\n                                    marginTop: '15px',\n                                    borderRadius: 35,\n                                    backgroundColor: \"#92d36e\",\n                                    padding: \"18px 36px\",\n                                    fontSize: \"15px\"\n                                }}\n                                variant=\"contained\">\n                                CREA\n                            </Button>\n                    }\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default Initiatives;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}