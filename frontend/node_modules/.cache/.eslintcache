[{"/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/index.tsx":"1","/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/reportWebVitals.ts":"2","/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/Login.tsx":"3","/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/MainPage.tsx":"4","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/index.tsx":"5","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/VotationDetails.tsx":"6","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/CandidateDetails.tsx":"7","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/PartyDetails.tsx":"8","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Login/Login.tsx":"9","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/MainPage/MainPage.tsx":"10","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/App.tsx":"11","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Data/PersonalData.tsx":"12","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Utils/CustomTextFields.tsx":"13","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Utils/UpperButtonMenu.tsx":"14","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Data/UsersAdmin.tsx":"15","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/Initiatives.tsx":"16","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/initiativeDetails.tsx":"17","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/Votations.tsx":"18","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/InitiativeCreateForm.tsx":"19","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Login/LoginChoser.tsx":"20","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/VotationsAdmin.tsx":"21","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/oauthAPI.ts":"22","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts":"23","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/SessionExpired.tsx":"24"},{"size":599,"mtime":1669046529269,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1669044480504,"results":"27","hashOfConfig":"26"},{"size":2043,"mtime":1669046064630,"results":"28","hashOfConfig":"26"},{"size":5656,"mtime":1669051047908,"results":"29","hashOfConfig":"26"},{"size":3667,"mtime":1673363481139,"results":"30","hashOfConfig":"31"},{"size":5035,"mtime":1673305702219,"results":"32","hashOfConfig":"31"},{"size":5590,"mtime":1673307623557,"results":"33","hashOfConfig":"31"},{"size":7259,"mtime":1673306300981,"results":"34","hashOfConfig":"31"},{"size":3762,"mtime":1673432343595,"results":"35","hashOfConfig":"31"},{"size":8482,"mtime":1673447631407,"results":"36","hashOfConfig":"31"},{"size":2063,"mtime":1673454973299,"results":"37","hashOfConfig":"31"},{"size":13026,"mtime":1673462452141,"results":"38","hashOfConfig":"31"},{"size":1299,"mtime":1673303592867,"results":"39","hashOfConfig":"31"},{"size":3899,"mtime":1673305080285,"results":"40","hashOfConfig":"31"},{"size":3568,"mtime":1673305411060,"results":"41","hashOfConfig":"31"},{"size":5423,"mtime":1673305543553,"results":"42","hashOfConfig":"31"},{"size":2346,"mtime":1673305080293,"results":"43","hashOfConfig":"31"},{"size":2648,"mtime":1673305080321,"results":"44","hashOfConfig":"31"},{"size":11752,"mtime":1673302952665,"results":"45","hashOfConfig":"31"},{"size":2423,"mtime":1673432263714,"results":"46","hashOfConfig":"31"},{"size":3386,"mtime":1673308073905,"results":"47","hashOfConfig":"31"},{"size":775,"mtime":1673448272399,"results":"48","hashOfConfig":"31"},{"size":5285,"mtime":1673463707857,"results":"49","hashOfConfig":"31"},{"size":780,"mtime":1673455875766,"results":"50","hashOfConfig":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"11gizi0",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1su2bmi",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/index.tsx",["137"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Login from './Login';\nimport reportWebVitals from './reportWebVitals';\nimport MainPage from \"./MainPage\";\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <MainPage />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/reportWebVitals.ts",[],[],"/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/Login.tsx",["138"],[],"/home/michelestaffieri/WebstormProjects/CivicLife/frontend/src/MainPage.tsx",["139"],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/index.tsx",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\nimport {CardMedia, createTheme, Grid, ThemeProvider, Typography,} from \"@mui/material\";\nimport logo_CivicLife from './imgs/logo_CivicLife.png'\nimport ScrollToTop from \"react-scroll-to-top\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n);\nconst theme = createTheme({\n        typography: {\n            fontFamily: [\n                'ubuntu'\n            ].join(','),\n        },\n    }\n);\n\nlet isMobile = false\nif (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0, 4))) {\n    isMobile = true;\n}\nconsole.log(isMobile)\n\n\nroot.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <Grid container className=\"App-header\">\n               <BrowserRouter>\n                   <App isMobile={isMobile}/>\n               </BrowserRouter>\n                <Grid item display=\"flex\" alignItems={'center'} sx={{\n                    position: 'fixed',\n                    width: '100%',\n                    margin: \"auto\",\n                    bottom:0\n                }}>\n                    <CardMedia\n                        component=\"img\"\n                        image={logo_CivicLife}\n                        sx={{\n                            width: '3%',\n                        }}\n                        alt=\"Logo\"\n                    />\n                    <Typography\n                        style={{color: '#feac0d', textAlign: 'center', fontSize: '1rem'}}>CivicLife</Typography>\n                    <ScrollToTop smooth/>\n                </Grid>\n            </Grid>\n        </ThemeProvider>\n    </React.StrictMode>\n);\n\n",[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/VotationDetails.tsx",["186"],[],"import {Divider, Grid, Typography} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\n\nimport React, {useState} from \"react\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport '../App.css'\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\n\nconst VotationDetails=()=>{\n    const [partyList, setPatyList ]=useState(['partito1', 'partito2', 'partito3', 'partito4','partito1', 'partito2', 'partito3', 'partito4','partito1', 'partito2', 'partito3', 'partito4','partito1', 'partito2', 'partito3', 'partito4'])\n    const location= useLocation()\n    const navigate= useNavigate()\n    const votation= location.state?.votation\n    const isAdmin= location.state?.isAdmin\n\n    const handlePartyDetailsOpen = (value: any) => {\n        navigate('/votations/votationDetails/partyDetails', {state: {token: location.state?.token, email: location.state?.email, isAdmin: isAdmin, votation:location.state?.votation, party:value}})\n    }\n\n    return(\n        <Grid container direction='row' spacing={5}>\n        {/*    <Grid item xs={12} display=\"flex\" sx={{*/}\n        {/*    width: '100%',*/}\n        {/*    margin: \"auto\",*/}\n        {/*    top: 0,*/}\n        {/*    right: 0*/}\n        {/*}}>*/}\n        {/*    <IconButton><KeyboardBackspaceIcon sx={{fontSize: 60, color: '#ffffff'}}/></IconButton>*/}\n        {/*</Grid>*/}\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{\n            width: '100%',\n            margin: \"auto\",\n            top: 150,\n            right: 0\n        }}>\n            <Typography style={{color: '#feac0d', textAlign: 'center', fontSize: '3rem'}}>{votation}</Typography>\n        </Grid><Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{\n            width: '100%',\n\n            margin: \"auto\",\n            top: 65,\n            right: 0\n        }}>\n            <Typography style={{color: '#ffffff', textAlign: 'justify', fontSize: '0.95rem', paddingLeft:'120px', paddingRight:'120px'}}>orem ipsum dolor sit amet,\n                consectetur adipiscing elit. Curabitur quis interdum augue, et euismod lectus. Ut ac ultricies augue.\n                Praesent in ornare elit, a pellentesque libero. Nam euismod mi nec tortor elementum aliquet. Curabitur\n                dictum mi quis rutrum ultricies. Maecenas in diam ut mauris venenatis consectetur. Quisque eu neque ac\n                lacus laoreet tincidunt. Mauris vitae condimentum odio, nec cursus nisi. Sed efficitur ante eu iaculis\n                venenatis. Ut in dictum ante. Nunc eget bibendum ex. Suspendisse facilisis luctus nunc sed auctor. Nunc\n                tincidunt egestas enim, nec condimentum urna laoreet quis. Praesent commodo lacus in turpis maximus\n                sodales.\n\n                Nunc velit lectus, ultricies non consequat nec, egestas lobortis lectus. Sed vitae imperdiet augue, eget\n                pharetra arcu. Pellentesque fringilla magna non nisi euismod, ac feugiat sapien consectetur. Aliquam\n                imperdiet fermentum scelerisque. Nam tristique tincidunt ipsum, eget pharetra orci hendrerit sed.\n                Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc molestie semper lorem et vulputate.\n                Aliquam convallis ex sit amet eleifend pellentesque.ondimentum odio, nec cursus nisi. Sed efficitur ante\n                eu iaculis venenatis. Ut in dictum ante. Nunc eget bibendum ex. Suspendisse facilisis luctus nunc sed\n                auctor. Nunc tincidunt egestas enim, nec condimentum urna laoreet quis. Praesent commodo lacus in turpis\n                maximus sodales.\n\n                Nunc velit lectus, ultricies non consequat nec, egestas lobortis lectus. Sed vitae imperdiet augue, eget\n                pharetra arcu. Pellentesque fringilla magna non nisi euismod, ac feugiat sapien consectetur. Aliquam\n                imperdiet fermentum scelerisque. Nam tristique tincidunt ipsum, eget pharetra orci hendrerit sed.\n                Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc molestie semper lorem et vulputate.\n                Aliquam convallis ex sit amet eleifend pellentesque.</Typography>\n        </Grid><Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{\n            width: '100%',\n            margin: \"auto\",\n            top: 280, right: 0\n        }}>\n            <Box sx={{width: '70%', height: '100%', paddingBottom:'70px'}}>\n                {partyList.map((value, index) => {\n                    return (\n                        <><\n                            ListItem key={index}>\n                            <ListItemButton onClick={()=>{handlePartyDetailsOpen(value)}}>{value}</ListItemButton>\n                        </ListItem>\n                            <Divider color='white'/>\n                        </>\n                    );\n                })}\n            </Box>\n        </Grid>\n        </Grid>\n    );\n\n}\n\nexport default VotationDetails;","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/CandidateDetails.tsx",[],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/PartyDetails.tsx",["187"],[],"import {Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Grid, Typography} from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\n\n\nimport React, {useState} from \"react\";\n\nimport '../App.css'\nimport personalData from \"../imgs/personaldata.png\"\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nconst PartyDetails = () => {\n\n    const [candidateList, setCandidateList] = useState(['candidato1', 'candidato2', 'candidato3', 'candidato4', 'candidato1', 'candidato2', 'candidato3', 'candidato4', 'candidato1', 'candidato2', 'candidato3', 'candidato4', 'candidato1', 'candidato2', 'candidato3', 'candidato4'])\n    const location= useLocation()\n    const navigate= useNavigate()\n    const party= location.state?.party\n    const isAdmin= location.state?.isAdmin\n\n    const handleCandidateDetailsOpen=(value:any)=>{\n        console.log(value)\n        navigate('/votations/votationDetails/partyDetails/candidateDetails',{state: {token: location.state?.token, email: location.state?.email, isAdmin: isAdmin, votation:location.state?.votation, party:location.state?.party, candidate:value}})\n    }\n\n    const partyCards = candidateList.map((value, index) => {\n        return (\n            <>\n                <Card sx={{maxWidth: 345, margin: '20px'}}>\n                    <CardActionArea onClick={()=>{handleCandidateDetailsOpen(value)}}>\n                        <CardMedia\n                            component=\"img\"\n                            height=\"140\"\n                            image={personalData}\n                            alt={value}\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                {value}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                Descrizione breve del candidato\n                                Impegnato nel sociale e attivo nella comunità\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                    {\n                        isAdmin ? null : <CardActions style={{alignItems: 'center'}}>\n                            <Button size=\"large\" style={{color: '#ff3823', width: '100%'}}>Vota Candidato</Button>\n                        </CardActions>\n                    }\n                </Card>\n\n            </>\n        );\n    })\n    const styleForFlexboxWithoutScrollbar = {\n        margin: 0,\n        width: \"100%\",\n    };\n    return (\n        <Grid container direction='row' spacing={5}>\n            {/*<Grid item xs={12} display=\"flex\" sx={{*/}\n            {/*    width: '100%',*/}\n            {/*    margin: \"auto\",*/}\n            {/*    top: 0,*/}\n            {/*    right: 0*/}\n            {/*}}>*/}\n            {/*    <IconButton><KeyboardBackspaceIcon sx={{fontSize: 60, color: '#ffffff'}}/></IconButton>*/}\n            {/*</Grid>*/}\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{\n            width: '100%',\n            margin: \"auto\",\n            top: 150,\n            right: 0\n        }}>\n            <Typography style={{color: '#feac0d', textAlign: 'center', fontSize: '3rem'}}>{party}</Typography>\n        </Grid><Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{\n            width: '100%',\n            margin: \"auto\",\n            top: 65,\n            right: 0\n        }}>\n            <Typography style={{\n                color: '#ffffff',\n                textAlign: 'justify',\n                fontSize: '0.95rem',\n                paddingLeft: '120px',\n                paddingRight: '120px'\n            }}>orem ipsum dolor sit amet,\n                consectetur adipiscing elit. Curabitur quis interdum augue, et euismod lectus. Ut ac ultricies augue.\n                Praesent in ornare elit, a pellentesque libero. Nam euismod mi nec tortor elementum aliquet. Curabitur\n                dictum mi quis rutrum ultricies. Maecenas in diam ut mauris venenatis consectetur. Quisque eu neque ac\n                lacus laoreet tincidunt. Mauris vitae condimentum odio, nec cursus nisi. Sed efficitur ante eu iaculis\n                venenatis. Ut in dictum ante. Nunc eget bibendum ex. Suspendisse facilisis luctus nunc sed auctor. Nunc\n                tincidunt egestas enim, nec condimentum urna laoreet quis. Praesent commodo lacus in turpis maximus\n                sodales.\n\n                Nunc velit lectus, ultricies non consequat nec, egestas lobortis lectus. Sed vitae imperdiet augue, eget\n                pharetra arcu. Pellentesque fringilla magna non nisi euismod, ac feugiat sapien consectetur. Aliquam\n                imperdiet fermentum scelerisque. Nam tristique tincidunt ipsum, eget pharetra orci hendrerit sed.\n                Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc molestie semper lorem et vulputate.\n                Aliquam convallis ex sit amet eleifend pellentesque.ondimentum odio, nec cursus nisi. Sed efficitur ante\n                eu iaculis venenatis. Ut in dictum ante. Nunc eget bibendum ex. Suspendisse facilisis luctus nunc sed\n                auctor. Nunc tincidunt egestas enim, nec condimentum urna laoreet quis. Praesent commodo lacus in turpis\n                maximus sodales.\n\n                Nunc velit lectus, ultricies non consequat nec, egestas lobortis lectus. Sed vitae imperdiet augue, eget\n                pharetra arcu. Pellentesque fringilla magna non nisi euismod, ac feugiat sapien consectetur. Aliquam\n                imperdiet fermentum scelerisque. Nam tristique tincidunt ipsum, eget pharetra orci hendrerit sed.\n                Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc molestie semper lorem et vulputate.\n                Aliquam convallis ex sit amet eleifend pellentesque.</Typography>\n        </Grid>\n            {\n                isAdmin? null : <Grid item xs={12} display=\"flex\" justifyContent='center' alignItems=\"right\">\n                    <Button style={{\n                        borderRadius: 35,\n                        backgroundColor: \"#ff3823\",\n                        padding: \"10px 20px\",\n                        fontSize: \"18px\"\n                    }}\n                            variant=\"contained\">\n                        VOTA Partito\n                    </Button>\n                </Grid>\n            }\n\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{\n            width: '100%',\n            margin: \"auto\",\n            top: 280, right: 0\n        }}>\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                <Box sx={{width: '70%', height: '100%'}}>\n                    <Grid\n                        container\n                        spacing={1}\n                        alignContent=\"center\"\n                        wrap=\"wrap\"\n                        style={styleForFlexboxWithoutScrollbar}\n                    >\n                        {partyCards}\n                    </Grid>\n                </Box>\n            </Grid>\n        </Grid>\n        </Grid>\n    );\n}\n\nexport default PartyDetails;","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Login/Login.tsx",["188","189","190","191"],[],"import React, {useEffect} from 'react';\nimport '../App.css';\nimport {Button, Grid, Typography} from \"@mui/material\";\nimport basquiaPulito from \"../imgs/logo_CivicLife.png\"\nimport {redirect, useNavigate} from \"react-router-dom\";\n\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const testAdmin = true\n\n\n\n\n    const loginWithFacebook = () => {\n        console.log('click sul bottone FACEBOOK')\n        const token = '123456'\n        const email = 'email utente'\n        if(testAdmin){\n            navigate('/home', {state: {token: token, email: email, isAdmin: true}})\n        }\n        else{\n            navigate('/home', {state: {token: token, email: email, isAdmin: false}})\n        }\n    }\n\n\n\n    const loginWithGoogle = () => {\n        console.log('click sul bottone GOOGLE')\n        const token_test = '123456'\n        const email = 'email utente'\n        // if(testAdmin){\n        //     navigate('/home', {state: {token: token_test, email: email, isAdmin: true}})\n        // }\n        // else{\n        //     navigate('/home', {state: {token: token_test, email: email, isAdmin: false}})\n        // }\n    }\n\n\n    const loginWithGithub = () => {\n        console.log('click sul bottone GITHUB')\n        const token = '123456'\n        const email = 'email utente'\n        if(testAdmin){\n            navigate('/home', {state: {token: token, email: email, isAdmin: true}})\n        }\n        else{\n            navigate('/home', {state: {token: token, email: email, isAdmin: false}})\n        }\n    }\n\n    return (\n        <>\n            <Grid container direction=\"row\">\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <img src={basquiaPulito} width=\"320px\" height=\"320px\" alt={'civicLife Logo'}/>\n            </Grid>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Typography style={{color: 'white', textAlign: 'center', fontSize: '4rem'}}>LOGIN</Typography>\n            </Grid>\n        </Grid>\n            <Grid container direction=\"row\">\n            <Grid item xs={4} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" style={{marginTop: '5px'}}>\n                <Button\n                    onClick={() => {\n                        loginWithFacebook();\n                    }}\n                    style={{\n                        borderRadius: 35,\n                        backgroundColor: \"#21b6ae\",\n                        padding: \"10px 20px\",\n                        fontSize: \"25px\"\n                    }}\n                    variant=\"contained\">FACEBOOK</Button>\n            </Grid>\n            <Grid item xs={4} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Button\n                    onClick={() => {\n                        loginWithGoogle();\n                    }}\n                    style={{\n                        borderRadius: 35,\n                        backgroundColor: \"#ff0000\",\n                        padding: \"10px 20px\",\n                        fontSize: \"25px\"\n                    }}\n                    variant=\"contained\">GOOGLE</Button>\n            </Grid>\n            <Grid item xs={4} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Button\n\n                    onClick={() => {\n                        loginWithGithub();\n                    }}\n                    style={{\n                        borderRadius: 35,\n                        backgroundColor: \"black\",\n                        padding: \"10px 20px\",\n                        fontSize: \"25px\"\n                    }}\n                    variant=\"contained\">\n                    GITHUB</Button>\n            </Grid>\n        </Grid>\n        </>\n    );\n}\n\nexport default Login;\n\n","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/MainPage/MainPage.tsx",["192","193"],[],"import {Card, CardActionArea, CardContent, CardMedia, Divider, Grid, Typography} from \"@mui/material\";\nimport React, {useEffect, useState} from \"react\";\nimport '../App.css';\nimport vote from \"../imgs/vote.png\"\nimport personalData from \"../imgs/personaldata.png\"\nimport iniziative from \"../imgs/iniziative.png\"\nimport \"@fontsource/ubuntu-mono\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {exchangeToken, TokenData} from \"../APIs/oauthAPI\";\nimport {getLoggedUser, UserType} from \"../APIs/UsersAPI\";\n\nconst MainPage = () => {\n\n    const location = useLocation();\n    const isAdmin = location.state?.isAdmin;\n    const email = location.state?.email;\n    const token = location.state?.token;\n    const isVisitor = location.state?.isVisitor;\n    const navigate = useNavigate();\n\n    const [tokenData, setTokenData] = useState<TokenData | null>(null);\n    const [firstLoad, setFirstLoad] =useState(true);\n    const [user, setUser] = useState<UserType| null>(null);\n\n    const getTokenData = async (token_cifrato: string) => {\n        const tokenData = await exchangeToken(token_cifrato);\n        console.log('tokenData', tokenData)\n        setTokenData(tokenData)\n    }\n\n    useEffect(() => {\n        if(firstLoad) {\n            if(isVisitor===undefined){\n                if (window.location.href.includes('token=') && tokenData === null) {\n                    const token_cifrato = window.location.href.split(\"token=\")[1].toString()\n                    if (token_cifrato !== \"\") {\n                        getTokenData(token_cifrato)\n                    }\n                } else {\n                    console.log(\"token non presente\")\n                    returnToLogin()\n                }\n            }\n            else{\n                console.log('utente visitatore')\n            }\n        }\n        setFirstLoad(false)\n    })\n\n    const getUserData = async () => {\n        if(tokenData !== null){\n            const user= await getLoggedUser(tokenData)\n            setUser(user)\n        }\n    }\n\n    useEffect(() => {\n        if(tokenData !== null){\n            console.log('qui')\n            getUserData()\n        }\n    }, [tokenData])\n\n    const returnToLogin = () => {\n        return (navigate(\"/\"))\n    }\n\n    const goToVotations = () => {\n\n        if (isAdmin) {\n            navigate('/votationsAdmin', {state: {token: token, email: email, isAdmin: isAdmin}})\n        } else {\n            if (isVisitor) {\n                navigate('/votations', {state: {isVisitor: isVisitor}})\n            } else {\n                navigate('/votations', {state: {token: token, email: email, isAdmin: isAdmin}})\n            }\n        }\n    }\n\n    const goToData = () => {\n        console.log('lo porto ai dati')\n        if(user !== null){\n            console.log('lo porto ai dati di ', user)\n            if (user.admin) {\n                navigate('/usersAdmin', {state: {token: tokenData, user: user}})\n            } else {\n                navigate('/myData', {state: {token: tokenData, user: user}})\n            }\n        }\n\n    }\n\n    const goToInitiatives = () => {\n        navigate('/initiatives', {state: {token: token, email: email, isAdmin: isAdmin}})\n    }\n\n    return (\n        <>\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" sx={{\n                }}>\n                    {user && !isVisitor ?  <Typography style={{color: 'white', textAlign: 'center', fontSize: '3rem'}}>BENVENUTO {user.name} {user.surname}</Typography>\n                    : <Typography style={{color: 'white', textAlign: 'center', fontSize: '3rem'}}>BENVENUTO OSPITE</Typography>}\n\n                </Grid>\n\n                <Grid item xs={6} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Card sx={{width: '60%'}} onClick={goToVotations}>\n                        <CardActionArea>\n                            <Grid container direction=\"column\">\n                                <Grid item display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\n                                      style={{backgroundColor: '#ff5d55'}}>\n                                    <CardMedia\n                                        component=\"img\"\n                                        image={vote}\n                                        sx={{\n                                            width: '45%',\n                                        }}\n                                        alt=\"vote\"/>\n                                </Grid>\n                                <Divider style={{marginTop: '5px'}}/>\n                                <Grid item display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                            {isAdmin ? 'Inserisci Votazioni' : 'Votazioni'}\n                                        </Typography>\n                                    </CardContent>\n                                </Grid>\n                            </Grid>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n                <Grid item xs={6} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Card sx={{width: '60%'}} onClick={goToInitiatives}>\n                        <CardActionArea>\n                            <Grid container direction=\"column\">\n                                <Grid item display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\n                                      style={{backgroundColor: '#f1f6be'}}>\n                                    <CardMedia\n                                        component=\"img\"\n                                        image={iniziative}\n                                        sx={{\n                                            width: '70%',\n                                        }}\n                                        alt=\"iniziative\"/>\n                                </Grid>\n                                <Divider style={{marginTop: '5px'}}/>\n                                <Grid item display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                            {isAdmin ? 'Gestisci iniziative' : 'Iniziative'}\n                                        </Typography>\n                                    </CardContent>\n                                </Grid>\n                            </Grid>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n                {isVisitor ? null :\n                    <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Card\n                        onClick={goToData}\n                        sx={{width: '30%'}}>\n                        <CardActionArea>\n                            <Grid container direction=\"column\">\n                                <Grid item display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\n                                      style={{backgroundColor: '#d4e3fc'}}>\n                                    <CardMedia\n                                        component=\"img\"\n                                        image={personalData}\n                                        sx={{\n                                            width: '60%',\n                                        }}\n                                        alt=\"personalData\"/>\n                                </Grid>\n                                <Divider style={{marginTop: '5px'}}/>\n                                <Grid item display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"div\">\n                                            {isAdmin ? 'Modera utenti' : 'I tuoi Dati'}\n                                        </Typography>\n                                    </CardContent>\n                                </Grid>\n                            </Grid>\n                        </CardActionArea>\n                    </Card>\n                </Grid>\n                }\n\n            </Grid>\n        </>\n    );\n\n}\n\nexport default MainPage;","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/App.tsx",[],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Data/PersonalData.tsx",["194","195","196","197"],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Utils/CustomTextFields.tsx",[],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Utils/UpperButtonMenu.tsx",[],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Data/UsersAdmin.tsx",["198"],[],"import React, {useState} from \"react\";\nimport {Button, Grid, ListItemSecondaryAction, ListItemText, Typography} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nconst UsersAdmin = () => {\n\n    const [usersList, setUsersList] = useState<any[]>(['utente1', 'utente2', 'utente3', 'utente4', 'utente5', 'utente6', 'utente7', 'utente8', 'utente9', 'utente10', 'utente11', 'utente12'])\n    const [selectedUser, setSelectedUser] = useState<any>(null)\n\n    const handleUserClick = (user: any) => {\n        setSelectedUser(user)\n    }\n\n    const handleOperation = () => {\n        console.log('MODIFICO I DATI')\n    }\n\n    return (\n        <Grid container direction=\"row\">\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Typography style={{color: '#feac0d', textAlign: 'center', fontSize: '3rem', position: \"fixed\", top:10}}>Moderazione utenti</Typography>\n            </Grid>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <List sx={{\n                    width: '80%',\n                    overflow: 'auto',\n                    maxHeight: 580,\n                    position:'fixed',\n                    top: 150,\n                    bottom: 100\n                }}>\n                    {usersList.map((value, index) => {\n                        return (\n                            <ListItem key={index} onClick={()=>handleUserClick(value)}>\n                                <AccountCircleIcon fontSize='large' sx={{color: selectedUser === value ? 'green' : 'white'}}/>\n                                <ListItemButton sx={{color: selectedUser === value ? 'green' : 'white'}}>\n                                    <ListItemText primary={<Typography>  {value}</Typography>} secondary={<Typography> email di {value}</Typography>}/>\n                                </ListItemButton>\n                                <ListItemSecondaryAction>STATO</ListItemSecondaryAction>\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Grid>\n\n            <Grid item xs={6} display=\"flex\" justifyContent='center' alignItems=\"right\">\n                <Button style={{\n                    position:'fixed',\n                    bottom: 20,\n                    borderRadius: 35,\n                    backgroundColor: \"red\",\n                    padding: \"10px 20px\",\n                    fontSize: \"18px\"\n                }}\n                        variant=\"contained\"\n                        onClick={() => {\n                            handleOperation()\n                        }}>\n                    Cancella\n                </Button>\n            </Grid>\n            <Grid item xs={6} display=\"flex\" justifyContent='center' alignItems=\"right\">\n                <Button style={{\n                    position:'fixed',\n                    bottom: 20,\n                    borderRadius: 35,\n                    backgroundColor: \"#feac0d\",\n                    padding: \"10px 20px\",\n                    fontSize: \"18px\"\n                }}\n                        variant=\"contained\"\n                        onClick={() => {\n                            handleOperation()\n                        }}>\n                    Silenzia\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\n    export default UsersAdmin;","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/Initiatives.tsx",["199","200","201","202","203","204","205","206"],[],"import {Button, Divider, Grid, Typography,} from \"@mui/material\";\nimport '../App.css'\nimport React, {useState} from \"react\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport List from \"@mui/material/List\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\nconst Initiatives = () => {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const buttons = ['Tutte', 'Mie', 'Sottoscritte']\n    const [allInitiativesList, setAllInitiativesList] = useState<any[]>(['Iniziativa1', 'Iniziativa2', 'Iniziativa3', 'Iniziativa4', 'Iniziativa5', 'Iniziativa6', 'Iniziativa7', 'Iniziativa8', 'Iniziativa9', 'Iniziativa10', 'Iniziativa11', 'Iniziativa12'])\n    const [myInitiativesList, setMyInitiativesList] = useState<any[]>(['Mia Iniziativa1', 'Mia Iniziativa2', 'Mia Iniziativa3', 'Mia Iniziativa4'])\n    const [subcribedInitiativesList, setSubscribedInitiativesList] = useState<any[]>(['sottoscritta1', 'sottoscritta2'])\n    const [showingList, setShowingList] = useState<any[]>(allInitiativesList)\n    const [showModal, setShowModal] = useState(false)\n    const [activeButton, setActiveButton] = useState(buttons[0]);\n    const [clickedInitiative, setClickedInitiative] = useState(null)\n    const isAdmin = location.state?.isAdmin\n\n    const handleInitiativeDetailsOpen = (value: any) => {\n        navigate('/initiativeDetails', {\n            state: {\n                token: location.state?.token,\n                email: location.state?.email,\n                isAdmin: location.state?.isAdmin,\n                initiative: value\n            }\n        })\n    }\n    const handleCreateInitiative = () => {\n        navigate('/createInitiative', {\n            state: {\n                token: location.state?.token,\n                email: location.state?.email,\n                isAdmin: location.state?.isAdmin\n            }\n        })\n    }\n    return (\n        <>\n            <Grid container direction=\"row\" spacing={2}>\n                {!isAdmin ? <UpperButtonMenu first_label={buttons[0]} second_label={buttons[1]} third_label={buttons[2]}\n                                             first_list={allInitiativesList} second_list={myInitiativesList}\n                                             third_list={subcribedInitiativesList} listSetter={setShowingList}\n                                             buttonSetter={setActiveButton}/> :\n                    <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <Typography style={{\n                            color: '#feac0d', textAlign: 'center', fontSize: '3rem', position: 'fixed',\n                            margin: \"auto\",\n                            top: 10,\n                        }}>Amministrazione iniziative</Typography>\n                    </Grid>}\n\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <List sx={{\n                        width: '80%',\n                        overflow: 'auto',\n                        maxHeight: 580,\n                        position: 'fixed',\n                        top: 150,\n                        bottom: 100\n                    }}>\n                        {showingList.map((value, index) => {\n                            return (\n                                <><\n                                    ListItem key={index}>\n                                    <ListItemButton\n                                        onClick={() => handleInitiativeDetailsOpen(value)}>{value}</ListItemButton>\n                                </ListItem>\n                                    <Divider color='white'/>\n                                </>\n                            );\n                        })}\n                    </List>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent='center' alignItems=\"right\">\n                    {\n                        location.state?.isAdmin ?\n                            <Button style={{\n                                position: 'fixed',\n                                bottom: 20,\n                                borderRadius: 35,\n                                backgroundColor: \"red\",\n                                padding: \"18px 36px\",\n                                fontSize: \"15px\"\n                            }}\n                                    variant=\"contained\">\n                                Elimina\n                            </Button>\n                            :\n\n                            <Button\n                                onClick={handleCreateInitiative}\n\n                                style={{\n                                    position: 'fixed',\n                                    bottom: 20,\n                                    marginTop: '15px',\n                                    borderRadius: 35,\n                                    backgroundColor: \"#92d36e\",\n                                    padding: \"18px 36px\",\n                                    fontSize: \"15px\"\n                                }}\n                                variant=\"contained\">\n                                CREA\n                            </Button>\n                    }\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nexport default Initiatives;\n","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/initiativeDetails.tsx",[],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/Votations.tsx",["207","208","209","210","211","212","213"],[],"import {Divider, Grid} from \"@mui/material\";\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport React, {useState} from \"react\";\nimport '../App.css'\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport List from \"@mui/material/List\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\n\nconst Votations = () => {\n    const navigate= useNavigate()\n    const location= useLocation()\n    const buttons = ['Attive', 'Concluse']\n    const [activeList, setActiveList] = useState<any[]>(['votazione1', 'votazione2', 'votazione3', 'votazione4', 'votazione5', 'votazione6', 'votazione7', \"votazione8\", \"votazione9\", \"votazione10\"])\n    const [endedList, setEndedList] = useState<any[]>(['votazione1 conclusa', 'votazione2 conclusa', 'votazione3 conclusa', 'votazione4 conclusa'])\n    const [showingList, setShowingList] = useState<any[]>(activeList)\n    const [clickedVotation, setClickedVotation]= useState(null)\n    const [showModal, setShowModal] = useState(false)\n    const isAdmin= location.state?.isAdmin\n\n    const handleVotationDetailsOpen = (value: any) => {\n        navigate('/votations/votationDetails', {state: {token: location.state?.token, email: location.state?.email, isAdmin: location.state?.isAdmin, votation:value}})\n    }\n\n    return (\n        <Grid container direction=\"row\" spacing={2}>\n            <UpperButtonMenu first_label={buttons[0]} second_label={buttons[1]} third_label={null}\n                             first_list={activeList} second_list={endedList} third_list={null}\n                             listSetter={setShowingList} buttonSetter={null}/>\n\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <List sx={{\n                    width: '80%',\n                    overflow: 'auto',\n                    maxHeight: 580,\n                    position:'fixed',\n                    top: 150,\n                    bottom: 100\n                }}>\n                    {showingList.map((value, index) => {\n                            return (\n                                <><\n                                    ListItem key={index}>\n                                    <ListItemButton\n                                        onClick={() => handleVotationDetailsOpen(value)}>{value}</ListItemButton>\n                                </ListItem>\n                                    <Divider color='white'/>\n                                </>\n                            );\n                        })}\n                </List>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Votations;","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Initiative/InitiativeCreateForm.tsx",["214","215"],[],"import {Button, Chip, Dialog, Divider, Grid, Typography} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport {CssTextField} from \"../Utils/CustomTextFields\";\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport {Dayjs} from \"dayjs\";\nimport {DatePicker, LocalizationProvider} from \"@mui/x-date-pickers\";\nimport {AdapterDayjs} from \"@mui/x-date-pickers/AdapterDayjs\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport ErrorIcon from '@mui/icons-material/Error';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\n\nconst InitiativeCreateForm = () => {\n    const types = ['tipo1', 'tipo2', 'tipo3']\n    const [usersList, setUsersList] = useState<any[]>(['utente1', 'utente2', 'utente3', 'utente4', 'utente5', 'utente6', 'utente7', 'utente8', 'utente9', 'utente10', 'utente11', 'utente12'])\n    const [selectedUsers, setSelectedUsers] = useState<any>([])\n    const [selectedType, setSelectedType] = useState<any>(types[0])\n    const [startDate, setStartDate] = useState<Dayjs | null>(null);\n    const [endDate, setEndDate] = useState<Dayjs | null>(null);\n    const [description, setDescription] = useState<any>(null)\n    const [name, setName] = useState<any>(null)\n    const [location, setLocation] = useState<any>(null)\n    const [open, setOpen] =  useState(false);\n    const [errors, setErrors] = useState<any>([])\n\n    const errorsCheck = () => {\n        setErrors([]);\n        let errors = []\n        if (name && description && location && startDate && endDate && selectedType) {\n            if (!startDate.isBefore(endDate)) {\n                console.log('DATA INIZIO DOPO DATA FINE')\n                errors.push('La data di inizio deve essere precedente alla data di fine')\n            }\n            if (description.length < 20) {\n                console.log('DESCRIZIONE TROPPO CORTA')\n                errors.push('La descrizione deve essere lunga almeno 20 caratteri')\n            }\n        } else {\n            console.log('DATI MANCANTI')\n            errors.push('Compila tutti i campi')\n        }\n        console.log(errors)\n        return errors\n    }\n\n    const handleCreateInitiative = () => {\n        const errorsChecked = errorsCheck()\n        setErrors(errorsChecked)\n        if (errorsChecked.length === 0) {\n            console.log('CREO INIZIATIVA')\n            //TODO: chiamata al backend crea iniziativa\n        }\n        setOpen(true)\n    }\n\n    const handleTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSelectedType(event.target.value);\n    };\n    const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDescription(event.target.value);\n    }\n    const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value);\n    }\n\n    const handleLocationChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setLocation(event.target.value);\n    }\n\n    const handleUserAdd = (user: any) => {\n        if (!selectedUsers.includes(user)) {\n            setSelectedUsers([...selectedUsers, user])\n        }\n    }\n\n    const handleDelete = (userToDelete: any) => () => {\n        setSelectedUsers((users: any[]) => users.filter((user) => user !== userToDelete));\n    };\n\n    const handleDialogClose = () => {\n        setOpen(false);\n    }\n\n    const whiteTypography=(phrase:string) =>{\n        return( <Typography sx={{color: 'white'}} variant=\"h6\" component=\"div\">\n            {phrase}\n        </Typography>)\n    }\n\n    return (\n        <Grid container>\n            {/*    <Grid item xs={12} display=\"flex\" sx={{*/}\n            {/*    width: '100%',*/}\n            {/*    margin: \"auto\",*/}\n            {/*    top: 0,*/}\n            {/*    right: 0*/}\n            {/*}}>*/}\n            {/*    <IconButton><KeyboardBackspaceIcon sx={{fontSize: 60, color: '#ffffff'}}/></IconButton>*/}\n            {/*</Grid>*/}\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Typography style={{color: '#feac0d', textAlign: 'center', fontSize: '3rem'}}>Crea la tua\n                    iniziativa</Typography>\n            </Grid>\n            <Grid container direction='row' spacing={2}>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}, width: '70%'}}\n                                  label={'Nome'} onChange={handleNameChange}/>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}, width: '70%'}}\n                                  label={'Descrizione'} onChange={handleDescriptionChange}/>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}, width: '70%'}}\n                                  label={'Luogo'} onChange={handleLocationChange}/>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <CssTextField sx={{width: '70%', input: {color: 'white'}, style: {color: 'white'}}}\n                                  select\n                                  value={selectedType}\n                                  label='Tipo'\n                                  onChange={handleTypeChange}\n                    >\n                        {\n                            types.map((type) => {\n                                return <MenuItem value={type}>{type}</MenuItem>\n                            })\n                        }\n                    </CssTextField>\n                </Grid>\n                {\n                    selectedUsers.length > 0 ?\n                        <Grid container direction='row'>\n                            {\n                                selectedUsers.map((user: any) => {\n                                    return (\n                                        <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                                            <Chip sx={{backgroundColor: '#feac0d', marginTop: '10px'}}\n                                                  icon={<AccountCircleIcon sx={{color: 'white'}}/>}\n                                                  label={user}\n                                                  onDelete={handleDelete(user)}\n                                            />\n                                        </Grid>)\n                                })\n                            }\n                        </Grid>\n                        :\n                        null\n                }\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <FormControl sx={{width: '70%'}}>\n                        <CssTextField sx={{input: {color: 'white'}, style: {color: 'white'}}}\n                                      select\n                                      label='Organizzatori'\n                                      onChange={handleTypeChange}>\n                            {\n                                usersList.map((user) => {\n                                    return <MenuItem onClick={() => {\n                                        handleUserAdd(user)\n                                    }} value={user}>{user}</MenuItem>\n                                })\n                            }\n                        </CssTextField>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            inputFormat=\"DD/MM/YYYY\"\n                            label=\"Data inizio\"\n                            value={startDate}\n                            onChange={(newValue) => {\n                                setStartDate(newValue);\n                            }}\n                            renderInput={(params) => <CssTextField {...params} sx={{\n                                width: '70%',\n                                input: {color: 'white'},\n                                style: {color: 'white'}\n                            }}/>}\n                        />\n                    </LocalizationProvider>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            inputFormat=\"DD/MM/YYYY\"\n                            label=\"Data fine\"\n                            value={endDate}\n                            onChange={(newValue) => {\n                                setEndDate(newValue);\n                            }}\n                            renderInput={(params) => <CssTextField {...params} sx={{\n                                width: '70%',\n                                input: {color: 'white'},\n                                style: {color: 'white'}\n                            }}/>}\n                        />\n                    </LocalizationProvider>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Button\n                    onClick={handleCreateInitiative}\n                    style={{\n                        marginTop: '15px',\n                        borderRadius: 35,\n                        backgroundColor: \"green\",\n                        padding: \"10px 20px\",\n                        fontSize: \"18px\"\n                    }}\n                    variant=\"contained\">\n                    CREA\n                </Button>\n            </Grid>\n            <Dialog maxWidth={\"sm\"} fullWidth={true} open={open} onClose={handleDialogClose}>\n                <DialogTitle>\n                    {\n                    errors.length>0 ?\n                        <Chip sx={{color: 'red'}}\n                              icon={<ErrorIcon sx={{color: 'red'}}/>}\n                              label={'Errore'}\n                              variant=\"outlined\"\n                        />\n                        :\n                        <Chip sx={{color: 'green'}}\n                              icon={<CheckCircleIcon sx={{color: 'green'}}/>}\n                              label={'Successo'}\n                              variant=\"outlined\"\n                        />\n                    }\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {errors.length > 0 ?\n                            errors.map((error: string) => {\n                                return(<><Typography>{error}</Typography><Divider/></>)\n                            })\n                            :\n                            <Typography>La tua iniziativa è stata creata con successo!</Typography>}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose}>Chiudi</Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    )\n}\n\nexport default InitiativeCreateForm","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Login/LoginChoser.tsx",["216"],[],"import React, {useEffect} from 'react';\nimport '../App.css';\nimport {Button, Grid, Typography} from \"@mui/material\";\nimport basquiaPulito from \"../imgs/logo_CivicLife.png\"\nimport {useNavigate} from \"react-router-dom\";\n\ntype LoginChoserPropsType = {\n    isMobile: boolean\n}\n\nconst LoginChoser = (props: LoginChoserPropsType) => {\n    const navigate = useNavigate();\n    const loginWithService = () => {\n        window.location.assign('http://localhost:8080/login')\n    }\n\n\n    const loginAsVisitor = () => {\n        navigate('/home', {state: {isVisitor: true}})\n    }\n\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <img src={basquiaPulito} width=\"320px\" height=\"320px\" alt={'civicLife Logo'}/>\n                </Grid>\n                <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Typography style={{color: 'white', textAlign: 'center', fontSize: '4rem'}}>LOGIN</Typography>\n                </Grid>\n            </Grid>\n            <Grid container >\n                <Grid item xs={6} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Button\n                        onClick={loginWithService}\n                        style={{\n                            position: 'absolute',\n                            marginBottom: '100px',\n                            borderRadius: 35,\n                            backgroundColor: \"#21b6ae\",\n                            padding: \"18px 36px\",\n                            fontSize: \"25px\"\n                        }}\n                        variant=\"contained\">Accedi</Button>\n                </Grid>\n                <Grid item xs={6} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Button\n                        onClick={loginAsVisitor}\n                        style={{\n                            position: 'absolute',\n                            marginBottom: '100px',\n                            borderRadius: 35,\n                            backgroundColor: \"#feac0d\",\n                            padding: \"18px 36px\",\n                            fontSize: \"25px\"\n                        }}\n                        variant=\"contained\">OSpite</Button>\n                </Grid>\n            </Grid>\n        </>\n\n    );\n}\n\nexport default LoginChoser;\n\n","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/Vote/VotationsAdmin.tsx",["217","218","219","220","221","222"],[],"import {Button, Dialog, Divider, Grid, ListItemText, Typography} from \"@mui/material\";\nimport UpperButtonMenu from \"../Utils/UpperButtonMenu\";\nimport React, {useState} from \"react\";\nimport '../App.css'\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport List from \"@mui/material/List\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogActions from \"@mui/material/DialogActions\";\n\n\nconst VotationsAdmin = () => {\n    const navigate= useNavigate()\n    const location= useLocation()\n    const buttons = ['Attive', 'Concluse']\n    const [clickedVotation, setClickedVotation]= useState(null)\n    const [allVotations, setAllVotations] = useState<any[]>(['votazione1', 'votazione2', 'votazione3', 'votazione4', 'votazione5', 'votazione6', 'votazione7', \"votazione8\", \"votazione9\", \"votazione10\"])\n\n    const handleVotationDetailsOpen = (value: any) => {\n        navigate('/votations/votationDetails', {state: {token: location.state?.token, email: location.state?.email, isAdmin: true, votation:value}})\n    }\n\n    const handleEnableDisable= (value: any) => {\n        console.log('Abilita/Disabilita', value)\n    }\n\n    const handleVotationClick = (value: any) => {\n        setClickedVotation(value)\n    }\n\n    const handleDialogClose = () => {\n        setClickedVotation(null)\n    }\n\n    return (\n        <Grid container direction=\"row\" spacing={2}>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Typography style={{color: '#feac0d', textAlign: 'center', fontSize: '3rem', position: \"fixed\", top:10}}>Moderazione votazioni</Typography>\n            </Grid>\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <List sx={{\n                    width: '80%',\n                    overflow: 'auto',\n                    maxHeight: 580,\n                    position:'fixed',\n                    top: 150,\n                    bottom: 100\n                }}>\n                    {allVotations.map((value, index) => {\n                        return (\n                            <><\n                                ListItem key={index}>\n                                <ListItemButton\n                                    onClick={() => handleVotationClick(value)}>{value}</ListItemButton>\n                            </ListItem>\n                                <Divider color='white'/>\n                            </>\n                        );\n                    })}\n                </List>\n            </Grid>\n            <Dialog maxWidth={\"sm\"} fullWidth={true} open={clickedVotation !== null} onClose={handleDialogClose}>\n                <DialogTitle>Operazioni su votazione</DialogTitle>\n\n                <DialogActions>\n                    <Button onClick={handleDialogClose}>Chiudi</Button>\n                    <Button onClick={()=>handleEnableDisable(clickedVotation)}>Abilita/Disabilita</Button>\n                    <Button onClick={()=>handleVotationDetailsOpen(clickedVotation)}>Visualizza Dettagli</Button>\n                </DialogActions>\n            </Dialog>\n        </Grid>\n    )\n}\n\nexport default VotationsAdmin;","/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/oauthAPI.ts",[],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/APIs/UsersAPI.ts",[],[],"/home/michelestaffieri/Documenti/Taass/CivicLife/CivicLife/frontend/src/SessionExpired.tsx",["223"],[],{"ruleId":"224","severity":1,"message":"225","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":13},{"ruleId":"224","severity":1,"message":"228","line":3,"column":17,"nodeType":"226","messageId":"227","endLine":3,"endColumn":28},{"ruleId":"224","severity":1,"message":"229","line":2,"column":5,"nodeType":"226","messageId":"227","endLine":2,"endColumn":11},{"ruleId":"230","severity":1,"message":"231","line":23,"column":404,"nodeType":"232","messageId":"233","endLine":23,"endColumn":405,"suggestions":"234"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":485,"nodeType":"232","messageId":"233","endLine":23,"endColumn":486,"suggestions":"235"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":550,"nodeType":"232","messageId":"233","endLine":23,"endColumn":551,"suggestions":"236"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":577,"nodeType":"232","messageId":"233","endLine":23,"endColumn":578,"suggestions":"237"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":598,"nodeType":"232","messageId":"233","endLine":23,"endColumn":599,"suggestions":"238"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":636,"nodeType":"232","messageId":"233","endLine":23,"endColumn":637,"suggestions":"239"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":670,"nodeType":"232","messageId":"233","endLine":23,"endColumn":671,"suggestions":"240"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":739,"nodeType":"232","messageId":"233","endLine":23,"endColumn":740,"suggestions":"241"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":762,"nodeType":"232","messageId":"233","endLine":23,"endColumn":763,"suggestions":"242"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":767,"nodeType":"232","messageId":"233","endLine":23,"endColumn":768,"suggestions":"243"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":805,"nodeType":"232","messageId":"233","endLine":23,"endColumn":806,"suggestions":"244"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":818,"nodeType":"232","messageId":"233","endLine":23,"endColumn":819,"suggestions":"245"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":843,"nodeType":"232","messageId":"233","endLine":23,"endColumn":844,"suggestions":"246"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":852,"nodeType":"232","messageId":"233","endLine":23,"endColumn":853,"suggestions":"247"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":885,"nodeType":"232","messageId":"233","endLine":23,"endColumn":886,"suggestions":"248"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":909,"nodeType":"232","messageId":"233","endLine":23,"endColumn":910,"suggestions":"249"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1013,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1014,"suggestions":"250"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1057,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1058,"suggestions":"251"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1078,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1079,"suggestions":"252"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1120,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1121,"suggestions":"253"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1173,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1174,"suggestions":"254"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1270,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1271,"suggestions":"255"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1355,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1356,"suggestions":"256"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1390,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1391,"suggestions":"257"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1419,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1420,"suggestions":"258"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1425,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1426,"suggestions":"259"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1447,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1448,"suggestions":"260"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1456,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1457,"suggestions":"261"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1530,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1531,"suggestions":"262"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1537,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1538,"suggestions":"263"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1552,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1553,"suggestions":"264"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1576,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1577,"suggestions":"265"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1588,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1589,"suggestions":"266"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1596,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1597,"suggestions":"267"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1646,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1647,"suggestions":"268"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1650,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1651,"suggestions":"269"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1703,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1704,"suggestions":"270"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1709,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1710,"suggestions":"271"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1724,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1725,"suggestions":"272"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1728,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1729,"suggestions":"273"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1750,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1751,"suggestions":"274"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1762,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1763,"suggestions":"275"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1823,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1824,"suggestions":"276"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1881,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1882,"suggestions":"277"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1928,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1929,"suggestions":"278"},{"ruleId":"230","severity":1,"message":"231","line":23,"column":1944,"nodeType":"232","messageId":"233","endLine":23,"endColumn":1945,"suggestions":"279"},{"ruleId":"224","severity":1,"message":"280","line":12,"column":23,"nodeType":"226","messageId":"227","endLine":12,"endColumn":34},{"ruleId":"224","severity":1,"message":"281","line":13,"column":27,"nodeType":"226","messageId":"227","endLine":13,"endColumn":43},{"ruleId":"224","severity":1,"message":"282","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"283","line":5,"column":9,"nodeType":"226","messageId":"227","endLine":5,"endColumn":17},{"ruleId":"224","severity":1,"message":"284","line":31,"column":15,"nodeType":"226","messageId":"227","endLine":31,"endColumn":25},{"ruleId":"224","severity":1,"message":"285","line":32,"column":15,"nodeType":"226","messageId":"227","endLine":32,"endColumn":20},{"ruleId":"286","severity":1,"message":"287","line":31,"column":5,"nodeType":"226","endLine":31,"endColumn":14,"suggestions":"288"},{"ruleId":"286","severity":1,"message":"289","line":63,"column":8,"nodeType":"290","endLine":63,"endColumn":19,"suggestions":"291"},{"ruleId":"224","severity":1,"message":"292","line":15,"column":9,"nodeType":"226","messageId":"227","endLine":15,"endColumn":19},{"ruleId":"224","severity":1,"message":"293","line":24,"column":22,"nodeType":"226","messageId":"227","endLine":24,"endColumn":33},{"ruleId":"224","severity":1,"message":"294","line":25,"column":25,"nodeType":"226","messageId":"227","endLine":25,"endColumn":39},{"ruleId":"224","severity":1,"message":"295","line":26,"column":23,"nodeType":"226","messageId":"227","endLine":26,"endColumn":35},{"ruleId":"224","severity":1,"message":"296","line":10,"column":23,"nodeType":"226","messageId":"227","endLine":10,"endColumn":35},{"ruleId":"224","severity":1,"message":"297","line":14,"column":32,"nodeType":"226","messageId":"227","endLine":14,"endColumn":53},{"ruleId":"224","severity":1,"message":"298","line":15,"column":31,"nodeType":"226","messageId":"227","endLine":15,"endColumn":51},{"ruleId":"224","severity":1,"message":"299","line":16,"column":38,"nodeType":"226","messageId":"227","endLine":16,"endColumn":66},{"ruleId":"224","severity":1,"message":"300","line":18,"column":12,"nodeType":"226","messageId":"227","endLine":18,"endColumn":21},{"ruleId":"224","severity":1,"message":"301","line":18,"column":23,"nodeType":"226","messageId":"227","endLine":18,"endColumn":35},{"ruleId":"224","severity":1,"message":"302","line":19,"column":12,"nodeType":"226","messageId":"227","endLine":19,"endColumn":24},{"ruleId":"224","severity":1,"message":"303","line":20,"column":12,"nodeType":"226","messageId":"227","endLine":20,"endColumn":29},{"ruleId":"224","severity":1,"message":"304","line":20,"column":31,"nodeType":"226","messageId":"227","endLine":20,"endColumn":51},{"ruleId":"224","severity":1,"message":"305","line":15,"column":24,"nodeType":"226","messageId":"227","endLine":15,"endColumn":37},{"ruleId":"224","severity":1,"message":"306","line":16,"column":23,"nodeType":"226","messageId":"227","endLine":16,"endColumn":35},{"ruleId":"224","severity":1,"message":"307","line":18,"column":12,"nodeType":"226","messageId":"227","endLine":18,"endColumn":27},{"ruleId":"224","severity":1,"message":"308","line":18,"column":29,"nodeType":"226","messageId":"227","endLine":18,"endColumn":47},{"ruleId":"224","severity":1,"message":"300","line":19,"column":12,"nodeType":"226","messageId":"227","endLine":19,"endColumn":21},{"ruleId":"224","severity":1,"message":"301","line":19,"column":23,"nodeType":"226","messageId":"227","endLine":19,"endColumn":35},{"ruleId":"224","severity":1,"message":"309","line":20,"column":11,"nodeType":"226","messageId":"227","endLine":20,"endColumn":18},{"ruleId":"224","severity":1,"message":"296","line":19,"column":23,"nodeType":"226","messageId":"227","endLine":19,"endColumn":35},{"ruleId":"224","severity":1,"message":"310","line":88,"column":11,"nodeType":"226","messageId":"227","endLine":88,"endColumn":26},{"ruleId":"224","severity":1,"message":"282","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"224","severity":1,"message":"311","line":1,"column":40,"nodeType":"226","messageId":"227","endLine":1,"endColumn":52},{"ruleId":"224","severity":1,"message":"312","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":23},{"ruleId":"224","severity":1,"message":"313","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":21},{"ruleId":"224","severity":1,"message":"314","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":25},{"ruleId":"224","severity":1,"message":"315","line":18,"column":11,"nodeType":"226","messageId":"227","endLine":18,"endColumn":18},{"ruleId":"224","severity":1,"message":"316","line":20,"column":26,"nodeType":"226","messageId":"227","endLine":20,"endColumn":41},{"ruleId":"286","severity":1,"message":"317","line":8,"column":5,"nodeType":"226","endLine":8,"endColumn":14,"suggestions":"318"},"@typescript-eslint/no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'createTheme' is defined but never used.","'Button' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],["341","342"],["343","344"],["345","346"],["347","348"],["349","350"],["351","352"],["353","354"],["355","356"],["357","358"],["359","360"],["361","362"],["363","364"],["365","366"],["367","368"],["369","370"],["371","372"],["373","374"],["375","376"],["377","378"],["379","380"],["381","382"],["383","384"],["385","386"],["387","388"],["389","390"],["391","392"],["393","394"],["395","396"],["397","398"],["399","400"],["401","402"],["403","404"],["405","406"],["407","408"],["409","410"],"'setPatyList' is assigned a value but never used.","'setCandidateList' is assigned a value but never used.","'useEffect' is defined but never used.","'redirect' is defined but never used.","'token_test' is assigned a value but never used.","'email' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFirstLoad'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [firstLoad, isVisitor, tokenData, returnToLogin] as a second argument to the useEffect Hook.",["411"],"React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["412"],"'StatusType' is defined but never used.","'setDataList' is assigned a value but never used.","'setvaxinesList' is assigned a value but never used.","'setBonusList' is assigned a value but never used.","'setUsersList' is assigned a value but never used.","'setAllInitiativesList' is assigned a value but never used.","'setMyInitiativesList' is assigned a value but never used.","'setSubscribedInitiativesList' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'activeButton' is assigned a value but never used.","'clickedInitiative' is assigned a value but never used.","'setClickedInitiative' is assigned a value but never used.","'setActiveList' is assigned a value but never used.","'setEndedList' is assigned a value but never used.","'clickedVotation' is assigned a value but never used.","'setClickedVotation' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'whiteTypography' is assigned a value but never used.","'ListItemText' is defined but never used.","'UpperButtonMenu' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'buttons' is assigned a value but never used.","'setAllVotations' is assigned a value but never used.","React Hook useEffect contains a call to 'setErrorReason'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["413"],{"messageId":"414","fix":"415","desc":"416"},{"messageId":"417","fix":"418","desc":"419"},{"messageId":"414","fix":"420","desc":"416"},{"messageId":"417","fix":"421","desc":"419"},{"messageId":"414","fix":"422","desc":"416"},{"messageId":"417","fix":"423","desc":"419"},{"messageId":"414","fix":"424","desc":"416"},{"messageId":"417","fix":"425","desc":"419"},{"messageId":"414","fix":"426","desc":"416"},{"messageId":"417","fix":"427","desc":"419"},{"messageId":"414","fix":"428","desc":"416"},{"messageId":"417","fix":"429","desc":"419"},{"messageId":"414","fix":"430","desc":"416"},{"messageId":"417","fix":"431","desc":"419"},{"messageId":"414","fix":"432","desc":"416"},{"messageId":"417","fix":"433","desc":"419"},{"messageId":"414","fix":"434","desc":"416"},{"messageId":"417","fix":"435","desc":"419"},{"messageId":"414","fix":"436","desc":"416"},{"messageId":"417","fix":"437","desc":"419"},{"messageId":"414","fix":"438","desc":"416"},{"messageId":"417","fix":"439","desc":"419"},{"messageId":"414","fix":"440","desc":"416"},{"messageId":"417","fix":"441","desc":"419"},{"messageId":"414","fix":"442","desc":"416"},{"messageId":"417","fix":"443","desc":"419"},{"messageId":"414","fix":"444","desc":"416"},{"messageId":"417","fix":"445","desc":"419"},{"messageId":"414","fix":"446","desc":"416"},{"messageId":"417","fix":"447","desc":"419"},{"messageId":"414","fix":"448","desc":"416"},{"messageId":"417","fix":"449","desc":"419"},{"messageId":"414","fix":"450","desc":"416"},{"messageId":"417","fix":"451","desc":"419"},{"messageId":"414","fix":"452","desc":"416"},{"messageId":"417","fix":"453","desc":"419"},{"messageId":"414","fix":"454","desc":"416"},{"messageId":"417","fix":"455","desc":"419"},{"messageId":"414","fix":"456","desc":"416"},{"messageId":"417","fix":"457","desc":"419"},{"messageId":"414","fix":"458","desc":"416"},{"messageId":"417","fix":"459","desc":"419"},{"messageId":"414","fix":"460","desc":"416"},{"messageId":"417","fix":"461","desc":"419"},{"messageId":"414","fix":"462","desc":"416"},{"messageId":"417","fix":"463","desc":"419"},{"messageId":"414","fix":"464","desc":"416"},{"messageId":"417","fix":"465","desc":"419"},{"messageId":"414","fix":"466","desc":"416"},{"messageId":"417","fix":"467","desc":"419"},{"messageId":"414","fix":"468","desc":"416"},{"messageId":"417","fix":"469","desc":"419"},{"messageId":"414","fix":"470","desc":"416"},{"messageId":"417","fix":"471","desc":"419"},{"messageId":"414","fix":"472","desc":"416"},{"messageId":"417","fix":"473","desc":"419"},{"messageId":"414","fix":"474","desc":"416"},{"messageId":"417","fix":"475","desc":"419"},{"messageId":"414","fix":"476","desc":"416"},{"messageId":"417","fix":"477","desc":"419"},{"messageId":"414","fix":"478","desc":"416"},{"messageId":"417","fix":"479","desc":"419"},{"messageId":"414","fix":"480","desc":"416"},{"messageId":"417","fix":"481","desc":"419"},{"messageId":"414","fix":"482","desc":"416"},{"messageId":"417","fix":"483","desc":"419"},{"messageId":"414","fix":"484","desc":"416"},{"messageId":"417","fix":"485","desc":"419"},{"messageId":"414","fix":"486","desc":"416"},{"messageId":"417","fix":"487","desc":"419"},{"messageId":"414","fix":"488","desc":"416"},{"messageId":"417","fix":"489","desc":"419"},{"messageId":"414","fix":"490","desc":"416"},{"messageId":"417","fix":"491","desc":"419"},{"messageId":"414","fix":"492","desc":"416"},{"messageId":"417","fix":"493","desc":"419"},{"messageId":"414","fix":"494","desc":"416"},{"messageId":"417","fix":"495","desc":"419"},{"messageId":"414","fix":"496","desc":"416"},{"messageId":"417","fix":"497","desc":"419"},{"messageId":"414","fix":"498","desc":"416"},{"messageId":"417","fix":"499","desc":"419"},{"messageId":"414","fix":"500","desc":"416"},{"messageId":"417","fix":"501","desc":"419"},{"messageId":"414","fix":"502","desc":"416"},{"messageId":"417","fix":"503","desc":"419"},{"messageId":"414","fix":"504","desc":"416"},{"messageId":"417","fix":"505","desc":"419"},{"messageId":"414","fix":"506","desc":"416"},{"messageId":"417","fix":"507","desc":"419"},{"messageId":"414","fix":"508","desc":"416"},{"messageId":"417","fix":"509","desc":"419"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},"removeEscape",{"range":"516","text":"517"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"518","text":"519"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"520","text":"517"},{"range":"521","text":"519"},{"range":"522","text":"517"},{"range":"523","text":"519"},{"range":"524","text":"517"},{"range":"525","text":"519"},{"range":"526","text":"517"},{"range":"527","text":"519"},{"range":"528","text":"517"},{"range":"529","text":"519"},{"range":"530","text":"517"},{"range":"531","text":"519"},{"range":"532","text":"517"},{"range":"533","text":"519"},{"range":"534","text":"517"},{"range":"535","text":"519"},{"range":"536","text":"517"},{"range":"537","text":"519"},{"range":"538","text":"517"},{"range":"539","text":"519"},{"range":"540","text":"517"},{"range":"541","text":"519"},{"range":"542","text":"517"},{"range":"543","text":"519"},{"range":"544","text":"517"},{"range":"545","text":"519"},{"range":"546","text":"517"},{"range":"547","text":"519"},{"range":"548","text":"517"},{"range":"549","text":"519"},{"range":"550","text":"517"},{"range":"551","text":"519"},{"range":"552","text":"517"},{"range":"553","text":"519"},{"range":"554","text":"517"},{"range":"555","text":"519"},{"range":"556","text":"517"},{"range":"557","text":"519"},{"range":"558","text":"517"},{"range":"559","text":"519"},{"range":"560","text":"517"},{"range":"561","text":"519"},{"range":"562","text":"517"},{"range":"563","text":"519"},{"range":"564","text":"517"},{"range":"565","text":"519"},{"range":"566","text":"517"},{"range":"567","text":"519"},{"range":"568","text":"517"},{"range":"569","text":"519"},{"range":"570","text":"517"},{"range":"571","text":"519"},{"range":"572","text":"517"},{"range":"573","text":"519"},{"range":"574","text":"517"},{"range":"575","text":"519"},{"range":"576","text":"517"},{"range":"577","text":"519"},{"range":"578","text":"517"},{"range":"579","text":"519"},{"range":"580","text":"517"},{"range":"581","text":"519"},{"range":"582","text":"517"},{"range":"583","text":"519"},{"range":"584","text":"517"},{"range":"585","text":"519"},{"range":"586","text":"517"},{"range":"587","text":"519"},{"range":"588","text":"517"},{"range":"589","text":"519"},{"range":"590","text":"517"},{"range":"591","text":"519"},{"range":"592","text":"517"},{"range":"593","text":"519"},{"range":"594","text":"517"},{"range":"595","text":"519"},{"range":"596","text":"517"},{"range":"597","text":"519"},{"range":"598","text":"517"},{"range":"599","text":"519"},{"range":"600","text":"517"},{"range":"601","text":"519"},{"range":"602","text":"517"},{"range":"603","text":"519"},{"range":"604","text":"517"},{"range":"605","text":"519"},{"range":"606","text":"517"},{"range":"607","text":"519"},{"range":"608","text":"517"},{"range":"609","text":"519"},"Add dependencies array: [firstLoad, isVisitor, tokenData, returnToLogin]",{"range":"610","text":"611"},"Update the dependencies array to be: [getUserData, tokenData]",{"range":"612","text":"613"},"Add dependencies array: []",{"range":"614","text":"615"},[1011,1012],"",[1011,1011],"\\",[1092,1093],[1092,1092],[1157,1158],[1157,1157],[1184,1185],[1184,1184],[1205,1206],[1205,1205],[1243,1244],[1243,1243],[1277,1278],[1277,1277],[1346,1347],[1346,1346],[1369,1370],[1369,1369],[1374,1375],[1374,1374],[1412,1413],[1412,1412],[1425,1426],[1425,1425],[1450,1451],[1450,1450],[1459,1460],[1459,1459],[1492,1493],[1492,1492],[1516,1517],[1516,1516],[1620,1621],[1620,1620],[1664,1665],[1664,1664],[1685,1686],[1685,1685],[1727,1728],[1727,1727],[1780,1781],[1780,1780],[1877,1878],[1877,1877],[1962,1963],[1962,1962],[1997,1998],[1997,1997],[2026,2027],[2026,2026],[2032,2033],[2032,2032],[2054,2055],[2054,2054],[2063,2064],[2063,2063],[2137,2138],[2137,2137],[2144,2145],[2144,2144],[2159,2160],[2159,2159],[2183,2184],[2183,2183],[2195,2196],[2195,2195],[2203,2204],[2203,2203],[2253,2254],[2253,2253],[2257,2258],[2257,2257],[2310,2311],[2310,2310],[2316,2317],[2316,2316],[2331,2332],[2331,2331],[2335,2336],[2335,2335],[2357,2358],[2357,2357],[2369,2370],[2369,2369],[2430,2431],[2430,2430],[2488,2489],[2488,2488],[2535,2536],[2535,2535],[2551,2552],[2551,2551],[1843,1843],", [firstLoad, isVisitor, tokenData, returnToLogin]",[2142,2153],"[getUserData, tokenData]",[521,521],", []"]